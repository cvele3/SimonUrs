
Simon.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003490  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000036  00800060  00003490  00003524  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000091  00800096  00800096  0000355a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000355a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000358c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000268  00000000  00000000  000035c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000072e5  00000000  00000000  00003830  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ccd  00000000  00000000  0000ab15  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000204d  00000000  00000000  0000b7e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000958  00000000  00000000  0000d830  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d84  00000000  00000000  0000e188  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000410c  00000000  00000000  0000ef0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  00013018  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__ctors_end>
       4:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
       8:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
       c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      10:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      14:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      18:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      1c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      20:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      24:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      28:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      2c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      30:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      34:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      38:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      3c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      40:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      44:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      48:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      4c:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      50:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__bad_interrupt>
      54:	05 a8       	ldd	r0, Z+53	; 0x35
      56:	4c cd       	rjmp	.-1384   	; 0xfffffaf0 <__eeprom_end+0xff7efaf0>
      58:	b2 d4       	rcall	.+2404   	; 0x9be <__stack+0x55f>
      5a:	4e b9       	out	0x0e, r20	; 14
      5c:	38 36       	cpi	r19, 0x68	; 104
      5e:	a9 02       	muls	r26, r25
      60:	0c 50       	subi	r16, 0x0C	; 12
      62:	b9 91       	ld	r27, Y+
      64:	86 88       	ldd	r8, Z+22	; 0x16
      66:	08 3c       	cpi	r16, 0xC8	; 200
      68:	a6 aa       	std	Z+54, r10	; 0x36
      6a:	aa 2a       	or	r10, r26
      6c:	be 00       	.word	0x00be	; ????
      6e:	00 00       	nop
      70:	80 3f       	cpi	r24, 0xF0	; 240

00000072 <BigFont>:
      72:	10 10 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
	...
      9a:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
      aa:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
      ba:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
      d6:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
      e6:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
      f6:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
     106:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
     116:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     126:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     136:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     146:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     156:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     17a:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     18a:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     19a:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     1aa:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     1ba:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     1ca:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     1da:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     1ea:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     20a:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     222:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     24a:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     25a:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     26a:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     27a:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     28a:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     29a:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     2aa:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     2ba:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     2ca:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     2da:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     2ea:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     2fa:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     30a:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     31a:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     32a:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     33a:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     34a:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     35a:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     36a:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     37a:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     38a:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     39a:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     3aa:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     3ba:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3ca:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3da:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3ea:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     3fa:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     40a:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     41a:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     42a:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     43a:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     44a:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     45a:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     46a:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     47a:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     48a:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     49a:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     4aa:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     4ba:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     4ca:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4da:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     4ea:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     4fa:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     50a:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     51a:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     52a:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     53a:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     54a:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     55a:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     56a:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     57a:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     58a:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     59a:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     5aa:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     5ba:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     5ca:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     5da:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     5ea:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     5fa:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     60a:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     61a:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     62a:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     63a:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     64a:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     65a:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     66a:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     67a:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     68a:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     69a:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     6aa:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     6ba:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     6ca:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6da:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     6ea:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     6fa:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     70a:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     71a:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     72a:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     73a:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     74a:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     75a:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     76a:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     77a:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     78a:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     79a:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     7aa:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     7ba:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     7ca:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     7da:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     7ea:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     7fa:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     80a:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     81a:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     82a:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     83a:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     872:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     8a2:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     8ba:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     8ca:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     8e2:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     8fa:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     90a:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     922:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     93a:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     94a:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     962:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     972:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     982:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     99a:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     9aa:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     9ba:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     9ca:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     9da:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     9ea:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     9fa:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     a0a:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     a22:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     a42:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     a62:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     a82:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     a92:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     aa2:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     ab2:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ac2:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     ae2:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     afa:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     b0a:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     b22:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     b42:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     b62:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     b82:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     ba2:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     bb2:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     bc2:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     bda:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     bea:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     bfa:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     c0a:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     c1a:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     c2a:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     c3a:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000c56 <__ctors_start>:
     c56:	a7 0f       	add	r26, r23

00000c58 <__ctors_end>:
     c58:	11 24       	eor	r1, r1
     c5a:	1f be       	out	0x3f, r1	; 63
     c5c:	cf e5       	ldi	r28, 0x5F	; 95
     c5e:	d4 e0       	ldi	r29, 0x04	; 4
     c60:	de bf       	out	0x3e, r29	; 62
     c62:	cd bf       	out	0x3d, r28	; 61

00000c64 <__do_copy_data>:
     c64:	10 e0       	ldi	r17, 0x00	; 0
     c66:	a0 e6       	ldi	r26, 0x60	; 96
     c68:	b0 e0       	ldi	r27, 0x00	; 0
     c6a:	e0 e9       	ldi	r30, 0x90	; 144
     c6c:	f4 e3       	ldi	r31, 0x34	; 52
     c6e:	02 c0       	rjmp	.+4      	; 0xc74 <__do_copy_data+0x10>
     c70:	05 90       	lpm	r0, Z+
     c72:	0d 92       	st	X+, r0
     c74:	a6 39       	cpi	r26, 0x96	; 150
     c76:	b1 07       	cpc	r27, r17
     c78:	d9 f7       	brne	.-10     	; 0xc70 <__do_copy_data+0xc>

00000c7a <__do_clear_bss>:
     c7a:	21 e0       	ldi	r18, 0x01	; 1
     c7c:	a6 e9       	ldi	r26, 0x96	; 150
     c7e:	b0 e0       	ldi	r27, 0x00	; 0
     c80:	01 c0       	rjmp	.+2      	; 0xc84 <.do_clear_bss_start>

00000c82 <.do_clear_bss_loop>:
     c82:	1d 92       	st	X+, r1

00000c84 <.do_clear_bss_start>:
     c84:	a7 32       	cpi	r26, 0x27	; 39
     c86:	b2 07       	cpc	r27, r18
     c88:	e1 f7       	brne	.-8      	; 0xc82 <.do_clear_bss_loop>

00000c8a <__do_global_ctors>:
     c8a:	16 e0       	ldi	r17, 0x06	; 6
     c8c:	cc e2       	ldi	r28, 0x2C	; 44
     c8e:	d6 e0       	ldi	r29, 0x06	; 6
     c90:	04 c0       	rjmp	.+8      	; 0xc9a <__do_global_ctors+0x10>
     c92:	21 97       	sbiw	r28, 0x01	; 1
     c94:	fe 01       	movw	r30, r28
     c96:	0e 94 b6 19 	call	0x336c	; 0x336c <__tablejump2__>
     c9a:	cb 32       	cpi	r28, 0x2B	; 43
     c9c:	d1 07       	cpc	r29, r17
     c9e:	c9 f7       	brne	.-14     	; 0xc92 <__do_global_ctors+0x8>
     ca0:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <main>
     ca4:	0c 94 46 1a 	jmp	0x348c	; 0x348c <_exit>

00000ca8 <__bad_interrupt>:
     ca8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000cac <fastbitmap_1bit>:
		r20:r21 fg color 
		r18:r19 bg color
	*/

	/* this block sets up the TOGGLE_WR_FAST registers r30:r31 */
	in r26, _SFR_IO_ADDR(WR_PORT)
     cac:	a5 b3       	in	r26, 0x15	; 21
	mov r27, r26
     cae:	ba 2f       	mov	r27, r26
	set
     cb0:	68 94       	set
	bld r26,WR_PIN
     cb2:	a7 f9       	bld	r26, 7
	clt
     cb4:	e8 94       	clt
	bld r27,WR_PIN
     cb6:	b7 f9       	bld	r27, 7
	
	movw r30, r22
     cb8:	fb 01       	movw	r30, r22

00000cba <FB1BIT_LOOP>:

FB1BIT_LOOP:

	LPM r0, Z+
     cba:	05 90       	lpm	r0, Z+

	PLOT_MONO_PIXEL r0,7
     cbc:	07 fa       	bst	r0, 7
     cbe:	1e f4       	brtc	.+6      	; 0xcc6 <FB1BIT_LOOP+0xc>
     cc0:	4b bb       	out	0x1b, r20	; 27
     cc2:	52 bb       	out	0x12, r21	; 18
     cc4:	02 c0       	rjmp	.+4      	; 0xcca <FB1BIT_LOOP+0x10>
     cc6:	2b bb       	out	0x1b, r18	; 27
     cc8:	32 bb       	out	0x12, r19	; 18
     cca:	b5 bb       	out	0x15, r27	; 21
     ccc:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,6
     cce:	06 fa       	bst	r0, 6
     cd0:	1e f4       	brtc	.+6      	; 0xcd8 <FB1BIT_LOOP+0x1e>
     cd2:	4b bb       	out	0x1b, r20	; 27
     cd4:	52 bb       	out	0x12, r21	; 18
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <FB1BIT_LOOP+0x22>
     cd8:	2b bb       	out	0x1b, r18	; 27
     cda:	32 bb       	out	0x12, r19	; 18
     cdc:	b5 bb       	out	0x15, r27	; 21
     cde:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,5
     ce0:	05 fa       	bst	r0, 5
     ce2:	1e f4       	brtc	.+6      	; 0xcea <FB1BIT_LOOP+0x30>
     ce4:	4b bb       	out	0x1b, r20	; 27
     ce6:	52 bb       	out	0x12, r21	; 18
     ce8:	02 c0       	rjmp	.+4      	; 0xcee <FB1BIT_LOOP+0x34>
     cea:	2b bb       	out	0x1b, r18	; 27
     cec:	32 bb       	out	0x12, r19	; 18
     cee:	b5 bb       	out	0x15, r27	; 21
     cf0:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,4
     cf2:	04 fa       	bst	r0, 4
     cf4:	1e f4       	brtc	.+6      	; 0xcfc <FB1BIT_LOOP+0x42>
     cf6:	4b bb       	out	0x1b, r20	; 27
     cf8:	52 bb       	out	0x12, r21	; 18
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <FB1BIT_LOOP+0x46>
     cfc:	2b bb       	out	0x1b, r18	; 27
     cfe:	32 bb       	out	0x12, r19	; 18
     d00:	b5 bb       	out	0x15, r27	; 21
     d02:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,3
     d04:	03 fa       	bst	r0, 3
     d06:	1e f4       	brtc	.+6      	; 0xd0e <FB1BIT_LOOP+0x54>
     d08:	4b bb       	out	0x1b, r20	; 27
     d0a:	52 bb       	out	0x12, r21	; 18
     d0c:	02 c0       	rjmp	.+4      	; 0xd12 <FB1BIT_LOOP+0x58>
     d0e:	2b bb       	out	0x1b, r18	; 27
     d10:	32 bb       	out	0x12, r19	; 18
     d12:	b5 bb       	out	0x15, r27	; 21
     d14:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,2
     d16:	02 fa       	bst	r0, 2
     d18:	1e f4       	brtc	.+6      	; 0xd20 <FB1BIT_LOOP+0x66>
     d1a:	4b bb       	out	0x1b, r20	; 27
     d1c:	52 bb       	out	0x12, r21	; 18
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <FB1BIT_LOOP+0x6a>
     d20:	2b bb       	out	0x1b, r18	; 27
     d22:	32 bb       	out	0x12, r19	; 18
     d24:	b5 bb       	out	0x15, r27	; 21
     d26:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,1
     d28:	01 fa       	bst	r0, 1
     d2a:	1e f4       	brtc	.+6      	; 0xd32 <FB1BIT_LOOP+0x78>
     d2c:	4b bb       	out	0x1b, r20	; 27
     d2e:	52 bb       	out	0x12, r21	; 18
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <FB1BIT_LOOP+0x7c>
     d32:	2b bb       	out	0x1b, r18	; 27
     d34:	32 bb       	out	0x12, r19	; 18
     d36:	b5 bb       	out	0x15, r27	; 21
     d38:	a5 bb       	out	0x15, r26	; 21
	PLOT_MONO_PIXEL r0,0
     d3a:	00 fa       	bst	r0, 0
     d3c:	1e f4       	brtc	.+6      	; 0xd44 <FB1BIT_LOOP+0x8a>
     d3e:	4b bb       	out	0x1b, r20	; 27
     d40:	52 bb       	out	0x12, r21	; 18
     d42:	02 c0       	rjmp	.+4      	; 0xd48 <FB1BIT_LOOP+0x8e>
     d44:	2b bb       	out	0x1b, r18	; 27
     d46:	32 bb       	out	0x12, r19	; 18
     d48:	b5 bb       	out	0x15, r27	; 21
     d4a:	a5 bb       	out	0x15, r26	; 21

	SUB16 r24,r25,1
     d4c:	81 50       	subi	r24, 0x01	; 1
     d4e:	90 40       	sbci	r25, 0x00	; 0

	cpi r24,0
     d50:	80 30       	cpi	r24, 0x00	; 0
	cpc r25,r1
     d52:	91 05       	cpc	r25, r1
	breq FB1BIT_DONE
     d54:	11 f0       	breq	.+4      	; 0xd5a <FB1BIT_DONE>
	jmp FB1BIT_LOOP
     d56:	0c 94 5d 06 	jmp	0xcba	; 0xcba <FB1BIT_LOOP>

00000d5a <FB1BIT_DONE>:


FB1BIT_DONE:

	ret;
     d5a:	08 95       	ret

00000d5c <fastbitmap_16bit>:
		r24:r25 lenght in pixels/words
		r22:r23 pointer to data
	*/

	/* this block sets up the TOGGLE_WR_FAST registers r30:r31 */
	in r26, _SFR_IO_ADDR(WR_PORT)
     d5c:	a5 b3       	in	r26, 0x15	; 21
	mov r27, r26
     d5e:	ba 2f       	mov	r27, r26
	set
     d60:	68 94       	set
	bld r26,WR_PIN
     d62:	a7 f9       	bld	r26, 7
	clt
     d64:	e8 94       	clt
	bld r27,WR_PIN
     d66:	b7 f9       	bld	r27, 7
	
	movw r30, r22
     d68:	fb 01       	movw	r30, r22

00000d6a <FB16BIT_LOOP>:

FB16BIT_LOOP:

	
	LPM r0, Z+	
     d6a:	05 90       	lpm	r0, Z+
	out DPHIO, r0	
     d6c:	02 ba       	out	0x12, r0	; 18
	LPM r0, Z+	
     d6e:	05 90       	lpm	r0, Z+
	out DPLIO, r0
     d70:	0b ba       	out	0x1b, r0	; 27

	TOGGLE_WR_FAST r27,r26	// place a pixel!
     d72:	b5 bb       	out	0x15, r27	; 21
     d74:	a5 bb       	out	0x15, r26	; 21

	SUB16 r24,r25,1
     d76:	81 50       	subi	r24, 0x01	; 1
     d78:	90 40       	sbci	r25, 0x00	; 0

	cpi r24,0
     d7a:	80 30       	cpi	r24, 0x00	; 0
	cpc r25,r1
     d7c:	91 05       	cpc	r25, r1
	breq FB16BIT_DONE
     d7e:	11 f0       	breq	.+4      	; 0xd84 <FB16BIT_DONE>
	jmp FB16BIT_LOOP
     d80:	0c 94 b5 06 	jmp	0xd6a	; 0xd6a <FB16BIT_LOOP>

00000d84 <FB16BIT_DONE>:


FB16BIT_DONE:

	ret;
     d84:	08 95       	ret

00000d86 <fastbitmap_pb565>:
		r24:r25 data
		
	*/

	/* this block sets up the TOGGLE_WR_FAST registers r30:r31 */
	in r26, _SFR_IO_ADDR(WR_PORT)
     d86:	a5 b3       	in	r26, 0x15	; 21
	mov r27, r26
     d88:	ba 2f       	mov	r27, r26
	set
     d8a:	68 94       	set
	bld r26,WR_PIN
     d8c:	a7 f9       	bld	r26, 7
	clt
     d8e:	e8 94       	clt
	bld r27,WR_PIN
     d90:	b7 f9       	bld	r27, 7
	
	movw r30, r24
     d92:	fc 01       	movw	r30, r24

	clr r1
     d94:	11 24       	eor	r1, r1

00000d96 <PB565BIT_LOOP>:

PB565BIT_LOOP:
	
	LPM r18, Z+	
     d96:	25 91       	lpm	r18, Z+
	cpi r18,0
     d98:	20 30       	cpi	r18, 0x00	; 0
	breq PB565BIT_DONE
     d9a:	a9 f0       	breq	.+42     	; 0xdc6 <PB565BIT_DONE>
	
	bst r18,7
     d9c:	27 fb       	bst	r18, 7
	brtc PB565PLAIN
     d9e:	56 f4       	brtc	.+20     	; 0xdb4 <PB565PLAIN>
	
	// compressed loop.
	andi r18,0x7F
     da0:	2f 77       	andi	r18, 0x7F	; 127
	LPM r0, Z+
     da2:	05 90       	lpm	r0, Z+
	out DPHIO, r0
     da4:	02 ba       	out	0x12, r0	; 18
	LPM r0, Z+
     da6:	05 90       	lpm	r0, Z+
	out DPLIO, r0
     da8:	0b ba       	out	0x1b, r0	; 27

00000daa <PB565COMPRESSED>:
	

PB565COMPRESSED:
	TOGGLE_WR_FAST r27,r26
     daa:	b5 bb       	out	0x15, r27	; 21
     dac:	a5 bb       	out	0x15, r26	; 21
	dec r18
     dae:	2a 95       	dec	r18
	brne PB565COMPRESSED
     db0:	e1 f7       	brne	.-8      	; 0xdaa <PB565COMPRESSED>
	rjmp PB565BIT_LOOP
     db2:	f1 cf       	rjmp	.-30     	; 0xd96 <PB565BIT_LOOP>

00000db4 <PB565PLAIN>:


PB565PLAIN:

	LPM r0, Z+
     db4:	05 90       	lpm	r0, Z+
	out DPHIO, r0
     db6:	02 ba       	out	0x12, r0	; 18
	LPM r0, Z+
     db8:	05 90       	lpm	r0, Z+
	out DPLIO, r0
     dba:	0b ba       	out	0x1b, r0	; 27
	TOGGLE_WR_FAST r27,r26
     dbc:	b5 bb       	out	0x15, r27	; 21
     dbe:	a5 bb       	out	0x15, r26	; 21
	dec r18
     dc0:	2a 95       	dec	r18
	brne PB565PLAIN
     dc2:	c1 f7       	brne	.-16     	; 0xdb4 <PB565PLAIN>
	rjmp PB565BIT_LOOP
     dc4:	e8 cf       	rjmp	.-48     	; 0xd96 <PB565BIT_LOOP>

00000dc6 <PB565BIT_DONE>:




PB565BIT_DONE:
	clr r0
     dc6:	00 24       	eor	r0, r0
	ret;
     dc8:	08 95       	ret

00000dca <fastfill>:
// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill:

	clr r18
     dca:	22 27       	eor	r18, r18

	// devide by 2
	// no need for register 25 it has no bits we care about.
	lsr r24
     dcc:	86 95       	lsr	r24
	ror r23
     dce:	77 95       	ror	r23
	ror r22
     dd0:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     dd2:	27 95       	ror	r18

	// devide by 4
	// no need for register 24, it had a max of 1 bit we care about.
	lsr r23
     dd4:	76 95       	lsr	r23
	ror r22
     dd6:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     dd8:	27 95       	ror	r18

	// devide by 8
	//lsr r24
	lsr r23
     dda:	76 95       	lsr	r23
	ror r22
     ddc:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     dde:	27 95       	ror	r18

	// devide by 16		
	// lsr r24
	lsr r23
     de0:	76 95       	lsr	r23
	ror r22
     de2:	67 95       	ror	r22
	ror r18 // take carry onto r18 (modulus)
     de4:	27 95       	ror	r18

	// finish rolling a full 8 bits aka swap nibbles
	swap r18
     de6:	22 95       	swap	r18

	movw r24, r22
     de8:	cb 01       	movw	r24, r22

00000dea <fastfill2>:
// r24 + r25 hold 16 bit unsigned number of 16xloops.
// r18 holds 8 bit unsigned numner of single loops
fastfill2:

	// prepare the out port registers
	in r30, _SFR_IO_ADDR(WR_PORT)
     dea:	e5 b3       	in	r30, 0x15	; 21
	mov r31, r30
     dec:	fe 2f       	mov	r31, r30
	set
     dee:	68 94       	set
	bld r30,WR_PIN
     df0:	e7 f9       	bld	r30, 7
	clt
     df2:	e8 94       	clt
	bld r31,WR_PIN
     df4:	f7 f9       	bld	r31, 7

	sbiw r24,0 // subtract zero and test if zero	
     df6:	00 97       	sbiw	r24, 0x00	; 0
	breq exitloop16
     df8:	11 f1       	breq	.+68     	; 0xe3e <exitloop16>

00000dfa <loop16>:
loop16:
		
	TOGGLE_WR_FAST r31,r30
     dfa:	f5 bb       	out	0x15, r31	; 21
     dfc:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     dfe:	f5 bb       	out	0x15, r31	; 21
     e00:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e02:	f5 bb       	out	0x15, r31	; 21
     e04:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e06:	f5 bb       	out	0x15, r31	; 21
     e08:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     e0a:	f5 bb       	out	0x15, r31	; 21
     e0c:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e0e:	f5 bb       	out	0x15, r31	; 21
     e10:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e12:	f5 bb       	out	0x15, r31	; 21
     e14:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e16:	f5 bb       	out	0x15, r31	; 21
     e18:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     e1a:	f5 bb       	out	0x15, r31	; 21
     e1c:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e1e:	f5 bb       	out	0x15, r31	; 21
     e20:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e22:	f5 bb       	out	0x15, r31	; 21
     e24:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e26:	f5 bb       	out	0x15, r31	; 21
     e28:	e5 bb       	out	0x15, r30	; 21
		
	TOGGLE_WR_FAST r31,r30
     e2a:	f5 bb       	out	0x15, r31	; 21
     e2c:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e2e:	f5 bb       	out	0x15, r31	; 21
     e30:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e32:	f5 bb       	out	0x15, r31	; 21
     e34:	e5 bb       	out	0x15, r30	; 21
	TOGGLE_WR_FAST r31,r30
     e36:	f5 bb       	out	0x15, r31	; 21
     e38:	e5 bb       	out	0x15, r30	; 21

	sbiw r24,1	
     e3a:	01 97       	sbiw	r24, 0x01	; 1
	brne loop16
     e3c:	f1 f6       	brne	.-68     	; 0xdfa <loop16>

00000e3e <exitloop16>:

exitloop16:

	cpi r18,0
     e3e:	20 30       	cpi	r18, 0x00	; 0
	breq exitsingleloop
     e40:	21 f0       	breq	.+8      	; 0xe4a <exitsingleloop>

00000e42 <singleloop>:
singleloop:			
	TOGGLE_WR_FAST r31,r30
     e42:	f5 bb       	out	0x15, r31	; 21
     e44:	e5 bb       	out	0x15, r30	; 21
	dec r18
     e46:	2a 95       	dec	r18
	brne singleloop
     e48:	e1 f7       	brne	.-8      	; 0xe42 <singleloop>

00000e4a <exitsingleloop>:

exitsingleloop:
	ret 
     e4a:	08 95       	ret

00000e4c <fastfill3>:

// r22-r25 unsigned 32 bit number of pixels to set.
// note that only 17 bits of this are used, so max pixels
// is 131071, which is fine since we only have 320 * 240 pixels or 76800 loops
fastfill3:
	TOGGLE_WR
     e4c:	af 98       	cbi	0x15, 7	; 21
     e4e:	af 9a       	sbi	0x15, 7	; 21
	SUB32 r22,r23,r24,r25,1
     e50:	61 50       	subi	r22, 0x01	; 1
     e52:	70 40       	sbci	r23, 0x00	; 0
     e54:	80 40       	sbci	r24, 0x00	; 0
     e56:	90 40       	sbci	r25, 0x00	; 0
	brne fastfill3
     e58:	c9 f7       	brne	.-14     	; 0xe4c <fastfill3>

     e5a:	08 95       	ret

00000e5c <LCD_Write_COM>:
#include "as_macros.h"


.global LCD_Write_COM
LCD_Write_COM:
	BUS_START_REG
     e5c:	ae 98       	cbi	0x15, 6	; 21
	clr r1
     e5e:	11 24       	eor	r1, r1
	out DPLIO, r24
     e60:	8b bb       	out	0x1b, r24	; 27
	out DPHIO, r1
     e62:	12 ba       	out	0x12, r1	; 18
	TOGGLE_WR
     e64:	af 98       	cbi	0x15, 7	; 21
     e66:	af 9a       	sbi	0x15, 7	; 21
	ret
     e68:	08 95       	ret

00000e6a <LCD_Write_DATA>:

.global LCD_Write_DATA
LCD_Write_DATA:
	BUS_START_DATA	
     e6a:	ae 9a       	sbi	0x15, 6	; 21
	out DPLIO, r22
     e6c:	6b bb       	out	0x1b, r22	; 27
	out DPHIO, r24
     e6e:	82 bb       	out	0x12, r24	; 18
	TOGGLE_WR
     e70:	af 98       	cbi	0x15, 7	; 21
     e72:	af 9a       	sbi	0x15, 7	; 21
	ret
     e74:	08 95       	ret

00000e76 <LCD_Write_DATA2>:

.global LCD_Write_DATA2
LCD_Write_DATA2:
	BUS_START_DATA	
     e76:	ae 9a       	sbi	0x15, 6	; 21
	clr r1
     e78:	11 24       	eor	r1, r1
	out DPLIO, r24
     e7a:	8b bb       	out	0x1b, r24	; 27
	out DPHIO, r1
     e7c:	12 ba       	out	0x12, r1	; 18
	TOGGLE_WR
     e7e:	af 98       	cbi	0x15, 7	; 21
     e80:	af 9a       	sbi	0x15, 7	; 21
	ret
     e82:	08 95       	ret

00000e84 <LCD_Write_COM_DATA>:


.global LCD_Write_COM_DATA
LCD_Write_COM_DATA:
	
	BUS_START_REG
     e84:	ae 98       	cbi	0x15, 6	; 21
	clr r1
     e86:	11 24       	eor	r1, r1
	out DPLIO, r24
     e88:	8b bb       	out	0x1b, r24	; 27
	out DPHIO, r1
     e8a:	12 ba       	out	0x12, r1	; 18
	TOGGLE_WR
     e8c:	af 98       	cbi	0x15, 7	; 21
     e8e:	af 9a       	sbi	0x15, 7	; 21

	BUS_START_DATA	
     e90:	ae 9a       	sbi	0x15, 6	; 21
	out DPLIO, r22
     e92:	6b bb       	out	0x1b, r22	; 27
	out DPHIO, r23
     e94:	72 bb       	out	0x12, r23	; 18
	TOGGLE_WR
     e96:	af 98       	cbi	0x15, 7	; 21
     e98:	af 9a       	sbi	0x15, 7	; 21

	ret
     e9a:	08 95       	ret

00000e9c <LCD_Writ_Bus>:


.global LCD_Writ_Bus
	LCD_Writ_Bus:

	out DPHIO, r24
     e9c:	82 bb       	out	0x12, r24	; 18
	out DPLIO, r22
     e9e:	6b bb       	out	0x1b, r22	; 27
	TOGGLE_WR
     ea0:	af 98       	cbi	0x15, 7	; 21
     ea2:	af 9a       	sbi	0x15, 7	; 21

     ea4:	08 95       	ret

00000ea6 <fastlineAPP>:
.global fastlineAPN
.global fastlineANP
.global fastlineANN

fastlineAPP:
FAST_LINE_A ADD16 ADD16
     ea6:	cf 93       	push	r28
     ea8:	e5 b3       	in	r30, 0x15	; 21
     eaa:	fe 2f       	mov	r31, r30
     eac:	68 94       	set
     eae:	e7 f9       	bld	r30, 7
     eb0:	e8 94       	clt
     eb2:	f7 f9       	bld	r31, 7
     eb4:	8b bb       	out	0x1b, r24	; 27
     eb6:	92 bb       	out	0x12, r25	; 18
     eb8:	d6 01       	movw	r26, r12
     eba:	b6 95       	lsr	r27
     ebc:	a7 95       	ror	r26
     ebe:	0f 5f       	subi	r16, 0xFF	; 255
     ec0:	1f 4f       	sbci	r17, 0xFF	; 255
     ec2:	02 c0       	rjmp	.+4      	; 0xec8 <fastlineAPP+0x22>
     ec4:	2f 5f       	subi	r18, 0xFF	; 255
     ec6:	3f 4f       	sbci	r19, 0xFF	; 255
     ec8:	20 17       	cp	r18, r16
     eca:	31 07       	cpc	r19, r17
     ecc:	81 f1       	breq	.+96     	; 0xf2e <fastlineAPP+0x88>
     ece:	f5 bb       	out	0x15, r31	; 21
     ed0:	e5 bb       	out	0x15, r30	; 21
     ed2:	ae 0d       	add	r26, r14
     ed4:	bf 1d       	adc	r27, r15
     ed6:	ac 15       	cp	r26, r12
     ed8:	bd 05       	cpc	r27, r13
     eda:	a0 f3       	brcs	.-24     	; 0xec4 <fastlineAPP+0x1e>
     edc:	ac 19       	sub	r26, r12
     ede:	bd 09       	sbc	r27, r13
     ee0:	6f 5f       	subi	r22, 0xFF	; 255
     ee2:	7f 4f       	sbci	r23, 0xFF	; 255
     ee4:	2f 5f       	subi	r18, 0xFF	; 255
     ee6:	3f 4f       	sbci	r19, 0xFF	; 255
     ee8:	ae 98       	cbi	0x15, 6	; 21
     eea:	c0 e0       	ldi	r28, 0x00	; 0
     eec:	c2 bb       	out	0x12, r28	; 18
     eee:	ce e4       	ldi	r28, 0x4E	; 78
     ef0:	cb bb       	out	0x1b, r28	; 27
     ef2:	af 98       	cbi	0x15, 7	; 21
     ef4:	af 9a       	sbi	0x15, 7	; 21
     ef6:	ae 9a       	sbi	0x15, 6	; 21
     ef8:	72 bb       	out	0x12, r23	; 18
     efa:	6b bb       	out	0x1b, r22	; 27
     efc:	af 98       	cbi	0x15, 7	; 21
     efe:	af 9a       	sbi	0x15, 7	; 21
     f00:	ae 98       	cbi	0x15, 6	; 21
     f02:	c0 e0       	ldi	r28, 0x00	; 0
     f04:	c2 bb       	out	0x12, r28	; 18
     f06:	cf e4       	ldi	r28, 0x4F	; 79
     f08:	cb bb       	out	0x1b, r28	; 27
     f0a:	af 98       	cbi	0x15, 7	; 21
     f0c:	af 9a       	sbi	0x15, 7	; 21
     f0e:	ae 9a       	sbi	0x15, 6	; 21
     f10:	32 bb       	out	0x12, r19	; 18
     f12:	2b bb       	out	0x1b, r18	; 27
     f14:	af 98       	cbi	0x15, 7	; 21
     f16:	af 9a       	sbi	0x15, 7	; 21
     f18:	ae 98       	cbi	0x15, 6	; 21
     f1a:	c0 e0       	ldi	r28, 0x00	; 0
     f1c:	c2 bb       	out	0x12, r28	; 18
     f1e:	c2 e2       	ldi	r28, 0x22	; 34
     f20:	cb bb       	out	0x1b, r28	; 27
     f22:	af 98       	cbi	0x15, 7	; 21
     f24:	af 9a       	sbi	0x15, 7	; 21
     f26:	ae 9a       	sbi	0x15, 6	; 21
     f28:	8b bb       	out	0x1b, r24	; 27
     f2a:	92 bb       	out	0x12, r25	; 18
     f2c:	cd cf       	rjmp	.-102    	; 0xec8 <fastlineAPP+0x22>
     f2e:	cf 91       	pop	r28
     f30:	08 95       	ret

00000f32 <fastlineAPN>:

fastlineAPN:
FAST_LINE_A ADD16 SUB16
     f32:	cf 93       	push	r28
     f34:	e5 b3       	in	r30, 0x15	; 21
     f36:	fe 2f       	mov	r31, r30
     f38:	68 94       	set
     f3a:	e7 f9       	bld	r30, 7
     f3c:	e8 94       	clt
     f3e:	f7 f9       	bld	r31, 7
     f40:	8b bb       	out	0x1b, r24	; 27
     f42:	92 bb       	out	0x12, r25	; 18
     f44:	d6 01       	movw	r26, r12
     f46:	b6 95       	lsr	r27
     f48:	a7 95       	ror	r26
     f4a:	01 50       	subi	r16, 0x01	; 1
     f4c:	10 40       	sbci	r17, 0x00	; 0
     f4e:	02 c0       	rjmp	.+4      	; 0xf54 <fastlineAPN+0x22>
     f50:	21 50       	subi	r18, 0x01	; 1
     f52:	30 40       	sbci	r19, 0x00	; 0
     f54:	20 17       	cp	r18, r16
     f56:	31 07       	cpc	r19, r17
     f58:	81 f1       	breq	.+96     	; 0xfba <fastlineAPN+0x88>
     f5a:	f5 bb       	out	0x15, r31	; 21
     f5c:	e5 bb       	out	0x15, r30	; 21
     f5e:	ae 0d       	add	r26, r14
     f60:	bf 1d       	adc	r27, r15
     f62:	ac 15       	cp	r26, r12
     f64:	bd 05       	cpc	r27, r13
     f66:	a0 f3       	brcs	.-24     	; 0xf50 <fastlineAPN+0x1e>
     f68:	ac 19       	sub	r26, r12
     f6a:	bd 09       	sbc	r27, r13
     f6c:	6f 5f       	subi	r22, 0xFF	; 255
     f6e:	7f 4f       	sbci	r23, 0xFF	; 255
     f70:	21 50       	subi	r18, 0x01	; 1
     f72:	30 40       	sbci	r19, 0x00	; 0
     f74:	ae 98       	cbi	0x15, 6	; 21
     f76:	c0 e0       	ldi	r28, 0x00	; 0
     f78:	c2 bb       	out	0x12, r28	; 18
     f7a:	ce e4       	ldi	r28, 0x4E	; 78
     f7c:	cb bb       	out	0x1b, r28	; 27
     f7e:	af 98       	cbi	0x15, 7	; 21
     f80:	af 9a       	sbi	0x15, 7	; 21
     f82:	ae 9a       	sbi	0x15, 6	; 21
     f84:	72 bb       	out	0x12, r23	; 18
     f86:	6b bb       	out	0x1b, r22	; 27
     f88:	af 98       	cbi	0x15, 7	; 21
     f8a:	af 9a       	sbi	0x15, 7	; 21
     f8c:	ae 98       	cbi	0x15, 6	; 21
     f8e:	c0 e0       	ldi	r28, 0x00	; 0
     f90:	c2 bb       	out	0x12, r28	; 18
     f92:	cf e4       	ldi	r28, 0x4F	; 79
     f94:	cb bb       	out	0x1b, r28	; 27
     f96:	af 98       	cbi	0x15, 7	; 21
     f98:	af 9a       	sbi	0x15, 7	; 21
     f9a:	ae 9a       	sbi	0x15, 6	; 21
     f9c:	32 bb       	out	0x12, r19	; 18
     f9e:	2b bb       	out	0x1b, r18	; 27
     fa0:	af 98       	cbi	0x15, 7	; 21
     fa2:	af 9a       	sbi	0x15, 7	; 21
     fa4:	ae 98       	cbi	0x15, 6	; 21
     fa6:	c0 e0       	ldi	r28, 0x00	; 0
     fa8:	c2 bb       	out	0x12, r28	; 18
     faa:	c2 e2       	ldi	r28, 0x22	; 34
     fac:	cb bb       	out	0x1b, r28	; 27
     fae:	af 98       	cbi	0x15, 7	; 21
     fb0:	af 9a       	sbi	0x15, 7	; 21
     fb2:	ae 9a       	sbi	0x15, 6	; 21
     fb4:	8b bb       	out	0x1b, r24	; 27
     fb6:	92 bb       	out	0x12, r25	; 18
     fb8:	cd cf       	rjmp	.-102    	; 0xf54 <fastlineAPN+0x22>
     fba:	cf 91       	pop	r28
     fbc:	08 95       	ret

00000fbe <fastlineANP>:

fastlineANP:
FAST_LINE_A SUB16 ADD16
     fbe:	cf 93       	push	r28
     fc0:	e5 b3       	in	r30, 0x15	; 21
     fc2:	fe 2f       	mov	r31, r30
     fc4:	68 94       	set
     fc6:	e7 f9       	bld	r30, 7
     fc8:	e8 94       	clt
     fca:	f7 f9       	bld	r31, 7
     fcc:	8b bb       	out	0x1b, r24	; 27
     fce:	92 bb       	out	0x12, r25	; 18
     fd0:	d6 01       	movw	r26, r12
     fd2:	b6 95       	lsr	r27
     fd4:	a7 95       	ror	r26
     fd6:	0f 5f       	subi	r16, 0xFF	; 255
     fd8:	1f 4f       	sbci	r17, 0xFF	; 255
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <fastlineANP+0x22>
     fdc:	2f 5f       	subi	r18, 0xFF	; 255
     fde:	3f 4f       	sbci	r19, 0xFF	; 255
     fe0:	20 17       	cp	r18, r16
     fe2:	31 07       	cpc	r19, r17
     fe4:	81 f1       	breq	.+96     	; 0x1046 <fastlineANP+0x88>
     fe6:	f5 bb       	out	0x15, r31	; 21
     fe8:	e5 bb       	out	0x15, r30	; 21
     fea:	ae 0d       	add	r26, r14
     fec:	bf 1d       	adc	r27, r15
     fee:	ac 15       	cp	r26, r12
     ff0:	bd 05       	cpc	r27, r13
     ff2:	a0 f3       	brcs	.-24     	; 0xfdc <fastlineANP+0x1e>
     ff4:	ac 19       	sub	r26, r12
     ff6:	bd 09       	sbc	r27, r13
     ff8:	61 50       	subi	r22, 0x01	; 1
     ffa:	70 40       	sbci	r23, 0x00	; 0
     ffc:	2f 5f       	subi	r18, 0xFF	; 255
     ffe:	3f 4f       	sbci	r19, 0xFF	; 255
    1000:	ae 98       	cbi	0x15, 6	; 21
    1002:	c0 e0       	ldi	r28, 0x00	; 0
    1004:	c2 bb       	out	0x12, r28	; 18
    1006:	ce e4       	ldi	r28, 0x4E	; 78
    1008:	cb bb       	out	0x1b, r28	; 27
    100a:	af 98       	cbi	0x15, 7	; 21
    100c:	af 9a       	sbi	0x15, 7	; 21
    100e:	ae 9a       	sbi	0x15, 6	; 21
    1010:	72 bb       	out	0x12, r23	; 18
    1012:	6b bb       	out	0x1b, r22	; 27
    1014:	af 98       	cbi	0x15, 7	; 21
    1016:	af 9a       	sbi	0x15, 7	; 21
    1018:	ae 98       	cbi	0x15, 6	; 21
    101a:	c0 e0       	ldi	r28, 0x00	; 0
    101c:	c2 bb       	out	0x12, r28	; 18
    101e:	cf e4       	ldi	r28, 0x4F	; 79
    1020:	cb bb       	out	0x1b, r28	; 27
    1022:	af 98       	cbi	0x15, 7	; 21
    1024:	af 9a       	sbi	0x15, 7	; 21
    1026:	ae 9a       	sbi	0x15, 6	; 21
    1028:	32 bb       	out	0x12, r19	; 18
    102a:	2b bb       	out	0x1b, r18	; 27
    102c:	af 98       	cbi	0x15, 7	; 21
    102e:	af 9a       	sbi	0x15, 7	; 21
    1030:	ae 98       	cbi	0x15, 6	; 21
    1032:	c0 e0       	ldi	r28, 0x00	; 0
    1034:	c2 bb       	out	0x12, r28	; 18
    1036:	c2 e2       	ldi	r28, 0x22	; 34
    1038:	cb bb       	out	0x1b, r28	; 27
    103a:	af 98       	cbi	0x15, 7	; 21
    103c:	af 9a       	sbi	0x15, 7	; 21
    103e:	ae 9a       	sbi	0x15, 6	; 21
    1040:	8b bb       	out	0x1b, r24	; 27
    1042:	92 bb       	out	0x12, r25	; 18
    1044:	cd cf       	rjmp	.-102    	; 0xfe0 <fastlineANP+0x22>
    1046:	cf 91       	pop	r28
    1048:	08 95       	ret

0000104a <fastlineANN>:

fastlineANN:
FAST_LINE_A SUB16 SUB16
    104a:	cf 93       	push	r28
    104c:	e5 b3       	in	r30, 0x15	; 21
    104e:	fe 2f       	mov	r31, r30
    1050:	68 94       	set
    1052:	e7 f9       	bld	r30, 7
    1054:	e8 94       	clt
    1056:	f7 f9       	bld	r31, 7
    1058:	8b bb       	out	0x1b, r24	; 27
    105a:	92 bb       	out	0x12, r25	; 18
    105c:	d6 01       	movw	r26, r12
    105e:	b6 95       	lsr	r27
    1060:	a7 95       	ror	r26
    1062:	01 50       	subi	r16, 0x01	; 1
    1064:	10 40       	sbci	r17, 0x00	; 0
    1066:	02 c0       	rjmp	.+4      	; 0x106c <fastlineANN+0x22>
    1068:	21 50       	subi	r18, 0x01	; 1
    106a:	30 40       	sbci	r19, 0x00	; 0
    106c:	20 17       	cp	r18, r16
    106e:	31 07       	cpc	r19, r17
    1070:	81 f1       	breq	.+96     	; 0x10d2 <fastlineANN+0x88>
    1072:	f5 bb       	out	0x15, r31	; 21
    1074:	e5 bb       	out	0x15, r30	; 21
    1076:	ae 0d       	add	r26, r14
    1078:	bf 1d       	adc	r27, r15
    107a:	ac 15       	cp	r26, r12
    107c:	bd 05       	cpc	r27, r13
    107e:	a0 f3       	brcs	.-24     	; 0x1068 <fastlineANN+0x1e>
    1080:	ac 19       	sub	r26, r12
    1082:	bd 09       	sbc	r27, r13
    1084:	61 50       	subi	r22, 0x01	; 1
    1086:	70 40       	sbci	r23, 0x00	; 0
    1088:	21 50       	subi	r18, 0x01	; 1
    108a:	30 40       	sbci	r19, 0x00	; 0
    108c:	ae 98       	cbi	0x15, 6	; 21
    108e:	c0 e0       	ldi	r28, 0x00	; 0
    1090:	c2 bb       	out	0x12, r28	; 18
    1092:	ce e4       	ldi	r28, 0x4E	; 78
    1094:	cb bb       	out	0x1b, r28	; 27
    1096:	af 98       	cbi	0x15, 7	; 21
    1098:	af 9a       	sbi	0x15, 7	; 21
    109a:	ae 9a       	sbi	0x15, 6	; 21
    109c:	72 bb       	out	0x12, r23	; 18
    109e:	6b bb       	out	0x1b, r22	; 27
    10a0:	af 98       	cbi	0x15, 7	; 21
    10a2:	af 9a       	sbi	0x15, 7	; 21
    10a4:	ae 98       	cbi	0x15, 6	; 21
    10a6:	c0 e0       	ldi	r28, 0x00	; 0
    10a8:	c2 bb       	out	0x12, r28	; 18
    10aa:	cf e4       	ldi	r28, 0x4F	; 79
    10ac:	cb bb       	out	0x1b, r28	; 27
    10ae:	af 98       	cbi	0x15, 7	; 21
    10b0:	af 9a       	sbi	0x15, 7	; 21
    10b2:	ae 9a       	sbi	0x15, 6	; 21
    10b4:	32 bb       	out	0x12, r19	; 18
    10b6:	2b bb       	out	0x1b, r18	; 27
    10b8:	af 98       	cbi	0x15, 7	; 21
    10ba:	af 9a       	sbi	0x15, 7	; 21
    10bc:	ae 98       	cbi	0x15, 6	; 21
    10be:	c0 e0       	ldi	r28, 0x00	; 0
    10c0:	c2 bb       	out	0x12, r28	; 18
    10c2:	c2 e2       	ldi	r28, 0x22	; 34
    10c4:	cb bb       	out	0x1b, r28	; 27
    10c6:	af 98       	cbi	0x15, 7	; 21
    10c8:	af 9a       	sbi	0x15, 7	; 21
    10ca:	ae 9a       	sbi	0x15, 6	; 21
    10cc:	8b bb       	out	0x1b, r24	; 27
    10ce:	92 bb       	out	0x12, r25	; 18
    10d0:	cd cf       	rjmp	.-102    	; 0x106c <fastlineANN+0x22>
    10d2:	cf 91       	pop	r28
    10d4:	08 95       	ret

000010d6 <fastlineBPP>:
.global fastlineBPN
.global fastlineBNP
.global fastlineBNN

fastlineBPP:
FAST_LINE_B ADD16 ADD16
    10d6:	cf 93       	push	r28
    10d8:	e5 b3       	in	r30, 0x15	; 21
    10da:	fe 2f       	mov	r31, r30
    10dc:	68 94       	set
    10de:	e7 f9       	bld	r30, 7
    10e0:	e8 94       	clt
    10e2:	f7 f9       	bld	r31, 7
    10e4:	8b bb       	out	0x1b, r24	; 27
    10e6:	92 bb       	out	0x12, r25	; 18
    10e8:	d7 01       	movw	r26, r14
    10ea:	b6 95       	lsr	r27
    10ec:	a7 95       	ror	r26
    10ee:	4f 5f       	subi	r20, 0xFF	; 255
    10f0:	5f 4f       	sbci	r21, 0xFF	; 255
    10f2:	02 c0       	rjmp	.+4      	; 0x10f8 <fastlineBPP+0x22>
    10f4:	6f 5f       	subi	r22, 0xFF	; 255
    10f6:	7f 4f       	sbci	r23, 0xFF	; 255
    10f8:	64 17       	cp	r22, r20
    10fa:	75 07       	cpc	r23, r21
    10fc:	81 f1       	breq	.+96     	; 0x115e <fastlineBPP+0x88>
    10fe:	f5 bb       	out	0x15, r31	; 21
    1100:	e5 bb       	out	0x15, r30	; 21
    1102:	ac 0d       	add	r26, r12
    1104:	bd 1d       	adc	r27, r13
    1106:	ae 15       	cp	r26, r14
    1108:	bf 05       	cpc	r27, r15
    110a:	a0 f3       	brcs	.-24     	; 0x10f4 <fastlineBPP+0x1e>
    110c:	ae 19       	sub	r26, r14
    110e:	bf 09       	sbc	r27, r15
    1110:	6f 5f       	subi	r22, 0xFF	; 255
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	2f 5f       	subi	r18, 0xFF	; 255
    1116:	3f 4f       	sbci	r19, 0xFF	; 255
    1118:	ae 98       	cbi	0x15, 6	; 21
    111a:	c0 e0       	ldi	r28, 0x00	; 0
    111c:	c2 bb       	out	0x12, r28	; 18
    111e:	ce e4       	ldi	r28, 0x4E	; 78
    1120:	cb bb       	out	0x1b, r28	; 27
    1122:	af 98       	cbi	0x15, 7	; 21
    1124:	af 9a       	sbi	0x15, 7	; 21
    1126:	ae 9a       	sbi	0x15, 6	; 21
    1128:	72 bb       	out	0x12, r23	; 18
    112a:	6b bb       	out	0x1b, r22	; 27
    112c:	af 98       	cbi	0x15, 7	; 21
    112e:	af 9a       	sbi	0x15, 7	; 21
    1130:	ae 98       	cbi	0x15, 6	; 21
    1132:	c0 e0       	ldi	r28, 0x00	; 0
    1134:	c2 bb       	out	0x12, r28	; 18
    1136:	cf e4       	ldi	r28, 0x4F	; 79
    1138:	cb bb       	out	0x1b, r28	; 27
    113a:	af 98       	cbi	0x15, 7	; 21
    113c:	af 9a       	sbi	0x15, 7	; 21
    113e:	ae 9a       	sbi	0x15, 6	; 21
    1140:	32 bb       	out	0x12, r19	; 18
    1142:	2b bb       	out	0x1b, r18	; 27
    1144:	af 98       	cbi	0x15, 7	; 21
    1146:	af 9a       	sbi	0x15, 7	; 21
    1148:	ae 98       	cbi	0x15, 6	; 21
    114a:	c0 e0       	ldi	r28, 0x00	; 0
    114c:	c2 bb       	out	0x12, r28	; 18
    114e:	c2 e2       	ldi	r28, 0x22	; 34
    1150:	cb bb       	out	0x1b, r28	; 27
    1152:	af 98       	cbi	0x15, 7	; 21
    1154:	af 9a       	sbi	0x15, 7	; 21
    1156:	ae 9a       	sbi	0x15, 6	; 21
    1158:	8b bb       	out	0x1b, r24	; 27
    115a:	92 bb       	out	0x12, r25	; 18
    115c:	cd cf       	rjmp	.-102    	; 0x10f8 <fastlineBPP+0x22>
    115e:	cf 91       	pop	r28
    1160:	08 95       	ret

00001162 <fastlineBPN>:

fastlineBPN:
FAST_LINE_B ADD16 SUB16
    1162:	cf 93       	push	r28
    1164:	e5 b3       	in	r30, 0x15	; 21
    1166:	fe 2f       	mov	r31, r30
    1168:	68 94       	set
    116a:	e7 f9       	bld	r30, 7
    116c:	e8 94       	clt
    116e:	f7 f9       	bld	r31, 7
    1170:	8b bb       	out	0x1b, r24	; 27
    1172:	92 bb       	out	0x12, r25	; 18
    1174:	d7 01       	movw	r26, r14
    1176:	b6 95       	lsr	r27
    1178:	a7 95       	ror	r26
    117a:	4f 5f       	subi	r20, 0xFF	; 255
    117c:	5f 4f       	sbci	r21, 0xFF	; 255
    117e:	02 c0       	rjmp	.+4      	; 0x1184 <fastlineBPN+0x22>
    1180:	6f 5f       	subi	r22, 0xFF	; 255
    1182:	7f 4f       	sbci	r23, 0xFF	; 255
    1184:	64 17       	cp	r22, r20
    1186:	75 07       	cpc	r23, r21
    1188:	81 f1       	breq	.+96     	; 0x11ea <fastlineBPN+0x88>
    118a:	f5 bb       	out	0x15, r31	; 21
    118c:	e5 bb       	out	0x15, r30	; 21
    118e:	ac 0d       	add	r26, r12
    1190:	bd 1d       	adc	r27, r13
    1192:	ae 15       	cp	r26, r14
    1194:	bf 05       	cpc	r27, r15
    1196:	a0 f3       	brcs	.-24     	; 0x1180 <fastlineBPN+0x1e>
    1198:	ae 19       	sub	r26, r14
    119a:	bf 09       	sbc	r27, r15
    119c:	6f 5f       	subi	r22, 0xFF	; 255
    119e:	7f 4f       	sbci	r23, 0xFF	; 255
    11a0:	21 50       	subi	r18, 0x01	; 1
    11a2:	30 40       	sbci	r19, 0x00	; 0
    11a4:	ae 98       	cbi	0x15, 6	; 21
    11a6:	c0 e0       	ldi	r28, 0x00	; 0
    11a8:	c2 bb       	out	0x12, r28	; 18
    11aa:	ce e4       	ldi	r28, 0x4E	; 78
    11ac:	cb bb       	out	0x1b, r28	; 27
    11ae:	af 98       	cbi	0x15, 7	; 21
    11b0:	af 9a       	sbi	0x15, 7	; 21
    11b2:	ae 9a       	sbi	0x15, 6	; 21
    11b4:	72 bb       	out	0x12, r23	; 18
    11b6:	6b bb       	out	0x1b, r22	; 27
    11b8:	af 98       	cbi	0x15, 7	; 21
    11ba:	af 9a       	sbi	0x15, 7	; 21
    11bc:	ae 98       	cbi	0x15, 6	; 21
    11be:	c0 e0       	ldi	r28, 0x00	; 0
    11c0:	c2 bb       	out	0x12, r28	; 18
    11c2:	cf e4       	ldi	r28, 0x4F	; 79
    11c4:	cb bb       	out	0x1b, r28	; 27
    11c6:	af 98       	cbi	0x15, 7	; 21
    11c8:	af 9a       	sbi	0x15, 7	; 21
    11ca:	ae 9a       	sbi	0x15, 6	; 21
    11cc:	32 bb       	out	0x12, r19	; 18
    11ce:	2b bb       	out	0x1b, r18	; 27
    11d0:	af 98       	cbi	0x15, 7	; 21
    11d2:	af 9a       	sbi	0x15, 7	; 21
    11d4:	ae 98       	cbi	0x15, 6	; 21
    11d6:	c0 e0       	ldi	r28, 0x00	; 0
    11d8:	c2 bb       	out	0x12, r28	; 18
    11da:	c2 e2       	ldi	r28, 0x22	; 34
    11dc:	cb bb       	out	0x1b, r28	; 27
    11de:	af 98       	cbi	0x15, 7	; 21
    11e0:	af 9a       	sbi	0x15, 7	; 21
    11e2:	ae 9a       	sbi	0x15, 6	; 21
    11e4:	8b bb       	out	0x1b, r24	; 27
    11e6:	92 bb       	out	0x12, r25	; 18
    11e8:	cd cf       	rjmp	.-102    	; 0x1184 <fastlineBPN+0x22>
    11ea:	cf 91       	pop	r28
    11ec:	08 95       	ret

000011ee <fastlineBNP>:

fastlineBNP:
FAST_LINE_B SUB16 ADD16
    11ee:	cf 93       	push	r28
    11f0:	e5 b3       	in	r30, 0x15	; 21
    11f2:	fe 2f       	mov	r31, r30
    11f4:	68 94       	set
    11f6:	e7 f9       	bld	r30, 7
    11f8:	e8 94       	clt
    11fa:	f7 f9       	bld	r31, 7
    11fc:	8b bb       	out	0x1b, r24	; 27
    11fe:	92 bb       	out	0x12, r25	; 18
    1200:	d7 01       	movw	r26, r14
    1202:	b6 95       	lsr	r27
    1204:	a7 95       	ror	r26
    1206:	41 50       	subi	r20, 0x01	; 1
    1208:	50 40       	sbci	r21, 0x00	; 0
    120a:	02 c0       	rjmp	.+4      	; 0x1210 <fastlineBNP+0x22>
    120c:	61 50       	subi	r22, 0x01	; 1
    120e:	70 40       	sbci	r23, 0x00	; 0
    1210:	64 17       	cp	r22, r20
    1212:	75 07       	cpc	r23, r21
    1214:	81 f1       	breq	.+96     	; 0x1276 <fastlineBNP+0x88>
    1216:	f5 bb       	out	0x15, r31	; 21
    1218:	e5 bb       	out	0x15, r30	; 21
    121a:	ac 0d       	add	r26, r12
    121c:	bd 1d       	adc	r27, r13
    121e:	ae 15       	cp	r26, r14
    1220:	bf 05       	cpc	r27, r15
    1222:	a0 f3       	brcs	.-24     	; 0x120c <fastlineBNP+0x1e>
    1224:	ae 19       	sub	r26, r14
    1226:	bf 09       	sbc	r27, r15
    1228:	61 50       	subi	r22, 0x01	; 1
    122a:	70 40       	sbci	r23, 0x00	; 0
    122c:	2f 5f       	subi	r18, 0xFF	; 255
    122e:	3f 4f       	sbci	r19, 0xFF	; 255
    1230:	ae 98       	cbi	0x15, 6	; 21
    1232:	c0 e0       	ldi	r28, 0x00	; 0
    1234:	c2 bb       	out	0x12, r28	; 18
    1236:	ce e4       	ldi	r28, 0x4E	; 78
    1238:	cb bb       	out	0x1b, r28	; 27
    123a:	af 98       	cbi	0x15, 7	; 21
    123c:	af 9a       	sbi	0x15, 7	; 21
    123e:	ae 9a       	sbi	0x15, 6	; 21
    1240:	72 bb       	out	0x12, r23	; 18
    1242:	6b bb       	out	0x1b, r22	; 27
    1244:	af 98       	cbi	0x15, 7	; 21
    1246:	af 9a       	sbi	0x15, 7	; 21
    1248:	ae 98       	cbi	0x15, 6	; 21
    124a:	c0 e0       	ldi	r28, 0x00	; 0
    124c:	c2 bb       	out	0x12, r28	; 18
    124e:	cf e4       	ldi	r28, 0x4F	; 79
    1250:	cb bb       	out	0x1b, r28	; 27
    1252:	af 98       	cbi	0x15, 7	; 21
    1254:	af 9a       	sbi	0x15, 7	; 21
    1256:	ae 9a       	sbi	0x15, 6	; 21
    1258:	32 bb       	out	0x12, r19	; 18
    125a:	2b bb       	out	0x1b, r18	; 27
    125c:	af 98       	cbi	0x15, 7	; 21
    125e:	af 9a       	sbi	0x15, 7	; 21
    1260:	ae 98       	cbi	0x15, 6	; 21
    1262:	c0 e0       	ldi	r28, 0x00	; 0
    1264:	c2 bb       	out	0x12, r28	; 18
    1266:	c2 e2       	ldi	r28, 0x22	; 34
    1268:	cb bb       	out	0x1b, r28	; 27
    126a:	af 98       	cbi	0x15, 7	; 21
    126c:	af 9a       	sbi	0x15, 7	; 21
    126e:	ae 9a       	sbi	0x15, 6	; 21
    1270:	8b bb       	out	0x1b, r24	; 27
    1272:	92 bb       	out	0x12, r25	; 18
    1274:	cd cf       	rjmp	.-102    	; 0x1210 <fastlineBNP+0x22>
    1276:	cf 91       	pop	r28
    1278:	08 95       	ret

0000127a <fastlineBNN>:

fastlineBNN:
FAST_LINE_B SUB16 SUB16
    127a:	cf 93       	push	r28
    127c:	e5 b3       	in	r30, 0x15	; 21
    127e:	fe 2f       	mov	r31, r30
    1280:	68 94       	set
    1282:	e7 f9       	bld	r30, 7
    1284:	e8 94       	clt
    1286:	f7 f9       	bld	r31, 7
    1288:	8b bb       	out	0x1b, r24	; 27
    128a:	92 bb       	out	0x12, r25	; 18
    128c:	d7 01       	movw	r26, r14
    128e:	b6 95       	lsr	r27
    1290:	a7 95       	ror	r26
    1292:	41 50       	subi	r20, 0x01	; 1
    1294:	50 40       	sbci	r21, 0x00	; 0
    1296:	02 c0       	rjmp	.+4      	; 0x129c <fastlineBNN+0x22>
    1298:	61 50       	subi	r22, 0x01	; 1
    129a:	70 40       	sbci	r23, 0x00	; 0
    129c:	64 17       	cp	r22, r20
    129e:	75 07       	cpc	r23, r21
    12a0:	81 f1       	breq	.+96     	; 0x1302 <fastlineBNN+0x88>
    12a2:	f5 bb       	out	0x15, r31	; 21
    12a4:	e5 bb       	out	0x15, r30	; 21
    12a6:	ac 0d       	add	r26, r12
    12a8:	bd 1d       	adc	r27, r13
    12aa:	ae 15       	cp	r26, r14
    12ac:	bf 05       	cpc	r27, r15
    12ae:	a0 f3       	brcs	.-24     	; 0x1298 <fastlineBNN+0x1e>
    12b0:	ae 19       	sub	r26, r14
    12b2:	bf 09       	sbc	r27, r15
    12b4:	61 50       	subi	r22, 0x01	; 1
    12b6:	70 40       	sbci	r23, 0x00	; 0
    12b8:	21 50       	subi	r18, 0x01	; 1
    12ba:	30 40       	sbci	r19, 0x00	; 0
    12bc:	ae 98       	cbi	0x15, 6	; 21
    12be:	c0 e0       	ldi	r28, 0x00	; 0
    12c0:	c2 bb       	out	0x12, r28	; 18
    12c2:	ce e4       	ldi	r28, 0x4E	; 78
    12c4:	cb bb       	out	0x1b, r28	; 27
    12c6:	af 98       	cbi	0x15, 7	; 21
    12c8:	af 9a       	sbi	0x15, 7	; 21
    12ca:	ae 9a       	sbi	0x15, 6	; 21
    12cc:	72 bb       	out	0x12, r23	; 18
    12ce:	6b bb       	out	0x1b, r22	; 27
    12d0:	af 98       	cbi	0x15, 7	; 21
    12d2:	af 9a       	sbi	0x15, 7	; 21
    12d4:	ae 98       	cbi	0x15, 6	; 21
    12d6:	c0 e0       	ldi	r28, 0x00	; 0
    12d8:	c2 bb       	out	0x12, r28	; 18
    12da:	cf e4       	ldi	r28, 0x4F	; 79
    12dc:	cb bb       	out	0x1b, r28	; 27
    12de:	af 98       	cbi	0x15, 7	; 21
    12e0:	af 9a       	sbi	0x15, 7	; 21
    12e2:	ae 9a       	sbi	0x15, 6	; 21
    12e4:	32 bb       	out	0x12, r19	; 18
    12e6:	2b bb       	out	0x1b, r18	; 27
    12e8:	af 98       	cbi	0x15, 7	; 21
    12ea:	af 9a       	sbi	0x15, 7	; 21
    12ec:	ae 98       	cbi	0x15, 6	; 21
    12ee:	c0 e0       	ldi	r28, 0x00	; 0
    12f0:	c2 bb       	out	0x12, r28	; 18
    12f2:	c2 e2       	ldi	r28, 0x22	; 34
    12f4:	cb bb       	out	0x1b, r28	; 27
    12f6:	af 98       	cbi	0x15, 7	; 21
    12f8:	af 9a       	sbi	0x15, 7	; 21
    12fa:	ae 9a       	sbi	0x15, 6	; 21
    12fc:	8b bb       	out	0x1b, r24	; 27
    12fe:	92 bb       	out	0x12, r25	; 18
    1300:	cd cf       	rjmp	.-102    	; 0x129c <fastlineBNN+0x22>
    1302:	cf 91       	pop	r28
    1304:	08 95       	ret

00001306 <_Z41__static_initialization_and_destruction_0ii>:
				numberOfSimons++;
				countAnswer = 0;
			}
		}
	}
    1306:	0f 93       	push	r16
    1308:	1f 93       	push	r17
    130a:	cf 93       	push	r28
    130c:	df 93       	push	r29
    130e:	01 97       	sbiw	r24, 0x01	; 1
    1310:	01 f5       	brne	.+64     	; 0x1352 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    1312:	6f 3f       	cpi	r22, 0xFF	; 255
    1314:	7f 4f       	sbci	r23, 0xFF	; 255
    1316:	e9 f4       	brne	.+58     	; 0x1352 <_Z41__static_initialization_and_destruction_0ii+0x4c>
/*
* UTFT is a library that allows user to display images and text on various TFT (Thin-Film Transistor) displays
* UTFT display object will be used to draw components of the game on TFT LCD
*/

UTFT display; //Display class
    1318:	84 e1       	ldi	r24, 0x14	; 20
    131a:	91 e0       	ldi	r25, 0x01	; 1
    131c:	0e 94 bb 10 	call	0x2176	; 0x2176 <_ZN4UTFTC1Ev>


/**
 * An array of 30 Simon objects.
 */
Simon simonArray[30];
    1320:	cd e1       	ldi	r28, 0x1D	; 29
    1322:	d0 e0       	ldi	r29, 0x00	; 0
    1324:	08 ed       	ldi	r16, 0xD8	; 216
    1326:	10 e0       	ldi	r17, 0x00	; 0
    1328:	cf 3f       	cpi	r28, 0xFF	; 255
    132a:	ef ef       	ldi	r30, 0xFF	; 255
    132c:	de 07       	cpc	r29, r30
    132e:	89 f0       	breq	.+34     	; 0x1352 <_Z41__static_initialization_and_destruction_0ii+0x4c>
	/**
	 * Default constructor for the Simon class.
	 * Generates random number form [1,4] interval and saves that value in rect parameter
	 */
	Simon(){
		this->rect = rand() % 4 + 1;
    1330:	0e 94 17 1a 	call	0x342e	; 0x342e <rand>
    1334:	83 70       	andi	r24, 0x03	; 3
    1336:	90 78       	andi	r25, 0x80	; 128
    1338:	99 23       	and	r25, r25
    133a:	24 f4       	brge	.+8      	; 0x1344 <_Z41__static_initialization_and_destruction_0ii+0x3e>
    133c:	01 97       	sbiw	r24, 0x01	; 1
    133e:	8c 6f       	ori	r24, 0xFC	; 252
    1340:	9f 6f       	ori	r25, 0xFF	; 255
    1342:	01 96       	adiw	r24, 0x01	; 1
    1344:	01 96       	adiw	r24, 0x01	; 1
    1346:	f8 01       	movw	r30, r16
    1348:	81 93       	st	Z+, r24
    134a:	91 93       	st	Z+, r25
    134c:	8f 01       	movw	r16, r30


/**
 * An array of 30 Simon objects.
 */
Simon simonArray[30];
    134e:	21 97       	sbiw	r28, 0x01	; 1
    1350:	eb cf       	rjmp	.-42     	; 0x1328 <_Z41__static_initialization_and_destruction_0ii+0x22>
				numberOfSimons++;
				countAnswer = 0;
			}
		}
	}
    1352:	df 91       	pop	r29
    1354:	cf 91       	pop	r28
    1356:	1f 91       	pop	r17
    1358:	0f 91       	pop	r16
    135a:	08 95       	ret

0000135c <_Z8drawLinev>:
* The function then uses fillRect to fill four different rectangles with colors red, green, blue and yellow.
* Each rectangle is accompanied with text indicating the key associated with it.
*/

void drawLine()
{
    135c:	0f 93       	push	r16
    135e:	1f 93       	push	r17
	display.setFont(BigFont);
    1360:	62 e7       	ldi	r22, 0x72	; 114
    1362:	70 e0       	ldi	r23, 0x00	; 0
    1364:	84 e1       	ldi	r24, 0x14	; 20
    1366:	91 e0       	ldi	r25, 0x01	; 1
    1368:	0e 94 23 17 	call	0x2e46	; 0x2e46 <_ZN4UTFT7setFontEPKh>
	display.setColor(WHITE);
    136c:	2f ef       	ldi	r18, 0xFF	; 255
    136e:	4f ef       	ldi	r20, 0xFF	; 255
    1370:	6f ef       	ldi	r22, 0xFF	; 255
    1372:	84 e1       	ldi	r24, 0x14	; 20
    1374:	91 e0       	ldi	r25, 0x01	; 1
    1376:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
	display.drawLine(MIDDLE_VERTICAL_LINE);
    137a:	0f ee       	ldi	r16, 0xEF	; 239
    137c:	10 e0       	ldi	r17, 0x00	; 0
    137e:	26 e9       	ldi	r18, 0x96	; 150
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	40 e0       	ldi	r20, 0x00	; 0
    1384:	50 e0       	ldi	r21, 0x00	; 0
    1386:	66 e9       	ldi	r22, 0x96	; 150
    1388:	70 e0       	ldi	r23, 0x00	; 0
    138a:	84 e1       	ldi	r24, 0x14	; 20
    138c:	91 e0       	ldi	r25, 0x01	; 1
    138e:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
	display.drawLine(MIDDLE_HORIZONTAL_LINE);
    1392:	08 e7       	ldi	r16, 0x78	; 120
    1394:	10 e0       	ldi	r17, 0x00	; 0
    1396:	2f e3       	ldi	r18, 0x3F	; 63
    1398:	31 e0       	ldi	r19, 0x01	; 1
    139a:	48 e7       	ldi	r20, 0x78	; 120
    139c:	50 e0       	ldi	r21, 0x00	; 0
    139e:	60 e0       	ldi	r22, 0x00	; 0
    13a0:	70 e0       	ldi	r23, 0x00	; 0
    13a2:	84 e1       	ldi	r24, 0x14	; 20
    13a4:	91 e0       	ldi	r25, 0x01	; 1
    13a6:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
	
	
	// Red rectangle
	display.setColor(RED);
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	40 e0       	ldi	r20, 0x00	; 0
    13ae:	6f ef       	ldi	r22, 0xFF	; 255
    13b0:	84 e1       	ldi	r24, 0x14	; 20
    13b2:	91 e0       	ldi	r25, 0x01	; 1
    13b4:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
	display.fillRect(0, 0, 150, 120);
    13b8:	26 e9       	ldi	r18, 0x96	; 150
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	40 e0       	ldi	r20, 0x00	; 0
    13be:	50 e0       	ldi	r21, 0x00	; 0
    13c0:	60 e0       	ldi	r22, 0x00	; 0
    13c2:	70 e0       	ldi	r23, 0x00	; 0
    13c4:	84 e1       	ldi	r24, 0x14	; 20
    13c6:	91 e0       	ldi	r25, 0x01	; 1
    13c8:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
	display.setColor(WHITE);
    13cc:	2f ef       	ldi	r18, 0xFF	; 255
    13ce:	4f ef       	ldi	r20, 0xFF	; 255
    13d0:	6f ef       	ldi	r22, 0xFF	; 255
    13d2:	84 e1       	ldi	r24, 0x14	; 20
    13d4:	91 e0       	ldi	r25, 0x01	; 1
    13d6:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
	display.print("Key1", 50, 60);
    13da:	00 e0       	ldi	r16, 0x00	; 0
    13dc:	10 e0       	ldi	r17, 0x00	; 0
    13de:	2c e3       	ldi	r18, 0x3C	; 60
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	42 e3       	ldi	r20, 0x32	; 50
    13e4:	50 e0       	ldi	r21, 0x00	; 0
    13e6:	68 e6       	ldi	r22, 0x68	; 104
    13e8:	70 e0       	ldi	r23, 0x00	; 0
    13ea:	84 e1       	ldi	r24, 0x14	; 20
    13ec:	91 e0       	ldi	r25, 0x01	; 1
    13ee:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
	
	// Green rectangle
	display.setColor(GREEN);
    13f2:	20 e0       	ldi	r18, 0x00	; 0
    13f4:	4f ef       	ldi	r20, 0xFF	; 255
    13f6:	60 e0       	ldi	r22, 0x00	; 0
    13f8:	84 e1       	ldi	r24, 0x14	; 20
    13fa:	91 e0       	ldi	r25, 0x01	; 1
    13fc:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
	display.fillRect(0, 120, 150, 239);
    1400:	0f ee       	ldi	r16, 0xEF	; 239
    1402:	10 e0       	ldi	r17, 0x00	; 0
    1404:	26 e9       	ldi	r18, 0x96	; 150
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	48 e7       	ldi	r20, 0x78	; 120
    140a:	50 e0       	ldi	r21, 0x00	; 0
    140c:	60 e0       	ldi	r22, 0x00	; 0
    140e:	70 e0       	ldi	r23, 0x00	; 0
    1410:	84 e1       	ldi	r24, 0x14	; 20
    1412:	91 e0       	ldi	r25, 0x01	; 1
    1414:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
	display.setColor(WHITE);
    1418:	2f ef       	ldi	r18, 0xFF	; 255
    141a:	4f ef       	ldi	r20, 0xFF	; 255
    141c:	6f ef       	ldi	r22, 0xFF	; 255
    141e:	84 e1       	ldi	r24, 0x14	; 20
    1420:	91 e0       	ldi	r25, 0x01	; 1
    1422:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
	display.print("Key3", 50, 180);
    1426:	00 e0       	ldi	r16, 0x00	; 0
    1428:	10 e0       	ldi	r17, 0x00	; 0
    142a:	24 eb       	ldi	r18, 0xB4	; 180
    142c:	30 e0       	ldi	r19, 0x00	; 0
    142e:	42 e3       	ldi	r20, 0x32	; 50
    1430:	50 e0       	ldi	r21, 0x00	; 0
    1432:	6d e6       	ldi	r22, 0x6D	; 109
    1434:	70 e0       	ldi	r23, 0x00	; 0
    1436:	84 e1       	ldi	r24, 0x14	; 20
    1438:	91 e0       	ldi	r25, 0x01	; 1
    143a:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
	
	// Blue rectangle
	display.setColor(BLUE);
    143e:	2c ec       	ldi	r18, 0xCC	; 204
    1440:	40 e0       	ldi	r20, 0x00	; 0
    1442:	60 e0       	ldi	r22, 0x00	; 0
    1444:	84 e1       	ldi	r24, 0x14	; 20
    1446:	91 e0       	ldi	r25, 0x01	; 1
    1448:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
	display.fillRect(150, 0, 319, 120);
    144c:	08 e7       	ldi	r16, 0x78	; 120
    144e:	10 e0       	ldi	r17, 0x00	; 0
    1450:	2f e3       	ldi	r18, 0x3F	; 63
    1452:	31 e0       	ldi	r19, 0x01	; 1
    1454:	40 e0       	ldi	r20, 0x00	; 0
    1456:	50 e0       	ldi	r21, 0x00	; 0
    1458:	66 e9       	ldi	r22, 0x96	; 150
    145a:	70 e0       	ldi	r23, 0x00	; 0
    145c:	84 e1       	ldi	r24, 0x14	; 20
    145e:	91 e0       	ldi	r25, 0x01	; 1
    1460:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
	display.setColor(WHITE);
    1464:	2f ef       	ldi	r18, 0xFF	; 255
    1466:	4f ef       	ldi	r20, 0xFF	; 255
    1468:	6f ef       	ldi	r22, 0xFF	; 255
    146a:	84 e1       	ldi	r24, 0x14	; 20
    146c:	91 e0       	ldi	r25, 0x01	; 1
    146e:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
	display.print("Key2", 200, 60);
    1472:	00 e0       	ldi	r16, 0x00	; 0
    1474:	10 e0       	ldi	r17, 0x00	; 0
    1476:	2c e3       	ldi	r18, 0x3C	; 60
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	48 ec       	ldi	r20, 0xC8	; 200
    147c:	50 e0       	ldi	r21, 0x00	; 0
    147e:	62 e7       	ldi	r22, 0x72	; 114
    1480:	70 e0       	ldi	r23, 0x00	; 0
    1482:	84 e1       	ldi	r24, 0x14	; 20
    1484:	91 e0       	ldi	r25, 0x01	; 1
    1486:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
	
	// Yellow rectangle
	display.setColor(YELLOW);
    148a:	20 e0       	ldi	r18, 0x00	; 0
    148c:	4f ef       	ldi	r20, 0xFF	; 255
    148e:	6f ef       	ldi	r22, 0xFF	; 255
    1490:	84 e1       	ldi	r24, 0x14	; 20
    1492:	91 e0       	ldi	r25, 0x01	; 1
    1494:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
	display.fillRect(150, 120, 319, 239);
    1498:	0f ee       	ldi	r16, 0xEF	; 239
    149a:	10 e0       	ldi	r17, 0x00	; 0
    149c:	2f e3       	ldi	r18, 0x3F	; 63
    149e:	31 e0       	ldi	r19, 0x01	; 1
    14a0:	48 e7       	ldi	r20, 0x78	; 120
    14a2:	50 e0       	ldi	r21, 0x00	; 0
    14a4:	66 e9       	ldi	r22, 0x96	; 150
    14a6:	70 e0       	ldi	r23, 0x00	; 0
    14a8:	84 e1       	ldi	r24, 0x14	; 20
    14aa:	91 e0       	ldi	r25, 0x01	; 1
    14ac:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
	display.setColor(WHITE);
    14b0:	2f ef       	ldi	r18, 0xFF	; 255
    14b2:	4f ef       	ldi	r20, 0xFF	; 255
    14b4:	6f ef       	ldi	r22, 0xFF	; 255
    14b6:	84 e1       	ldi	r24, 0x14	; 20
    14b8:	91 e0       	ldi	r25, 0x01	; 1
    14ba:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
	display.print("Key4", 200, 180);
    14be:	00 e0       	ldi	r16, 0x00	; 0
    14c0:	10 e0       	ldi	r17, 0x00	; 0
    14c2:	24 eb       	ldi	r18, 0xB4	; 180
    14c4:	30 e0       	ldi	r19, 0x00	; 0
    14c6:	48 ec       	ldi	r20, 0xC8	; 200
    14c8:	50 e0       	ldi	r21, 0x00	; 0
    14ca:	67 e7       	ldi	r22, 0x77	; 119
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	84 e1       	ldi	r24, 0x14	; 20
    14d0:	91 e0       	ldi	r25, 0x01	; 1
    14d2:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
}
    14d6:	1f 91       	pop	r17
    14d8:	0f 91       	pop	r16
    14da:	08 95       	ret

000014dc <_ZN5Simon9flashRectEv>:
	}

	/**
	 * This function is used to draw all rectangles on screen and blink one rectangle define by rect value
	 */
	void flashRect(){
    14dc:	0f 93       	push	r16
    14de:	1f 93       	push	r17
    14e0:	cf 93       	push	r28
    14e2:	df 93       	push	r29
    14e4:	ec 01       	movw	r28, r24
		
		// Blink red rectangle
		if(rect == 1){
    14e6:	88 81       	ld	r24, Y
    14e8:	99 81       	ldd	r25, Y+1	; 0x01
    14ea:	01 97       	sbiw	r24, 0x01	; 1
    14ec:	09 f0       	breq	.+2      	; 0x14f0 <_ZN5Simon9flashRectEv+0x14>
    14ee:	e2 c0       	rjmp	.+452    	; 0x16b4 <_ZN5Simon9flashRectEv+0x1d8>
			display.setFont(BigFont);
    14f0:	62 e7       	ldi	r22, 0x72	; 114
    14f2:	70 e0       	ldi	r23, 0x00	; 0
    14f4:	84 e1       	ldi	r24, 0x14	; 20
    14f6:	91 e0       	ldi	r25, 0x01	; 1
    14f8:	0e 94 23 17 	call	0x2e46	; 0x2e46 <_ZN4UTFT7setFontEPKh>
			display.setColor(WHITE);
    14fc:	2f ef       	ldi	r18, 0xFF	; 255
    14fe:	4f ef       	ldi	r20, 0xFF	; 255
    1500:	6f ef       	ldi	r22, 0xFF	; 255
    1502:	84 e1       	ldi	r24, 0x14	; 20
    1504:	91 e0       	ldi	r25, 0x01	; 1
    1506:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.drawLine(MIDDLE_VERTICAL_LINE);
    150a:	0f ee       	ldi	r16, 0xEF	; 239
    150c:	10 e0       	ldi	r17, 0x00	; 0
    150e:	26 e9       	ldi	r18, 0x96	; 150
    1510:	30 e0       	ldi	r19, 0x00	; 0
    1512:	40 e0       	ldi	r20, 0x00	; 0
    1514:	50 e0       	ldi	r21, 0x00	; 0
    1516:	66 e9       	ldi	r22, 0x96	; 150
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	84 e1       	ldi	r24, 0x14	; 20
    151c:	91 e0       	ldi	r25, 0x01	; 1
    151e:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
			display.drawLine(MIDDLE_HORIZONTAL_LINE);
    1522:	08 e7       	ldi	r16, 0x78	; 120
    1524:	10 e0       	ldi	r17, 0x00	; 0
    1526:	2f e3       	ldi	r18, 0x3F	; 63
    1528:	31 e0       	ldi	r19, 0x01	; 1
    152a:	48 e7       	ldi	r20, 0x78	; 120
    152c:	50 e0       	ldi	r21, 0x00	; 0
    152e:	60 e0       	ldi	r22, 0x00	; 0
    1530:	70 e0       	ldi	r23, 0x00	; 0
    1532:	84 e1       	ldi	r24, 0x14	; 20
    1534:	91 e0       	ldi	r25, 0x01	; 1
    1536:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
			
			display.setColor(GREEN);
    153a:	20 e0       	ldi	r18, 0x00	; 0
    153c:	4f ef       	ldi	r20, 0xFF	; 255
    153e:	60 e0       	ldi	r22, 0x00	; 0
    1540:	84 e1       	ldi	r24, 0x14	; 20
    1542:	91 e0       	ldi	r25, 0x01	; 1
    1544:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 120, 150, 239);
    1548:	0f ee       	ldi	r16, 0xEF	; 239
    154a:	10 e0       	ldi	r17, 0x00	; 0
    154c:	26 e9       	ldi	r18, 0x96	; 150
    154e:	30 e0       	ldi	r19, 0x00	; 0
    1550:	48 e7       	ldi	r20, 0x78	; 120
    1552:	50 e0       	ldi	r21, 0x00	; 0
    1554:	60 e0       	ldi	r22, 0x00	; 0
    1556:	70 e0       	ldi	r23, 0x00	; 0
    1558:	84 e1       	ldi	r24, 0x14	; 20
    155a:	91 e0       	ldi	r25, 0x01	; 1
    155c:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    1560:	2f ef       	ldi	r18, 0xFF	; 255
    1562:	4f ef       	ldi	r20, 0xFF	; 255
    1564:	6f ef       	ldi	r22, 0xFF	; 255
    1566:	84 e1       	ldi	r24, 0x14	; 20
    1568:	91 e0       	ldi	r25, 0x01	; 1
    156a:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key3", 50, 180);
    156e:	00 e0       	ldi	r16, 0x00	; 0
    1570:	10 e0       	ldi	r17, 0x00	; 0
    1572:	24 eb       	ldi	r18, 0xB4	; 180
    1574:	30 e0       	ldi	r19, 0x00	; 0
    1576:	42 e3       	ldi	r20, 0x32	; 50
    1578:	50 e0       	ldi	r21, 0x00	; 0
    157a:	6d e6       	ldi	r22, 0x6D	; 109
    157c:	70 e0       	ldi	r23, 0x00	; 0
    157e:	84 e1       	ldi	r24, 0x14	; 20
    1580:	91 e0       	ldi	r25, 0x01	; 1
    1582:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			
			display.setColor(BLUE);
    1586:	2c ec       	ldi	r18, 0xCC	; 204
    1588:	40 e0       	ldi	r20, 0x00	; 0
    158a:	60 e0       	ldi	r22, 0x00	; 0
    158c:	84 e1       	ldi	r24, 0x14	; 20
    158e:	91 e0       	ldi	r25, 0x01	; 1
    1590:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 0, 319, 120);
    1594:	08 e7       	ldi	r16, 0x78	; 120
    1596:	10 e0       	ldi	r17, 0x00	; 0
    1598:	2f e3       	ldi	r18, 0x3F	; 63
    159a:	31 e0       	ldi	r19, 0x01	; 1
    159c:	40 e0       	ldi	r20, 0x00	; 0
    159e:	50 e0       	ldi	r21, 0x00	; 0
    15a0:	66 e9       	ldi	r22, 0x96	; 150
    15a2:	70 e0       	ldi	r23, 0x00	; 0
    15a4:	84 e1       	ldi	r24, 0x14	; 20
    15a6:	91 e0       	ldi	r25, 0x01	; 1
    15a8:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    15ac:	2f ef       	ldi	r18, 0xFF	; 255
    15ae:	4f ef       	ldi	r20, 0xFF	; 255
    15b0:	6f ef       	ldi	r22, 0xFF	; 255
    15b2:	84 e1       	ldi	r24, 0x14	; 20
    15b4:	91 e0       	ldi	r25, 0x01	; 1
    15b6:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key2", 200, 60);
    15ba:	00 e0       	ldi	r16, 0x00	; 0
    15bc:	10 e0       	ldi	r17, 0x00	; 0
    15be:	2c e3       	ldi	r18, 0x3C	; 60
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	48 ec       	ldi	r20, 0xC8	; 200
    15c4:	50 e0       	ldi	r21, 0x00	; 0
    15c6:	62 e7       	ldi	r22, 0x72	; 114
    15c8:	70 e0       	ldi	r23, 0x00	; 0
    15ca:	84 e1       	ldi	r24, 0x14	; 20
    15cc:	91 e0       	ldi	r25, 0x01	; 1
    15ce:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			
			display.setColor(YELLOW);
    15d2:	20 e0       	ldi	r18, 0x00	; 0
    15d4:	4f ef       	ldi	r20, 0xFF	; 255
    15d6:	6f ef       	ldi	r22, 0xFF	; 255
    15d8:	84 e1       	ldi	r24, 0x14	; 20
    15da:	91 e0       	ldi	r25, 0x01	; 1
    15dc:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 120, 319, 239);
    15e0:	0f ee       	ldi	r16, 0xEF	; 239
    15e2:	10 e0       	ldi	r17, 0x00	; 0
    15e4:	2f e3       	ldi	r18, 0x3F	; 63
    15e6:	31 e0       	ldi	r19, 0x01	; 1
    15e8:	48 e7       	ldi	r20, 0x78	; 120
    15ea:	50 e0       	ldi	r21, 0x00	; 0
    15ec:	66 e9       	ldi	r22, 0x96	; 150
    15ee:	70 e0       	ldi	r23, 0x00	; 0
    15f0:	84 e1       	ldi	r24, 0x14	; 20
    15f2:	91 e0       	ldi	r25, 0x01	; 1
    15f4:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    15f8:	2f ef       	ldi	r18, 0xFF	; 255
    15fa:	4f ef       	ldi	r20, 0xFF	; 255
    15fc:	6f ef       	ldi	r22, 0xFF	; 255
    15fe:	84 e1       	ldi	r24, 0x14	; 20
    1600:	91 e0       	ldi	r25, 0x01	; 1
    1602:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key4", 200, 180);
    1606:	00 e0       	ldi	r16, 0x00	; 0
    1608:	10 e0       	ldi	r17, 0x00	; 0
    160a:	24 eb       	ldi	r18, 0xB4	; 180
    160c:	30 e0       	ldi	r19, 0x00	; 0
    160e:	48 ec       	ldi	r20, 0xC8	; 200
    1610:	50 e0       	ldi	r21, 0x00	; 0
    1612:	67 e7       	ldi	r22, 0x77	; 119
    1614:	70 e0       	ldi	r23, 0x00	; 0
    1616:	84 e1       	ldi	r24, 0x14	; 20
    1618:	91 e0       	ldi	r25, 0x01	; 1
    161a:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			display.setColor(RED);
    161e:	20 e0       	ldi	r18, 0x00	; 0
    1620:	40 e0       	ldi	r20, 0x00	; 0
    1622:	6f ef       	ldi	r22, 0xFF	; 255
    1624:	84 e1       	ldi	r24, 0x14	; 20
    1626:	91 e0       	ldi	r25, 0x01	; 1
    1628:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 0, 150, 120);
    162c:	08 e7       	ldi	r16, 0x78	; 120
    162e:	10 e0       	ldi	r17, 0x00	; 0
    1630:	26 e9       	ldi	r18, 0x96	; 150
    1632:	30 e0       	ldi	r19, 0x00	; 0
    1634:	40 e0       	ldi	r20, 0x00	; 0
    1636:	50 e0       	ldi	r21, 0x00	; 0
    1638:	60 e0       	ldi	r22, 0x00	; 0
    163a:	70 e0       	ldi	r23, 0x00	; 0
    163c:	84 e1       	ldi	r24, 0x14	; 20
    163e:	91 e0       	ldi	r25, 0x01	; 1
    1640:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    1644:	2f ef       	ldi	r18, 0xFF	; 255
    1646:	4f ef       	ldi	r20, 0xFF	; 255
    1648:	6f ef       	ldi	r22, 0xFF	; 255
    164a:	84 e1       	ldi	r24, 0x14	; 20
    164c:	91 e0       	ldi	r25, 0x01	; 1
    164e:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key1", 50, 60);
    1652:	00 e0       	ldi	r16, 0x00	; 0
    1654:	10 e0       	ldi	r17, 0x00	; 0
    1656:	2c e3       	ldi	r18, 0x3C	; 60
    1658:	30 e0       	ldi	r19, 0x00	; 0
    165a:	42 e3       	ldi	r20, 0x32	; 50
    165c:	50 e0       	ldi	r21, 0x00	; 0
    165e:	68 e6       	ldi	r22, 0x68	; 104
    1660:	70 e0       	ldi	r23, 0x00	; 0
    1662:	84 e1       	ldi	r24, 0x14	; 20
    1664:	91 e0       	ldi	r25, 0x01	; 1
    1666:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    166a:	2f ef       	ldi	r18, 0xFF	; 255
    166c:	8f e3       	ldi	r24, 0x3F	; 63
    166e:	9b e0       	ldi	r25, 0x0B	; 11
    1670:	21 50       	subi	r18, 0x01	; 1
    1672:	80 40       	sbci	r24, 0x00	; 0
    1674:	90 40       	sbci	r25, 0x00	; 0
    1676:	e1 f7       	brne	.-8      	; 0x1670 <_ZN5Simon9flashRectEv+0x194>
    1678:	00 c0       	rjmp	.+0      	; 0x167a <_ZN5Simon9flashRectEv+0x19e>
    167a:	00 00       	nop
			_delay_ms(500);
			display.setColor(RED);
    167c:	20 e0       	ldi	r18, 0x00	; 0
    167e:	40 e0       	ldi	r20, 0x00	; 0
    1680:	6f ef       	ldi	r22, 0xFF	; 255
    1682:	84 e1       	ldi	r24, 0x14	; 20
    1684:	91 e0       	ldi	r25, 0x01	; 1
    1686:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 0, 150, 120);
    168a:	08 e7       	ldi	r16, 0x78	; 120
    168c:	10 e0       	ldi	r17, 0x00	; 0
    168e:	26 e9       	ldi	r18, 0x96	; 150
    1690:	30 e0       	ldi	r19, 0x00	; 0
    1692:	40 e0       	ldi	r20, 0x00	; 0
    1694:	50 e0       	ldi	r21, 0x00	; 0
    1696:	60 e0       	ldi	r22, 0x00	; 0
    1698:	70 e0       	ldi	r23, 0x00	; 0
    169a:	84 e1       	ldi	r24, 0x14	; 20
    169c:	91 e0       	ldi	r25, 0x01	; 1
    169e:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
    16a2:	2f ef       	ldi	r18, 0xFF	; 255
    16a4:	8f e3       	ldi	r24, 0x3F	; 63
    16a6:	9b e0       	ldi	r25, 0x0B	; 11
    16a8:	21 50       	subi	r18, 0x01	; 1
    16aa:	80 40       	sbci	r24, 0x00	; 0
    16ac:	90 40       	sbci	r25, 0x00	; 0
    16ae:	e1 f7       	brne	.-8      	; 0x16a8 <_ZN5Simon9flashRectEv+0x1cc>
    16b0:	00 c0       	rjmp	.+0      	; 0x16b2 <_ZN5Simon9flashRectEv+0x1d6>
    16b2:	00 00       	nop
			_delay_ms(500);
		}
		
		// Blink green rectangle
		if(rect == 3){
    16b4:	88 81       	ld	r24, Y
    16b6:	99 81       	ldd	r25, Y+1	; 0x01
    16b8:	03 97       	sbiw	r24, 0x03	; 3
    16ba:	09 f0       	breq	.+2      	; 0x16be <_ZN5Simon9flashRectEv+0x1e2>
    16bc:	e0 c0       	rjmp	.+448    	; 0x187e <_ZN5Simon9flashRectEv+0x3a2>
			display.setFont(BigFont);
    16be:	62 e7       	ldi	r22, 0x72	; 114
    16c0:	70 e0       	ldi	r23, 0x00	; 0
    16c2:	84 e1       	ldi	r24, 0x14	; 20
    16c4:	91 e0       	ldi	r25, 0x01	; 1
    16c6:	0e 94 23 17 	call	0x2e46	; 0x2e46 <_ZN4UTFT7setFontEPKh>
			display.setColor(WHITE);
    16ca:	2f ef       	ldi	r18, 0xFF	; 255
    16cc:	4f ef       	ldi	r20, 0xFF	; 255
    16ce:	6f ef       	ldi	r22, 0xFF	; 255
    16d0:	84 e1       	ldi	r24, 0x14	; 20
    16d2:	91 e0       	ldi	r25, 0x01	; 1
    16d4:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.drawLine(MIDDLE_VERTICAL_LINE);
    16d8:	0f ee       	ldi	r16, 0xEF	; 239
    16da:	10 e0       	ldi	r17, 0x00	; 0
    16dc:	26 e9       	ldi	r18, 0x96	; 150
    16de:	30 e0       	ldi	r19, 0x00	; 0
    16e0:	40 e0       	ldi	r20, 0x00	; 0
    16e2:	50 e0       	ldi	r21, 0x00	; 0
    16e4:	66 e9       	ldi	r22, 0x96	; 150
    16e6:	70 e0       	ldi	r23, 0x00	; 0
    16e8:	84 e1       	ldi	r24, 0x14	; 20
    16ea:	91 e0       	ldi	r25, 0x01	; 1
    16ec:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
			display.drawLine(MIDDLE_HORIZONTAL_LINE);
    16f0:	08 e7       	ldi	r16, 0x78	; 120
    16f2:	10 e0       	ldi	r17, 0x00	; 0
    16f4:	2f e3       	ldi	r18, 0x3F	; 63
    16f6:	31 e0       	ldi	r19, 0x01	; 1
    16f8:	48 e7       	ldi	r20, 0x78	; 120
    16fa:	50 e0       	ldi	r21, 0x00	; 0
    16fc:	60 e0       	ldi	r22, 0x00	; 0
    16fe:	70 e0       	ldi	r23, 0x00	; 0
    1700:	84 e1       	ldi	r24, 0x14	; 20
    1702:	91 e0       	ldi	r25, 0x01	; 1
    1704:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
			
			display.setColor(BLUE);
    1708:	2c ec       	ldi	r18, 0xCC	; 204
    170a:	40 e0       	ldi	r20, 0x00	; 0
    170c:	60 e0       	ldi	r22, 0x00	; 0
    170e:	84 e1       	ldi	r24, 0x14	; 20
    1710:	91 e0       	ldi	r25, 0x01	; 1
    1712:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 0, 319, 120);
    1716:	2f e3       	ldi	r18, 0x3F	; 63
    1718:	31 e0       	ldi	r19, 0x01	; 1
    171a:	40 e0       	ldi	r20, 0x00	; 0
    171c:	50 e0       	ldi	r21, 0x00	; 0
    171e:	66 e9       	ldi	r22, 0x96	; 150
    1720:	70 e0       	ldi	r23, 0x00	; 0
    1722:	84 e1       	ldi	r24, 0x14	; 20
    1724:	91 e0       	ldi	r25, 0x01	; 1
    1726:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    172a:	2f ef       	ldi	r18, 0xFF	; 255
    172c:	4f ef       	ldi	r20, 0xFF	; 255
    172e:	6f ef       	ldi	r22, 0xFF	; 255
    1730:	84 e1       	ldi	r24, 0x14	; 20
    1732:	91 e0       	ldi	r25, 0x01	; 1
    1734:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key2", 200, 60);
    1738:	00 e0       	ldi	r16, 0x00	; 0
    173a:	10 e0       	ldi	r17, 0x00	; 0
    173c:	2c e3       	ldi	r18, 0x3C	; 60
    173e:	30 e0       	ldi	r19, 0x00	; 0
    1740:	48 ec       	ldi	r20, 0xC8	; 200
    1742:	50 e0       	ldi	r21, 0x00	; 0
    1744:	62 e7       	ldi	r22, 0x72	; 114
    1746:	70 e0       	ldi	r23, 0x00	; 0
    1748:	84 e1       	ldi	r24, 0x14	; 20
    174a:	91 e0       	ldi	r25, 0x01	; 1
    174c:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			
			display.setColor(YELLOW);
    1750:	20 e0       	ldi	r18, 0x00	; 0
    1752:	4f ef       	ldi	r20, 0xFF	; 255
    1754:	6f ef       	ldi	r22, 0xFF	; 255
    1756:	84 e1       	ldi	r24, 0x14	; 20
    1758:	91 e0       	ldi	r25, 0x01	; 1
    175a:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 120, 319, 239);
    175e:	0f ee       	ldi	r16, 0xEF	; 239
    1760:	10 e0       	ldi	r17, 0x00	; 0
    1762:	2f e3       	ldi	r18, 0x3F	; 63
    1764:	31 e0       	ldi	r19, 0x01	; 1
    1766:	48 e7       	ldi	r20, 0x78	; 120
    1768:	50 e0       	ldi	r21, 0x00	; 0
    176a:	66 e9       	ldi	r22, 0x96	; 150
    176c:	70 e0       	ldi	r23, 0x00	; 0
    176e:	84 e1       	ldi	r24, 0x14	; 20
    1770:	91 e0       	ldi	r25, 0x01	; 1
    1772:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    1776:	2f ef       	ldi	r18, 0xFF	; 255
    1778:	4f ef       	ldi	r20, 0xFF	; 255
    177a:	6f ef       	ldi	r22, 0xFF	; 255
    177c:	84 e1       	ldi	r24, 0x14	; 20
    177e:	91 e0       	ldi	r25, 0x01	; 1
    1780:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key4", 200, 180);
    1784:	00 e0       	ldi	r16, 0x00	; 0
    1786:	10 e0       	ldi	r17, 0x00	; 0
    1788:	24 eb       	ldi	r18, 0xB4	; 180
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	48 ec       	ldi	r20, 0xC8	; 200
    178e:	50 e0       	ldi	r21, 0x00	; 0
    1790:	67 e7       	ldi	r22, 0x77	; 119
    1792:	70 e0       	ldi	r23, 0x00	; 0
    1794:	84 e1       	ldi	r24, 0x14	; 20
    1796:	91 e0       	ldi	r25, 0x01	; 1
    1798:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			display.setColor(RED);
    179c:	20 e0       	ldi	r18, 0x00	; 0
    179e:	40 e0       	ldi	r20, 0x00	; 0
    17a0:	6f ef       	ldi	r22, 0xFF	; 255
    17a2:	84 e1       	ldi	r24, 0x14	; 20
    17a4:	91 e0       	ldi	r25, 0x01	; 1
    17a6:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 0, 150, 120);
    17aa:	08 e7       	ldi	r16, 0x78	; 120
    17ac:	10 e0       	ldi	r17, 0x00	; 0
    17ae:	26 e9       	ldi	r18, 0x96	; 150
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	40 e0       	ldi	r20, 0x00	; 0
    17b4:	50 e0       	ldi	r21, 0x00	; 0
    17b6:	60 e0       	ldi	r22, 0x00	; 0
    17b8:	70 e0       	ldi	r23, 0x00	; 0
    17ba:	84 e1       	ldi	r24, 0x14	; 20
    17bc:	91 e0       	ldi	r25, 0x01	; 1
    17be:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    17c2:	2f ef       	ldi	r18, 0xFF	; 255
    17c4:	4f ef       	ldi	r20, 0xFF	; 255
    17c6:	6f ef       	ldi	r22, 0xFF	; 255
    17c8:	84 e1       	ldi	r24, 0x14	; 20
    17ca:	91 e0       	ldi	r25, 0x01	; 1
    17cc:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key1", 50, 60);
    17d0:	00 e0       	ldi	r16, 0x00	; 0
    17d2:	10 e0       	ldi	r17, 0x00	; 0
    17d4:	2c e3       	ldi	r18, 0x3C	; 60
    17d6:	30 e0       	ldi	r19, 0x00	; 0
    17d8:	42 e3       	ldi	r20, 0x32	; 50
    17da:	50 e0       	ldi	r21, 0x00	; 0
    17dc:	68 e6       	ldi	r22, 0x68	; 104
    17de:	70 e0       	ldi	r23, 0x00	; 0
    17e0:	84 e1       	ldi	r24, 0x14	; 20
    17e2:	91 e0       	ldi	r25, 0x01	; 1
    17e4:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			
			display.setColor(GREEN);
    17e8:	20 e0       	ldi	r18, 0x00	; 0
    17ea:	4f ef       	ldi	r20, 0xFF	; 255
    17ec:	60 e0       	ldi	r22, 0x00	; 0
    17ee:	84 e1       	ldi	r24, 0x14	; 20
    17f0:	91 e0       	ldi	r25, 0x01	; 1
    17f2:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 120, 150, 239);
    17f6:	0f ee       	ldi	r16, 0xEF	; 239
    17f8:	10 e0       	ldi	r17, 0x00	; 0
    17fa:	26 e9       	ldi	r18, 0x96	; 150
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	48 e7       	ldi	r20, 0x78	; 120
    1800:	50 e0       	ldi	r21, 0x00	; 0
    1802:	60 e0       	ldi	r22, 0x00	; 0
    1804:	70 e0       	ldi	r23, 0x00	; 0
    1806:	84 e1       	ldi	r24, 0x14	; 20
    1808:	91 e0       	ldi	r25, 0x01	; 1
    180a:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    180e:	2f ef       	ldi	r18, 0xFF	; 255
    1810:	4f ef       	ldi	r20, 0xFF	; 255
    1812:	6f ef       	ldi	r22, 0xFF	; 255
    1814:	84 e1       	ldi	r24, 0x14	; 20
    1816:	91 e0       	ldi	r25, 0x01	; 1
    1818:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key3", 50, 180);
    181c:	00 e0       	ldi	r16, 0x00	; 0
    181e:	10 e0       	ldi	r17, 0x00	; 0
    1820:	24 eb       	ldi	r18, 0xB4	; 180
    1822:	30 e0       	ldi	r19, 0x00	; 0
    1824:	42 e3       	ldi	r20, 0x32	; 50
    1826:	50 e0       	ldi	r21, 0x00	; 0
    1828:	6d e6       	ldi	r22, 0x6D	; 109
    182a:	70 e0       	ldi	r23, 0x00	; 0
    182c:	84 e1       	ldi	r24, 0x14	; 20
    182e:	91 e0       	ldi	r25, 0x01	; 1
    1830:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
    1834:	2f ef       	ldi	r18, 0xFF	; 255
    1836:	8f e3       	ldi	r24, 0x3F	; 63
    1838:	9b e0       	ldi	r25, 0x0B	; 11
    183a:	21 50       	subi	r18, 0x01	; 1
    183c:	80 40       	sbci	r24, 0x00	; 0
    183e:	90 40       	sbci	r25, 0x00	; 0
    1840:	e1 f7       	brne	.-8      	; 0x183a <_ZN5Simon9flashRectEv+0x35e>
    1842:	00 c0       	rjmp	.+0      	; 0x1844 <_ZN5Simon9flashRectEv+0x368>
    1844:	00 00       	nop
			_delay_ms(500);
			display.setColor(GREEN);
    1846:	20 e0       	ldi	r18, 0x00	; 0
    1848:	4f ef       	ldi	r20, 0xFF	; 255
    184a:	60 e0       	ldi	r22, 0x00	; 0
    184c:	84 e1       	ldi	r24, 0x14	; 20
    184e:	91 e0       	ldi	r25, 0x01	; 1
    1850:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 120, 150, 239);
    1854:	0f ee       	ldi	r16, 0xEF	; 239
    1856:	10 e0       	ldi	r17, 0x00	; 0
    1858:	26 e9       	ldi	r18, 0x96	; 150
    185a:	30 e0       	ldi	r19, 0x00	; 0
    185c:	48 e7       	ldi	r20, 0x78	; 120
    185e:	50 e0       	ldi	r21, 0x00	; 0
    1860:	60 e0       	ldi	r22, 0x00	; 0
    1862:	70 e0       	ldi	r23, 0x00	; 0
    1864:	84 e1       	ldi	r24, 0x14	; 20
    1866:	91 e0       	ldi	r25, 0x01	; 1
    1868:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
    186c:	2f ef       	ldi	r18, 0xFF	; 255
    186e:	8f e3       	ldi	r24, 0x3F	; 63
    1870:	9b e0       	ldi	r25, 0x0B	; 11
    1872:	21 50       	subi	r18, 0x01	; 1
    1874:	80 40       	sbci	r24, 0x00	; 0
    1876:	90 40       	sbci	r25, 0x00	; 0
    1878:	e1 f7       	brne	.-8      	; 0x1872 <_ZN5Simon9flashRectEv+0x396>
    187a:	00 c0       	rjmp	.+0      	; 0x187c <_ZN5Simon9flashRectEv+0x3a0>
    187c:	00 00       	nop
			_delay_ms(500);
		}
		
		// Blink blue rectangle
		if(rect == 2){
    187e:	88 81       	ld	r24, Y
    1880:	99 81       	ldd	r25, Y+1	; 0x01
    1882:	02 97       	sbiw	r24, 0x02	; 2
    1884:	09 f0       	breq	.+2      	; 0x1888 <_ZN5Simon9flashRectEv+0x3ac>
    1886:	e2 c0       	rjmp	.+452    	; 0x1a4c <_ZN5Simon9flashRectEv+0x570>
			display.setFont(BigFont);
    1888:	62 e7       	ldi	r22, 0x72	; 114
    188a:	70 e0       	ldi	r23, 0x00	; 0
    188c:	84 e1       	ldi	r24, 0x14	; 20
    188e:	91 e0       	ldi	r25, 0x01	; 1
    1890:	0e 94 23 17 	call	0x2e46	; 0x2e46 <_ZN4UTFT7setFontEPKh>
			display.setColor(WHITE);
    1894:	2f ef       	ldi	r18, 0xFF	; 255
    1896:	4f ef       	ldi	r20, 0xFF	; 255
    1898:	6f ef       	ldi	r22, 0xFF	; 255
    189a:	84 e1       	ldi	r24, 0x14	; 20
    189c:	91 e0       	ldi	r25, 0x01	; 1
    189e:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.drawLine(MIDDLE_VERTICAL_LINE);
    18a2:	0f ee       	ldi	r16, 0xEF	; 239
    18a4:	10 e0       	ldi	r17, 0x00	; 0
    18a6:	26 e9       	ldi	r18, 0x96	; 150
    18a8:	30 e0       	ldi	r19, 0x00	; 0
    18aa:	40 e0       	ldi	r20, 0x00	; 0
    18ac:	50 e0       	ldi	r21, 0x00	; 0
    18ae:	66 e9       	ldi	r22, 0x96	; 150
    18b0:	70 e0       	ldi	r23, 0x00	; 0
    18b2:	84 e1       	ldi	r24, 0x14	; 20
    18b4:	91 e0       	ldi	r25, 0x01	; 1
    18b6:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
			display.drawLine(MIDDLE_HORIZONTAL_LINE);
    18ba:	08 e7       	ldi	r16, 0x78	; 120
    18bc:	10 e0       	ldi	r17, 0x00	; 0
    18be:	2f e3       	ldi	r18, 0x3F	; 63
    18c0:	31 e0       	ldi	r19, 0x01	; 1
    18c2:	48 e7       	ldi	r20, 0x78	; 120
    18c4:	50 e0       	ldi	r21, 0x00	; 0
    18c6:	60 e0       	ldi	r22, 0x00	; 0
    18c8:	70 e0       	ldi	r23, 0x00	; 0
    18ca:	84 e1       	ldi	r24, 0x14	; 20
    18cc:	91 e0       	ldi	r25, 0x01	; 1
    18ce:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
			
			display.setColor(YELLOW);
    18d2:	20 e0       	ldi	r18, 0x00	; 0
    18d4:	4f ef       	ldi	r20, 0xFF	; 255
    18d6:	6f ef       	ldi	r22, 0xFF	; 255
    18d8:	84 e1       	ldi	r24, 0x14	; 20
    18da:	91 e0       	ldi	r25, 0x01	; 1
    18dc:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 120, 319, 239);
    18e0:	0f ee       	ldi	r16, 0xEF	; 239
    18e2:	10 e0       	ldi	r17, 0x00	; 0
    18e4:	2f e3       	ldi	r18, 0x3F	; 63
    18e6:	31 e0       	ldi	r19, 0x01	; 1
    18e8:	48 e7       	ldi	r20, 0x78	; 120
    18ea:	50 e0       	ldi	r21, 0x00	; 0
    18ec:	66 e9       	ldi	r22, 0x96	; 150
    18ee:	70 e0       	ldi	r23, 0x00	; 0
    18f0:	84 e1       	ldi	r24, 0x14	; 20
    18f2:	91 e0       	ldi	r25, 0x01	; 1
    18f4:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    18f8:	2f ef       	ldi	r18, 0xFF	; 255
    18fa:	4f ef       	ldi	r20, 0xFF	; 255
    18fc:	6f ef       	ldi	r22, 0xFF	; 255
    18fe:	84 e1       	ldi	r24, 0x14	; 20
    1900:	91 e0       	ldi	r25, 0x01	; 1
    1902:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key4", 200, 180);
    1906:	00 e0       	ldi	r16, 0x00	; 0
    1908:	10 e0       	ldi	r17, 0x00	; 0
    190a:	24 eb       	ldi	r18, 0xB4	; 180
    190c:	30 e0       	ldi	r19, 0x00	; 0
    190e:	48 ec       	ldi	r20, 0xC8	; 200
    1910:	50 e0       	ldi	r21, 0x00	; 0
    1912:	67 e7       	ldi	r22, 0x77	; 119
    1914:	70 e0       	ldi	r23, 0x00	; 0
    1916:	84 e1       	ldi	r24, 0x14	; 20
    1918:	91 e0       	ldi	r25, 0x01	; 1
    191a:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			display.setColor(RED);
    191e:	20 e0       	ldi	r18, 0x00	; 0
    1920:	40 e0       	ldi	r20, 0x00	; 0
    1922:	6f ef       	ldi	r22, 0xFF	; 255
    1924:	84 e1       	ldi	r24, 0x14	; 20
    1926:	91 e0       	ldi	r25, 0x01	; 1
    1928:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 0, 150, 120);
    192c:	08 e7       	ldi	r16, 0x78	; 120
    192e:	10 e0       	ldi	r17, 0x00	; 0
    1930:	26 e9       	ldi	r18, 0x96	; 150
    1932:	30 e0       	ldi	r19, 0x00	; 0
    1934:	40 e0       	ldi	r20, 0x00	; 0
    1936:	50 e0       	ldi	r21, 0x00	; 0
    1938:	60 e0       	ldi	r22, 0x00	; 0
    193a:	70 e0       	ldi	r23, 0x00	; 0
    193c:	84 e1       	ldi	r24, 0x14	; 20
    193e:	91 e0       	ldi	r25, 0x01	; 1
    1940:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    1944:	2f ef       	ldi	r18, 0xFF	; 255
    1946:	4f ef       	ldi	r20, 0xFF	; 255
    1948:	6f ef       	ldi	r22, 0xFF	; 255
    194a:	84 e1       	ldi	r24, 0x14	; 20
    194c:	91 e0       	ldi	r25, 0x01	; 1
    194e:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key1", 50, 60);
    1952:	00 e0       	ldi	r16, 0x00	; 0
    1954:	10 e0       	ldi	r17, 0x00	; 0
    1956:	2c e3       	ldi	r18, 0x3C	; 60
    1958:	30 e0       	ldi	r19, 0x00	; 0
    195a:	42 e3       	ldi	r20, 0x32	; 50
    195c:	50 e0       	ldi	r21, 0x00	; 0
    195e:	68 e6       	ldi	r22, 0x68	; 104
    1960:	70 e0       	ldi	r23, 0x00	; 0
    1962:	84 e1       	ldi	r24, 0x14	; 20
    1964:	91 e0       	ldi	r25, 0x01	; 1
    1966:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			
			display.setColor(GREEN);
    196a:	20 e0       	ldi	r18, 0x00	; 0
    196c:	4f ef       	ldi	r20, 0xFF	; 255
    196e:	60 e0       	ldi	r22, 0x00	; 0
    1970:	84 e1       	ldi	r24, 0x14	; 20
    1972:	91 e0       	ldi	r25, 0x01	; 1
    1974:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 120, 150, 239);
    1978:	0f ee       	ldi	r16, 0xEF	; 239
    197a:	10 e0       	ldi	r17, 0x00	; 0
    197c:	26 e9       	ldi	r18, 0x96	; 150
    197e:	30 e0       	ldi	r19, 0x00	; 0
    1980:	48 e7       	ldi	r20, 0x78	; 120
    1982:	50 e0       	ldi	r21, 0x00	; 0
    1984:	60 e0       	ldi	r22, 0x00	; 0
    1986:	70 e0       	ldi	r23, 0x00	; 0
    1988:	84 e1       	ldi	r24, 0x14	; 20
    198a:	91 e0       	ldi	r25, 0x01	; 1
    198c:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    1990:	2f ef       	ldi	r18, 0xFF	; 255
    1992:	4f ef       	ldi	r20, 0xFF	; 255
    1994:	6f ef       	ldi	r22, 0xFF	; 255
    1996:	84 e1       	ldi	r24, 0x14	; 20
    1998:	91 e0       	ldi	r25, 0x01	; 1
    199a:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key3", 50, 180);
    199e:	00 e0       	ldi	r16, 0x00	; 0
    19a0:	10 e0       	ldi	r17, 0x00	; 0
    19a2:	24 eb       	ldi	r18, 0xB4	; 180
    19a4:	30 e0       	ldi	r19, 0x00	; 0
    19a6:	42 e3       	ldi	r20, 0x32	; 50
    19a8:	50 e0       	ldi	r21, 0x00	; 0
    19aa:	6d e6       	ldi	r22, 0x6D	; 109
    19ac:	70 e0       	ldi	r23, 0x00	; 0
    19ae:	84 e1       	ldi	r24, 0x14	; 20
    19b0:	91 e0       	ldi	r25, 0x01	; 1
    19b2:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			
			display.setColor(BLUE);
    19b6:	2c ec       	ldi	r18, 0xCC	; 204
    19b8:	40 e0       	ldi	r20, 0x00	; 0
    19ba:	60 e0       	ldi	r22, 0x00	; 0
    19bc:	84 e1       	ldi	r24, 0x14	; 20
    19be:	91 e0       	ldi	r25, 0x01	; 1
    19c0:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 0, 319, 120);
    19c4:	08 e7       	ldi	r16, 0x78	; 120
    19c6:	10 e0       	ldi	r17, 0x00	; 0
    19c8:	2f e3       	ldi	r18, 0x3F	; 63
    19ca:	31 e0       	ldi	r19, 0x01	; 1
    19cc:	40 e0       	ldi	r20, 0x00	; 0
    19ce:	50 e0       	ldi	r21, 0x00	; 0
    19d0:	66 e9       	ldi	r22, 0x96	; 150
    19d2:	70 e0       	ldi	r23, 0x00	; 0
    19d4:	84 e1       	ldi	r24, 0x14	; 20
    19d6:	91 e0       	ldi	r25, 0x01	; 1
    19d8:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    19dc:	2f ef       	ldi	r18, 0xFF	; 255
    19de:	4f ef       	ldi	r20, 0xFF	; 255
    19e0:	6f ef       	ldi	r22, 0xFF	; 255
    19e2:	84 e1       	ldi	r24, 0x14	; 20
    19e4:	91 e0       	ldi	r25, 0x01	; 1
    19e6:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key2", 200, 60);
    19ea:	00 e0       	ldi	r16, 0x00	; 0
    19ec:	10 e0       	ldi	r17, 0x00	; 0
    19ee:	2c e3       	ldi	r18, 0x3C	; 60
    19f0:	30 e0       	ldi	r19, 0x00	; 0
    19f2:	48 ec       	ldi	r20, 0xC8	; 200
    19f4:	50 e0       	ldi	r21, 0x00	; 0
    19f6:	62 e7       	ldi	r22, 0x72	; 114
    19f8:	70 e0       	ldi	r23, 0x00	; 0
    19fa:	84 e1       	ldi	r24, 0x14	; 20
    19fc:	91 e0       	ldi	r25, 0x01	; 1
    19fe:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
    1a02:	2f ef       	ldi	r18, 0xFF	; 255
    1a04:	8f e3       	ldi	r24, 0x3F	; 63
    1a06:	9b e0       	ldi	r25, 0x0B	; 11
    1a08:	21 50       	subi	r18, 0x01	; 1
    1a0a:	80 40       	sbci	r24, 0x00	; 0
    1a0c:	90 40       	sbci	r25, 0x00	; 0
    1a0e:	e1 f7       	brne	.-8      	; 0x1a08 <_ZN5Simon9flashRectEv+0x52c>
    1a10:	00 c0       	rjmp	.+0      	; 0x1a12 <_ZN5Simon9flashRectEv+0x536>
    1a12:	00 00       	nop
			_delay_ms(500);
			display.setColor(BLUE);
    1a14:	2c ec       	ldi	r18, 0xCC	; 204
    1a16:	40 e0       	ldi	r20, 0x00	; 0
    1a18:	60 e0       	ldi	r22, 0x00	; 0
    1a1a:	84 e1       	ldi	r24, 0x14	; 20
    1a1c:	91 e0       	ldi	r25, 0x01	; 1
    1a1e:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 0, 319, 120);
    1a22:	08 e7       	ldi	r16, 0x78	; 120
    1a24:	10 e0       	ldi	r17, 0x00	; 0
    1a26:	2f e3       	ldi	r18, 0x3F	; 63
    1a28:	31 e0       	ldi	r19, 0x01	; 1
    1a2a:	40 e0       	ldi	r20, 0x00	; 0
    1a2c:	50 e0       	ldi	r21, 0x00	; 0
    1a2e:	66 e9       	ldi	r22, 0x96	; 150
    1a30:	70 e0       	ldi	r23, 0x00	; 0
    1a32:	84 e1       	ldi	r24, 0x14	; 20
    1a34:	91 e0       	ldi	r25, 0x01	; 1
    1a36:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
    1a3a:	2f ef       	ldi	r18, 0xFF	; 255
    1a3c:	8f e3       	ldi	r24, 0x3F	; 63
    1a3e:	9b e0       	ldi	r25, 0x0B	; 11
    1a40:	21 50       	subi	r18, 0x01	; 1
    1a42:	80 40       	sbci	r24, 0x00	; 0
    1a44:	90 40       	sbci	r25, 0x00	; 0
    1a46:	e1 f7       	brne	.-8      	; 0x1a40 <_ZN5Simon9flashRectEv+0x564>
    1a48:	00 c0       	rjmp	.+0      	; 0x1a4a <_ZN5Simon9flashRectEv+0x56e>
    1a4a:	00 00       	nop
			_delay_ms(500);
		}
		
		// Blink yellow rectangle
		if(rect == 4){
    1a4c:	88 81       	ld	r24, Y
    1a4e:	99 81       	ldd	r25, Y+1	; 0x01
    1a50:	04 97       	sbiw	r24, 0x04	; 4
    1a52:	09 f0       	breq	.+2      	; 0x1a56 <_ZN5Simon9flashRectEv+0x57a>
    1a54:	e0 c0       	rjmp	.+448    	; 0x1c16 <_ZN5Simon9flashRectEv+0x73a>
			display.setFont(BigFont);
    1a56:	62 e7       	ldi	r22, 0x72	; 114
    1a58:	70 e0       	ldi	r23, 0x00	; 0
    1a5a:	84 e1       	ldi	r24, 0x14	; 20
    1a5c:	91 e0       	ldi	r25, 0x01	; 1
    1a5e:	0e 94 23 17 	call	0x2e46	; 0x2e46 <_ZN4UTFT7setFontEPKh>
			display.setColor(WHITE);
    1a62:	2f ef       	ldi	r18, 0xFF	; 255
    1a64:	4f ef       	ldi	r20, 0xFF	; 255
    1a66:	6f ef       	ldi	r22, 0xFF	; 255
    1a68:	84 e1       	ldi	r24, 0x14	; 20
    1a6a:	91 e0       	ldi	r25, 0x01	; 1
    1a6c:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.drawLine(MIDDLE_VERTICAL_LINE);
    1a70:	0f ee       	ldi	r16, 0xEF	; 239
    1a72:	10 e0       	ldi	r17, 0x00	; 0
    1a74:	26 e9       	ldi	r18, 0x96	; 150
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	40 e0       	ldi	r20, 0x00	; 0
    1a7a:	50 e0       	ldi	r21, 0x00	; 0
    1a7c:	66 e9       	ldi	r22, 0x96	; 150
    1a7e:	70 e0       	ldi	r23, 0x00	; 0
    1a80:	84 e1       	ldi	r24, 0x14	; 20
    1a82:	91 e0       	ldi	r25, 0x01	; 1
    1a84:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
			display.drawLine(MIDDLE_HORIZONTAL_LINE);
    1a88:	08 e7       	ldi	r16, 0x78	; 120
    1a8a:	10 e0       	ldi	r17, 0x00	; 0
    1a8c:	2f e3       	ldi	r18, 0x3F	; 63
    1a8e:	31 e0       	ldi	r19, 0x01	; 1
    1a90:	48 e7       	ldi	r20, 0x78	; 120
    1a92:	50 e0       	ldi	r21, 0x00	; 0
    1a94:	60 e0       	ldi	r22, 0x00	; 0
    1a96:	70 e0       	ldi	r23, 0x00	; 0
    1a98:	84 e1       	ldi	r24, 0x14	; 20
    1a9a:	91 e0       	ldi	r25, 0x01	; 1
    1a9c:	0e 94 6d 12 	call	0x24da	; 0x24da <_ZN4UTFT8drawLineEiiii>
			
			display.setColor(RED);
    1aa0:	20 e0       	ldi	r18, 0x00	; 0
    1aa2:	40 e0       	ldi	r20, 0x00	; 0
    1aa4:	6f ef       	ldi	r22, 0xFF	; 255
    1aa6:	84 e1       	ldi	r24, 0x14	; 20
    1aa8:	91 e0       	ldi	r25, 0x01	; 1
    1aaa:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 0, 150, 120);
    1aae:	26 e9       	ldi	r18, 0x96	; 150
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	40 e0       	ldi	r20, 0x00	; 0
    1ab4:	50 e0       	ldi	r21, 0x00	; 0
    1ab6:	60 e0       	ldi	r22, 0x00	; 0
    1ab8:	70 e0       	ldi	r23, 0x00	; 0
    1aba:	84 e1       	ldi	r24, 0x14	; 20
    1abc:	91 e0       	ldi	r25, 0x01	; 1
    1abe:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    1ac2:	2f ef       	ldi	r18, 0xFF	; 255
    1ac4:	4f ef       	ldi	r20, 0xFF	; 255
    1ac6:	6f ef       	ldi	r22, 0xFF	; 255
    1ac8:	84 e1       	ldi	r24, 0x14	; 20
    1aca:	91 e0       	ldi	r25, 0x01	; 1
    1acc:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key1", 50, 60);
    1ad0:	00 e0       	ldi	r16, 0x00	; 0
    1ad2:	10 e0       	ldi	r17, 0x00	; 0
    1ad4:	2c e3       	ldi	r18, 0x3C	; 60
    1ad6:	30 e0       	ldi	r19, 0x00	; 0
    1ad8:	42 e3       	ldi	r20, 0x32	; 50
    1ada:	50 e0       	ldi	r21, 0x00	; 0
    1adc:	68 e6       	ldi	r22, 0x68	; 104
    1ade:	70 e0       	ldi	r23, 0x00	; 0
    1ae0:	84 e1       	ldi	r24, 0x14	; 20
    1ae2:	91 e0       	ldi	r25, 0x01	; 1
    1ae4:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			
			display.setColor(GREEN);
    1ae8:	20 e0       	ldi	r18, 0x00	; 0
    1aea:	4f ef       	ldi	r20, 0xFF	; 255
    1aec:	60 e0       	ldi	r22, 0x00	; 0
    1aee:	84 e1       	ldi	r24, 0x14	; 20
    1af0:	91 e0       	ldi	r25, 0x01	; 1
    1af2:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(0, 120, 150, 239);
    1af6:	0f ee       	ldi	r16, 0xEF	; 239
    1af8:	10 e0       	ldi	r17, 0x00	; 0
    1afa:	26 e9       	ldi	r18, 0x96	; 150
    1afc:	30 e0       	ldi	r19, 0x00	; 0
    1afe:	48 e7       	ldi	r20, 0x78	; 120
    1b00:	50 e0       	ldi	r21, 0x00	; 0
    1b02:	60 e0       	ldi	r22, 0x00	; 0
    1b04:	70 e0       	ldi	r23, 0x00	; 0
    1b06:	84 e1       	ldi	r24, 0x14	; 20
    1b08:	91 e0       	ldi	r25, 0x01	; 1
    1b0a:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    1b0e:	2f ef       	ldi	r18, 0xFF	; 255
    1b10:	4f ef       	ldi	r20, 0xFF	; 255
    1b12:	6f ef       	ldi	r22, 0xFF	; 255
    1b14:	84 e1       	ldi	r24, 0x14	; 20
    1b16:	91 e0       	ldi	r25, 0x01	; 1
    1b18:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key3", 50, 180);
    1b1c:	00 e0       	ldi	r16, 0x00	; 0
    1b1e:	10 e0       	ldi	r17, 0x00	; 0
    1b20:	24 eb       	ldi	r18, 0xB4	; 180
    1b22:	30 e0       	ldi	r19, 0x00	; 0
    1b24:	42 e3       	ldi	r20, 0x32	; 50
    1b26:	50 e0       	ldi	r21, 0x00	; 0
    1b28:	6d e6       	ldi	r22, 0x6D	; 109
    1b2a:	70 e0       	ldi	r23, 0x00	; 0
    1b2c:	84 e1       	ldi	r24, 0x14	; 20
    1b2e:	91 e0       	ldi	r25, 0x01	; 1
    1b30:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			
			display.setColor(BLUE);
    1b34:	2c ec       	ldi	r18, 0xCC	; 204
    1b36:	40 e0       	ldi	r20, 0x00	; 0
    1b38:	60 e0       	ldi	r22, 0x00	; 0
    1b3a:	84 e1       	ldi	r24, 0x14	; 20
    1b3c:	91 e0       	ldi	r25, 0x01	; 1
    1b3e:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 0, 319, 120);
    1b42:	08 e7       	ldi	r16, 0x78	; 120
    1b44:	10 e0       	ldi	r17, 0x00	; 0
    1b46:	2f e3       	ldi	r18, 0x3F	; 63
    1b48:	31 e0       	ldi	r19, 0x01	; 1
    1b4a:	40 e0       	ldi	r20, 0x00	; 0
    1b4c:	50 e0       	ldi	r21, 0x00	; 0
    1b4e:	66 e9       	ldi	r22, 0x96	; 150
    1b50:	70 e0       	ldi	r23, 0x00	; 0
    1b52:	84 e1       	ldi	r24, 0x14	; 20
    1b54:	91 e0       	ldi	r25, 0x01	; 1
    1b56:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    1b5a:	2f ef       	ldi	r18, 0xFF	; 255
    1b5c:	4f ef       	ldi	r20, 0xFF	; 255
    1b5e:	6f ef       	ldi	r22, 0xFF	; 255
    1b60:	84 e1       	ldi	r24, 0x14	; 20
    1b62:	91 e0       	ldi	r25, 0x01	; 1
    1b64:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key2", 200, 60);
    1b68:	00 e0       	ldi	r16, 0x00	; 0
    1b6a:	10 e0       	ldi	r17, 0x00	; 0
    1b6c:	2c e3       	ldi	r18, 0x3C	; 60
    1b6e:	30 e0       	ldi	r19, 0x00	; 0
    1b70:	48 ec       	ldi	r20, 0xC8	; 200
    1b72:	50 e0       	ldi	r21, 0x00	; 0
    1b74:	62 e7       	ldi	r22, 0x72	; 114
    1b76:	70 e0       	ldi	r23, 0x00	; 0
    1b78:	84 e1       	ldi	r24, 0x14	; 20
    1b7a:	91 e0       	ldi	r25, 0x01	; 1
    1b7c:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
			
			display.setColor(YELLOW);
    1b80:	20 e0       	ldi	r18, 0x00	; 0
    1b82:	4f ef       	ldi	r20, 0xFF	; 255
    1b84:	6f ef       	ldi	r22, 0xFF	; 255
    1b86:	84 e1       	ldi	r24, 0x14	; 20
    1b88:	91 e0       	ldi	r25, 0x01	; 1
    1b8a:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 120, 319, 239);
    1b8e:	0f ee       	ldi	r16, 0xEF	; 239
    1b90:	10 e0       	ldi	r17, 0x00	; 0
    1b92:	2f e3       	ldi	r18, 0x3F	; 63
    1b94:	31 e0       	ldi	r19, 0x01	; 1
    1b96:	48 e7       	ldi	r20, 0x78	; 120
    1b98:	50 e0       	ldi	r21, 0x00	; 0
    1b9a:	66 e9       	ldi	r22, 0x96	; 150
    1b9c:	70 e0       	ldi	r23, 0x00	; 0
    1b9e:	84 e1       	ldi	r24, 0x14	; 20
    1ba0:	91 e0       	ldi	r25, 0x01	; 1
    1ba2:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
			display.setColor(WHITE);
    1ba6:	2f ef       	ldi	r18, 0xFF	; 255
    1ba8:	4f ef       	ldi	r20, 0xFF	; 255
    1baa:	6f ef       	ldi	r22, 0xFF	; 255
    1bac:	84 e1       	ldi	r24, 0x14	; 20
    1bae:	91 e0       	ldi	r25, 0x01	; 1
    1bb0:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.print("Key4", 200, 180);
    1bb4:	00 e0       	ldi	r16, 0x00	; 0
    1bb6:	10 e0       	ldi	r17, 0x00	; 0
    1bb8:	24 eb       	ldi	r18, 0xB4	; 180
    1bba:	30 e0       	ldi	r19, 0x00	; 0
    1bbc:	48 ec       	ldi	r20, 0xC8	; 200
    1bbe:	50 e0       	ldi	r21, 0x00	; 0
    1bc0:	67 e7       	ldi	r22, 0x77	; 119
    1bc2:	70 e0       	ldi	r23, 0x00	; 0
    1bc4:	84 e1       	ldi	r24, 0x14	; 20
    1bc6:	91 e0       	ldi	r25, 0x01	; 1
    1bc8:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
    1bcc:	2f ef       	ldi	r18, 0xFF	; 255
    1bce:	8f e3       	ldi	r24, 0x3F	; 63
    1bd0:	9b e0       	ldi	r25, 0x0B	; 11
    1bd2:	21 50       	subi	r18, 0x01	; 1
    1bd4:	80 40       	sbci	r24, 0x00	; 0
    1bd6:	90 40       	sbci	r25, 0x00	; 0
    1bd8:	e1 f7       	brne	.-8      	; 0x1bd2 <_ZN5Simon9flashRectEv+0x6f6>
    1bda:	00 c0       	rjmp	.+0      	; 0x1bdc <_ZN5Simon9flashRectEv+0x700>
    1bdc:	00 00       	nop
			_delay_ms(500);
			display.setColor(YELLOW);
    1bde:	20 e0       	ldi	r18, 0x00	; 0
    1be0:	4f ef       	ldi	r20, 0xFF	; 255
    1be2:	6f ef       	ldi	r22, 0xFF	; 255
    1be4:	84 e1       	ldi	r24, 0x14	; 20
    1be6:	91 e0       	ldi	r25, 0x01	; 1
    1be8:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.fillRect(150, 120, 319, 239);
    1bec:	0f ee       	ldi	r16, 0xEF	; 239
    1bee:	10 e0       	ldi	r17, 0x00	; 0
    1bf0:	2f e3       	ldi	r18, 0x3F	; 63
    1bf2:	31 e0       	ldi	r19, 0x01	; 1
    1bf4:	48 e7       	ldi	r20, 0x78	; 120
    1bf6:	50 e0       	ldi	r21, 0x00	; 0
    1bf8:	66 e9       	ldi	r22, 0x96	; 150
    1bfa:	70 e0       	ldi	r23, 0x00	; 0
    1bfc:	84 e1       	ldi	r24, 0x14	; 20
    1bfe:	91 e0       	ldi	r25, 0x01	; 1
    1c00:	0e 94 15 11 	call	0x222a	; 0x222a <_ZN4UTFT8fillRectEiiii>
    1c04:	2f ef       	ldi	r18, 0xFF	; 255
    1c06:	8f e3       	ldi	r24, 0x3F	; 63
    1c08:	9b e0       	ldi	r25, 0x0B	; 11
    1c0a:	21 50       	subi	r18, 0x01	; 1
    1c0c:	80 40       	sbci	r24, 0x00	; 0
    1c0e:	90 40       	sbci	r25, 0x00	; 0
    1c10:	e1 f7       	brne	.-8      	; 0x1c0a <_ZN5Simon9flashRectEv+0x72e>
    1c12:	00 c0       	rjmp	.+0      	; 0x1c14 <_ZN5Simon9flashRectEv+0x738>
    1c14:	00 00       	nop
			_delay_ms(500);
		}
	}
    1c16:	df 91       	pop	r29
    1c18:	cf 91       	pop	r28
    1c1a:	1f 91       	pop	r17
    1c1c:	0f 91       	pop	r16
    1c1e:	08 95       	ret

00001c20 <main>:

int main(void)
{
	
	// Button ports
	PORTB = 0xff;
    1c20:	8f ef       	ldi	r24, 0xFF	; 255
    1c22:	88 bb       	out	0x18, r24	; 24
	DDRB = 0x00;
    1c24:	17 ba       	out	0x17, r1	; 23
	
	// LCD init
	display.clrScr();
    1c26:	84 e1       	ldi	r24, 0x14	; 20
    1c28:	91 e0       	ldi	r25, 0x01	; 1
    1c2a:	0e 94 75 11 	call	0x22ea	; 0x22ea <_ZN4UTFT6clrScrEv>
	display.InitLCD(LANDSCAPE);
    1c2e:	61 e0       	ldi	r22, 0x01	; 1
    1c30:	84 e1       	ldi	r24, 0x14	; 20
    1c32:	91 e0       	ldi	r25, 0x01	; 1
    1c34:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <_ZN4UTFT7InitLCDEh>

	
	// Fill simonArray with random numbers from 1-4
	for(int i = 0; i < 30; i++){
    1c38:	c0 e0       	ldi	r28, 0x00	; 0
    1c3a:	d0 e0       	ldi	r29, 0x00	; 0
    1c3c:	ce 31       	cpi	r28, 0x1E	; 30
    1c3e:	d1 05       	cpc	r29, r1
    1c40:	d4 f4       	brge	.+52     	; 0x1c76 <main+0x56>
		int randomValue = rand() % 4 + 1;
    1c42:	0e 94 17 1a 	call	0x342e	; 0x342e <rand>
    1c46:	83 70       	andi	r24, 0x03	; 3
    1c48:	90 78       	andi	r25, 0x80	; 128
    1c4a:	99 23       	and	r25, r25
    1c4c:	24 f4       	brge	.+8      	; 0x1c56 <main+0x36>
    1c4e:	01 97       	sbiw	r24, 0x01	; 1
    1c50:	8c 6f       	ori	r24, 0xFC	; 252
    1c52:	9f 6f       	ori	r25, 0xFF	; 255
    1c54:	01 96       	adiw	r24, 0x01	; 1
    1c56:	01 96       	adiw	r24, 0x01	; 1
		simonArray[i] = Simon(randomValue);
    1c58:	9e 01       	movw	r18, r28
    1c5a:	22 0f       	add	r18, r18
    1c5c:	33 1f       	adc	r19, r19
    1c5e:	f9 01       	movw	r30, r18
    1c60:	e8 52       	subi	r30, 0x28	; 40
    1c62:	ff 4f       	sbci	r31, 0xFF	; 255
    1c64:	91 83       	std	Z+1, r25	; 0x01
    1c66:	80 83       	st	Z, r24
		correctAnswer[i] = randomValue;
    1c68:	f9 01       	movw	r30, r18
    1c6a:	e6 56       	subi	r30, 0x66	; 102
    1c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c6e:	91 83       	std	Z+1, r25	; 0x01
    1c70:	80 83       	st	Z, r24
	display.clrScr();
	display.InitLCD(LANDSCAPE);

	
	// Fill simonArray with random numbers from 1-4
	for(int i = 0; i < 30; i++){
    1c72:	21 96       	adiw	r28, 0x01	; 1
    1c74:	e3 cf       	rjmp	.-58     	; 0x1c3c <main+0x1c>

	// The while loop is the main game loop that updates and renders the game elements
	while (1)
	{
		// if player has answered incorrectly show Game over screen
		if(error == 1){
    1c76:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <error>
    1c7a:	90 91 99 00 	lds	r25, 0x0099	; 0x800099 <error+0x1>
    1c7e:	01 97       	sbiw	r24, 0x01	; 1
    1c80:	f1 f4       	brne	.+60     	; 0x1cbe <main+0x9e>
			display.clrScr();
    1c82:	84 e1       	ldi	r24, 0x14	; 20
    1c84:	91 e0       	ldi	r25, 0x01	; 1
    1c86:	0e 94 75 11 	call	0x22ea	; 0x22ea <_ZN4UTFT6clrScrEv>
			display.setColor(RED);
    1c8a:	20 e0       	ldi	r18, 0x00	; 0
    1c8c:	40 e0       	ldi	r20, 0x00	; 0
    1c8e:	6f ef       	ldi	r22, 0xFF	; 255
    1c90:	84 e1       	ldi	r24, 0x14	; 20
    1c92:	91 e0       	ldi	r25, 0x01	; 1
    1c94:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
			display.setFont(BigFont);
    1c98:	62 e7       	ldi	r22, 0x72	; 114
    1c9a:	70 e0       	ldi	r23, 0x00	; 0
    1c9c:	84 e1       	ldi	r24, 0x14	; 20
    1c9e:	91 e0       	ldi	r25, 0x01	; 1
    1ca0:	0e 94 23 17 	call	0x2e46	; 0x2e46 <_ZN4UTFT7setFontEPKh>
			display.print("GAME OVER", CENTER, 110);
    1ca4:	00 e0       	ldi	r16, 0x00	; 0
    1ca6:	10 e0       	ldi	r17, 0x00	; 0
    1ca8:	2e e6       	ldi	r18, 0x6E	; 110
    1caa:	30 e0       	ldi	r19, 0x00	; 0
    1cac:	4e e0       	ldi	r20, 0x0E	; 14
    1cae:	57 e2       	ldi	r21, 0x27	; 39
    1cb0:	6c e7       	ldi	r22, 0x7C	; 124
    1cb2:	70 e0       	ldi	r23, 0x00	; 0
    1cb4:	84 e1       	ldi	r24, 0x14	; 20
    1cb6:	91 e0       	ldi	r25, 0x01	; 1
    1cb8:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
    1cbc:	ff cf       	rjmp	.-2      	; 0x1cbc <main+0x9c>
		
		// If player has answered correctly go to the next iteration
		else{
			
			// If player has answered whole color sequence correctly show You win screen 
			if(numberOfSimons == 31){
    1cbe:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <numberOfSimons>
    1cc2:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <numberOfSimons+0x1>
    1cc6:	4f 97       	sbiw	r24, 0x1f	; 31
    1cc8:	f1 f4       	brne	.+60     	; 0x1d06 <main+0xe6>
				display.clrScr();
    1cca:	84 e1       	ldi	r24, 0x14	; 20
    1ccc:	91 e0       	ldi	r25, 0x01	; 1
    1cce:	0e 94 75 11 	call	0x22ea	; 0x22ea <_ZN4UTFT6clrScrEv>
				display.setColor(WHITE);
    1cd2:	2f ef       	ldi	r18, 0xFF	; 255
    1cd4:	4f ef       	ldi	r20, 0xFF	; 255
    1cd6:	6f ef       	ldi	r22, 0xFF	; 255
    1cd8:	84 e1       	ldi	r24, 0x14	; 20
    1cda:	91 e0       	ldi	r25, 0x01	; 1
    1cdc:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
				display.setFont(BigFont);
    1ce0:	62 e7       	ldi	r22, 0x72	; 114
    1ce2:	70 e0       	ldi	r23, 0x00	; 0
    1ce4:	84 e1       	ldi	r24, 0x14	; 20
    1ce6:	91 e0       	ldi	r25, 0x01	; 1
    1ce8:	0e 94 23 17 	call	0x2e46	; 0x2e46 <_ZN4UTFT7setFontEPKh>
				display.print("YOU WIN", CENTER, 110);
    1cec:	00 e0       	ldi	r16, 0x00	; 0
    1cee:	10 e0       	ldi	r17, 0x00	; 0
    1cf0:	2e e6       	ldi	r18, 0x6E	; 110
    1cf2:	30 e0       	ldi	r19, 0x00	; 0
    1cf4:	4e e0       	ldi	r20, 0x0E	; 14
    1cf6:	57 e2       	ldi	r21, 0x27	; 39
    1cf8:	66 e8       	ldi	r22, 0x86	; 134
    1cfa:	70 e0       	ldi	r23, 0x00	; 0
    1cfc:	84 e1       	ldi	r24, 0x14	; 20
    1cfe:	91 e0       	ldi	r25, 0x01	; 1
    1d00:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
    1d04:	ff cf       	rjmp	.-2      	; 0x1d04 <main+0xe4>
				while(1);
			}
			
			// CPUs turn to blink next color sequence
			if(turnCPU == 1){
    1d06:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <turnCPU>
    1d0a:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <turnCPU+0x1>
    1d0e:	01 97       	sbiw	r24, 0x01	; 1
    1d10:	e1 f4       	brne	.+56     	; 0x1d4a <main+0x12a>
    1d12:	c0 e0       	ldi	r28, 0x00	; 0
    1d14:	d0 e0       	ldi	r29, 0x00	; 0
				for (int i = 0; i < numberOfSimons; i++)
    1d16:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <numberOfSimons>
    1d1a:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <numberOfSimons+0x1>
    1d1e:	c8 17       	cp	r28, r24
    1d20:	d9 07       	cpc	r29, r25
    1d22:	4c f4       	brge	.+18     	; 0x1d36 <main+0x116>
				{
					simonArray[i].flashRect();
    1d24:	ce 01       	movw	r24, r28
    1d26:	88 0f       	add	r24, r24
    1d28:	99 1f       	adc	r25, r25
    1d2a:	88 52       	subi	r24, 0x28	; 40
    1d2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d2e:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <_ZN5Simon9flashRectEv>
				while(1);
			}
			
			// CPUs turn to blink next color sequence
			if(turnCPU == 1){
				for (int i = 0; i < numberOfSimons; i++)
    1d32:	21 96       	adiw	r28, 0x01	; 1
    1d34:	f0 cf       	rjmp	.-32     	; 0x1d16 <main+0xf6>
				{
					simonArray[i].flashRect();
				}
				turnPlayer = 1;
    1d36:	81 e0       	ldi	r24, 0x01	; 1
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <turnPlayer+0x1>
    1d3e:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <turnPlayer>
				turnCPU = 0;
    1d42:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <turnCPU+0x1>
    1d46:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <turnCPU>
			}
			
			// Draw default screen while you wait for players input
			drawLine();
    1d4a:	0e 94 ae 09 	call	0x135c	; 0x135c <_Z8drawLinev>
			
			// Check if pressed key1 is correct answer in the color sequence
			if((PINB & (1 << PB0)) == 0){
    1d4e:	b0 99       	sbic	0x16, 0	; 22
    1d50:	36 c0       	rjmp	.+108    	; 0x1dbe <main+0x19e>
				int x = 1;
				if(correctAnswer[countAnswer] == x){
    1d52:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__data_end>
    1d56:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__data_end+0x1>
    1d5a:	fc 01       	movw	r30, r24
    1d5c:	ee 0f       	add	r30, r30
    1d5e:	ff 1f       	adc	r31, r31
    1d60:	e6 56       	subi	r30, 0x66	; 102
    1d62:	ff 4f       	sbci	r31, 0xFF	; 255
    1d64:	20 81       	ld	r18, Z
    1d66:	31 81       	ldd	r19, Z+1	; 0x01
    1d68:	21 30       	cpi	r18, 0x01	; 1
    1d6a:	31 05       	cpc	r19, r1
    1d6c:	c9 f4       	brne	.+50     	; 0x1da0 <main+0x180>
					countAnswer++;
    1d6e:	01 96       	adiw	r24, 0x01	; 1
    1d70:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__data_end+0x1>
    1d74:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__data_end>
					display.setColor(WHITE);
    1d78:	2f ef       	ldi	r18, 0xFF	; 255
    1d7a:	4f ef       	ldi	r20, 0xFF	; 255
    1d7c:	6f ef       	ldi	r22, 0xFF	; 255
    1d7e:	84 e1       	ldi	r24, 0x14	; 20
    1d80:	91 e0       	ldi	r25, 0x01	; 1
    1d82:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
					display.print("CORRECT", CENTER, 110);
    1d86:	00 e0       	ldi	r16, 0x00	; 0
    1d88:	10 e0       	ldi	r17, 0x00	; 0
    1d8a:	2e e6       	ldi	r18, 0x6E	; 110
    1d8c:	30 e0       	ldi	r19, 0x00	; 0
    1d8e:	4e e0       	ldi	r20, 0x0E	; 14
    1d90:	57 e2       	ldi	r21, 0x27	; 39
    1d92:	6e e8       	ldi	r22, 0x8E	; 142
    1d94:	70 e0       	ldi	r23, 0x00	; 0
    1d96:	84 e1       	ldi	r24, 0x14	; 20
    1d98:	91 e0       	ldi	r25, 0x01	; 1
    1d9a:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
    1d9e:	06 c0       	rjmp	.+12     	; 0x1dac <main+0x18c>
					}else{
					error = 1;
    1da0:	81 e0       	ldi	r24, 0x01	; 1
    1da2:	90 e0       	ldi	r25, 0x00	; 0
    1da4:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <error+0x1>
    1da8:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <error>
    1dac:	2f ef       	ldi	r18, 0xFF	; 255
    1dae:	8f e3       	ldi	r24, 0x3F	; 63
    1db0:	9b e0       	ldi	r25, 0x0B	; 11
    1db2:	21 50       	subi	r18, 0x01	; 1
    1db4:	80 40       	sbci	r24, 0x00	; 0
    1db6:	90 40       	sbci	r25, 0x00	; 0
    1db8:	e1 f7       	brne	.-8      	; 0x1db2 <main+0x192>
    1dba:	00 c0       	rjmp	.+0      	; 0x1dbc <main+0x19c>
    1dbc:	00 00       	nop
				// Switch debounce
				_delay_ms(500);
			}
			
			// Check if pressed key2 is correct answer in the color sequence
			if((PINB & (1 << PB1)) == 0){
    1dbe:	b1 99       	sbic	0x16, 1	; 22
    1dc0:	36 c0       	rjmp	.+108    	; 0x1e2e <main+0x20e>
				int x = 2;
				if(correctAnswer[countAnswer] == x){
    1dc2:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__data_end>
    1dc6:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__data_end+0x1>
    1dca:	fc 01       	movw	r30, r24
    1dcc:	ee 0f       	add	r30, r30
    1dce:	ff 1f       	adc	r31, r31
    1dd0:	e6 56       	subi	r30, 0x66	; 102
    1dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd4:	20 81       	ld	r18, Z
    1dd6:	31 81       	ldd	r19, Z+1	; 0x01
    1dd8:	22 30       	cpi	r18, 0x02	; 2
    1dda:	31 05       	cpc	r19, r1
    1ddc:	c9 f4       	brne	.+50     	; 0x1e10 <main+0x1f0>
					countAnswer++;
    1dde:	01 96       	adiw	r24, 0x01	; 1
    1de0:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__data_end+0x1>
    1de4:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__data_end>
					display.setColor(WHITE);
    1de8:	2f ef       	ldi	r18, 0xFF	; 255
    1dea:	4f ef       	ldi	r20, 0xFF	; 255
    1dec:	6f ef       	ldi	r22, 0xFF	; 255
    1dee:	84 e1       	ldi	r24, 0x14	; 20
    1df0:	91 e0       	ldi	r25, 0x01	; 1
    1df2:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
					display.print("CORRECT", CENTER, 110);
    1df6:	00 e0       	ldi	r16, 0x00	; 0
    1df8:	10 e0       	ldi	r17, 0x00	; 0
    1dfa:	2e e6       	ldi	r18, 0x6E	; 110
    1dfc:	30 e0       	ldi	r19, 0x00	; 0
    1dfe:	4e e0       	ldi	r20, 0x0E	; 14
    1e00:	57 e2       	ldi	r21, 0x27	; 39
    1e02:	6e e8       	ldi	r22, 0x8E	; 142
    1e04:	70 e0       	ldi	r23, 0x00	; 0
    1e06:	84 e1       	ldi	r24, 0x14	; 20
    1e08:	91 e0       	ldi	r25, 0x01	; 1
    1e0a:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
    1e0e:	06 c0       	rjmp	.+12     	; 0x1e1c <main+0x1fc>
				}
				else{
					error = 1;
    1e10:	81 e0       	ldi	r24, 0x01	; 1
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <error+0x1>
    1e18:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <error>
    1e1c:	2f ef       	ldi	r18, 0xFF	; 255
    1e1e:	8f e3       	ldi	r24, 0x3F	; 63
    1e20:	9b e0       	ldi	r25, 0x0B	; 11
    1e22:	21 50       	subi	r18, 0x01	; 1
    1e24:	80 40       	sbci	r24, 0x00	; 0
    1e26:	90 40       	sbci	r25, 0x00	; 0
    1e28:	e1 f7       	brne	.-8      	; 0x1e22 <main+0x202>
    1e2a:	00 c0       	rjmp	.+0      	; 0x1e2c <main+0x20c>
    1e2c:	00 00       	nop
				// Switch debounce
				_delay_ms(500);
			}
			
			// Check if pressed key3 is correct answer in the color sequence
			if((PINB & (1 << PB2)) == 0){
    1e2e:	b2 99       	sbic	0x16, 2	; 22
    1e30:	36 c0       	rjmp	.+108    	; 0x1e9e <main+0x27e>
				int x = 3;
				if(correctAnswer[countAnswer] == x){
    1e32:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__data_end>
    1e36:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__data_end+0x1>
    1e3a:	fc 01       	movw	r30, r24
    1e3c:	ee 0f       	add	r30, r30
    1e3e:	ff 1f       	adc	r31, r31
    1e40:	e6 56       	subi	r30, 0x66	; 102
    1e42:	ff 4f       	sbci	r31, 0xFF	; 255
    1e44:	20 81       	ld	r18, Z
    1e46:	31 81       	ldd	r19, Z+1	; 0x01
    1e48:	23 30       	cpi	r18, 0x03	; 3
    1e4a:	31 05       	cpc	r19, r1
    1e4c:	c9 f4       	brne	.+50     	; 0x1e80 <main+0x260>
					countAnswer++;
    1e4e:	01 96       	adiw	r24, 0x01	; 1
    1e50:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__data_end+0x1>
    1e54:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__data_end>
					display.setColor(WHITE);
    1e58:	2f ef       	ldi	r18, 0xFF	; 255
    1e5a:	4f ef       	ldi	r20, 0xFF	; 255
    1e5c:	6f ef       	ldi	r22, 0xFF	; 255
    1e5e:	84 e1       	ldi	r24, 0x14	; 20
    1e60:	91 e0       	ldi	r25, 0x01	; 1
    1e62:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
					display.print("CORRECT", CENTER, 110);
    1e66:	00 e0       	ldi	r16, 0x00	; 0
    1e68:	10 e0       	ldi	r17, 0x00	; 0
    1e6a:	2e e6       	ldi	r18, 0x6E	; 110
    1e6c:	30 e0       	ldi	r19, 0x00	; 0
    1e6e:	4e e0       	ldi	r20, 0x0E	; 14
    1e70:	57 e2       	ldi	r21, 0x27	; 39
    1e72:	6e e8       	ldi	r22, 0x8E	; 142
    1e74:	70 e0       	ldi	r23, 0x00	; 0
    1e76:	84 e1       	ldi	r24, 0x14	; 20
    1e78:	91 e0       	ldi	r25, 0x01	; 1
    1e7a:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
    1e7e:	06 c0       	rjmp	.+12     	; 0x1e8c <main+0x26c>
				}
				else{
					error = 1;
    1e80:	81 e0       	ldi	r24, 0x01	; 1
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <error+0x1>
    1e88:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <error>
    1e8c:	2f ef       	ldi	r18, 0xFF	; 255
    1e8e:	8f e3       	ldi	r24, 0x3F	; 63
    1e90:	9b e0       	ldi	r25, 0x0B	; 11
    1e92:	21 50       	subi	r18, 0x01	; 1
    1e94:	80 40       	sbci	r24, 0x00	; 0
    1e96:	90 40       	sbci	r25, 0x00	; 0
    1e98:	e1 f7       	brne	.-8      	; 0x1e92 <main+0x272>
    1e9a:	00 c0       	rjmp	.+0      	; 0x1e9c <main+0x27c>
    1e9c:	00 00       	nop
				// Switch debounce
				_delay_ms(500);
			}
			
			// Check if pressed key4 is correct answer in the color sequence
			if((PINB & (1 << PB3)) == 0){
    1e9e:	b3 99       	sbic	0x16, 3	; 22
    1ea0:	36 c0       	rjmp	.+108    	; 0x1f0e <main+0x2ee>
				int x = 4;
				if(correctAnswer[countAnswer] == x){
    1ea2:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__data_end>
    1ea6:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <__data_end+0x1>
    1eaa:	fc 01       	movw	r30, r24
    1eac:	ee 0f       	add	r30, r30
    1eae:	ff 1f       	adc	r31, r31
    1eb0:	e6 56       	subi	r30, 0x66	; 102
    1eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb4:	20 81       	ld	r18, Z
    1eb6:	31 81       	ldd	r19, Z+1	; 0x01
    1eb8:	24 30       	cpi	r18, 0x04	; 4
    1eba:	31 05       	cpc	r19, r1
    1ebc:	c9 f4       	brne	.+50     	; 0x1ef0 <main+0x2d0>
					countAnswer++;
    1ebe:	01 96       	adiw	r24, 0x01	; 1
    1ec0:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__data_end+0x1>
    1ec4:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__data_end>
					display.setColor(WHITE);
    1ec8:	2f ef       	ldi	r18, 0xFF	; 255
    1eca:	4f ef       	ldi	r20, 0xFF	; 255
    1ecc:	6f ef       	ldi	r22, 0xFF	; 255
    1ece:	84 e1       	ldi	r24, 0x14	; 20
    1ed0:	91 e0       	ldi	r25, 0x01	; 1
    1ed2:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
					display.print("CORRECT", CENTER, 110);
    1ed6:	00 e0       	ldi	r16, 0x00	; 0
    1ed8:	10 e0       	ldi	r17, 0x00	; 0
    1eda:	2e e6       	ldi	r18, 0x6E	; 110
    1edc:	30 e0       	ldi	r19, 0x00	; 0
    1ede:	4e e0       	ldi	r20, 0x0E	; 14
    1ee0:	57 e2       	ldi	r21, 0x27	; 39
    1ee2:	6e e8       	ldi	r22, 0x8E	; 142
    1ee4:	70 e0       	ldi	r23, 0x00	; 0
    1ee6:	84 e1       	ldi	r24, 0x14	; 20
    1ee8:	91 e0       	ldi	r25, 0x01	; 1
    1eea:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4UTFT5printEPKciii>
    1eee:	06 c0       	rjmp	.+12     	; 0x1efc <main+0x2dc>
				}
				else{
					error = 1;
    1ef0:	81 e0       	ldi	r24, 0x01	; 1
    1ef2:	90 e0       	ldi	r25, 0x00	; 0
    1ef4:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <error+0x1>
    1ef8:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <error>
    1efc:	2f ef       	ldi	r18, 0xFF	; 255
    1efe:	8f e3       	ldi	r24, 0x3F	; 63
    1f00:	9b e0       	ldi	r25, 0x0B	; 11
    1f02:	21 50       	subi	r18, 0x01	; 1
    1f04:	80 40       	sbci	r24, 0x00	; 0
    1f06:	90 40       	sbci	r25, 0x00	; 0
    1f08:	e1 f7       	brne	.-8      	; 0x1f02 <main+0x2e2>
    1f0a:	00 c0       	rjmp	.+0      	; 0x1f0c <main+0x2ec>
    1f0c:	00 00       	nop
				// Switch debounce
				_delay_ms(500);
			}
			
			// Check if player has memorized whole color sequence
			if(countAnswer == numberOfSimons){
    1f0e:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <__data_end>
    1f12:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <__data_end+0x1>
    1f16:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <numberOfSimons>
    1f1a:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <numberOfSimons+0x1>
    1f1e:	28 17       	cp	r18, r24
    1f20:	39 07       	cpc	r19, r25
    1f22:	09 f0       	breq	.+2      	; 0x1f26 <main+0x306>
    1f24:	a8 ce       	rjmp	.-688    	; 0x1c76 <main+0x56>
				
				// Set CPUs turn flag to show next color sequence
				turnPlayer = 0;
    1f26:	10 92 d7 00 	sts	0x00D7, r1	; 0x8000d7 <turnPlayer+0x1>
    1f2a:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <turnPlayer>
				turnCPU = 1;
    1f2e:	21 e0       	ldi	r18, 0x01	; 1
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	30 93 67 00 	sts	0x0067, r19	; 0x800067 <turnCPU+0x1>
    1f36:	20 93 66 00 	sts	0x0066, r18	; 0x800066 <turnCPU>
				
				// Increment length of next color sequence
				numberOfSimons++;
    1f3a:	01 96       	adiw	r24, 0x01	; 1
    1f3c:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <numberOfSimons+0x1>
    1f40:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <numberOfSimons>
				countAnswer = 0;
    1f44:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <__data_end+0x1>
    1f48:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <__data_end>
    1f4c:	94 ce       	rjmp	.-728    	; 0x1c76 <main+0x56>

00001f4e <_GLOBAL__sub_I_display>:
			}
		}
	}
    1f4e:	6f ef       	ldi	r22, 0xFF	; 255
    1f50:	7f ef       	ldi	r23, 0xFF	; 255
    1f52:	81 e0       	ldi	r24, 0x01	; 1
    1f54:	90 e0       	ldi	r25, 0x00	; 0
    1f56:	0e 94 83 09 	call	0x1306	; 0x1306 <_Z41__static_initialization_and_destruction_0ii>
    1f5a:	08 95       	ret

00001f5c <SSD1289_init>:



void SSD1289_init()
{	
	DATA_PORT_LOW_DDR = 0xff;
    1f5c:	8f ef       	ldi	r24, 0xFF	; 255
    1f5e:	8a bb       	out	0x1a, r24	; 26
	DATA_PORT_HIGH_DDR = 0xff;
    1f60:	81 bb       	out	0x11, r24	; 17
			
	RS_PORT_DDR |= _BV( RS_PIN);
    1f62:	84 b3       	in	r24, 0x14	; 20
    1f64:	80 64       	ori	r24, 0x40	; 64
    1f66:	84 bb       	out	0x14, r24	; 20
				
	WR_PORT_DDR |= _BV(WR_PIN);
    1f68:	84 b3       	in	r24, 0x14	; 20
    1f6a:	80 68       	ori	r24, 0x80	; 128
    1f6c:	84 bb       	out	0x14, r24	; 20

	CS_PORT_DDR |= _BV(CS_PIN);
    1f6e:	84 b3       	in	r24, 0x14	; 20
    1f70:	82 60       	ori	r24, 0x02	; 2
    1f72:	84 bb       	out	0x14, r24	; 20
		
	RD_PORT_DDR |= _BV(RD_PIN);
    1f74:	87 b3       	in	r24, 0x17	; 23
    1f76:	80 62       	ori	r24, 0x20	; 32
    1f78:	87 bb       	out	0x17, r24	; 23
	RD_PORT |= _BV(RD_PIN);
    1f7a:	88 b3       	in	r24, 0x18	; 24
    1f7c:	80 62       	ori	r24, 0x20	; 32
    1f7e:	88 bb       	out	0x18, r24	; 24
		
	RESET_PORT_DDR |= _BV(RESET_PIN);
    1f80:	84 b3       	in	r24, 0x14	; 20
    1f82:	81 60       	ori	r24, 0x01	; 1
    1f84:	84 bb       	out	0x14, r24	; 20
		
	BACK_LIGHT_PORT |= _BV(BACK_LIGHT_PIN);
    1f86:	85 b3       	in	r24, 0x15	; 21
    1f88:	82 60       	ori	r24, 0x02	; 2
    1f8a:	85 bb       	out	0x15, r24	; 21
	
	BACK_LIGHT_DDR |= _BV(BACK_LIGHT_PIN);			
    1f8c:	84 b3       	in	r24, 0x14	; 20
    1f8e:	82 60       	ori	r24, 0x02	; 2
    1f90:	84 bb       	out	0x14, r24	; 20
	
	sbi(RESET_PORT, RESET_PIN);
    1f92:	85 b3       	in	r24, 0x15	; 21
    1f94:	81 60       	ori	r24, 0x01	; 1
    1f96:	85 bb       	out	0x15, r24	; 21
    1f98:	8f ef       	ldi	r24, 0xFF	; 255
    1f9a:	93 e2       	ldi	r25, 0x23	; 35
    1f9c:	01 97       	sbiw	r24, 0x01	; 1
    1f9e:	f1 f7       	brne	.-4      	; 0x1f9c <SSD1289_init+0x40>
    1fa0:	00 c0       	rjmp	.+0      	; 0x1fa2 <SSD1289_init+0x46>
    1fa2:	00 00       	nop
	_delay_ms(5);
	cbi(RESET_PORT, RESET_PIN);
    1fa4:	85 b3       	in	r24, 0x15	; 21
    1fa6:	8e 7f       	andi	r24, 0xFE	; 254
    1fa8:	85 bb       	out	0x15, r24	; 21
    1faa:	8f ef       	ldi	r24, 0xFF	; 255
    1fac:	9b e6       	ldi	r25, 0x6B	; 107
    1fae:	01 97       	sbiw	r24, 0x01	; 1
    1fb0:	f1 f7       	brne	.-4      	; 0x1fae <SSD1289_init+0x52>
    1fb2:	00 c0       	rjmp	.+0      	; 0x1fb4 <SSD1289_init+0x58>
    1fb4:	00 00       	nop
	_delay_ms(15);
	sbi(RESET_PORT, RESET_PIN);
    1fb6:	85 b3       	in	r24, 0x15	; 21
    1fb8:	81 60       	ori	r24, 0x01	; 1
    1fba:	85 bb       	out	0x15, r24	; 21
    1fbc:	8f ef       	ldi	r24, 0xFF	; 255
    1fbe:	9b e6       	ldi	r25, 0x6B	; 107
    1fc0:	01 97       	sbiw	r24, 0x01	; 1
    1fc2:	f1 f7       	brne	.-4      	; 0x1fc0 <SSD1289_init+0x64>
    1fc4:	00 c0       	rjmp	.+0      	; 0x1fc6 <SSD1289_init+0x6a>
    1fc6:	00 00       	nop
	_delay_ms(15);

	cbi(CS_PORT, CS_PIN);
    1fc8:	85 b3       	in	r24, 0x15	; 21
    1fca:	8d 7f       	andi	r24, 0xFD	; 253
    1fcc:	85 bb       	out	0x15, r24	; 21

	LCD_Write_COM_DATA(0x00,0x0001);
    1fce:	61 e0       	ldi	r22, 0x01	; 1
    1fd0:	70 e0       	ldi	r23, 0x00	; 0
    1fd2:	80 e0       	ldi	r24, 0x00	; 0
    1fd4:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x03,0xA8A4);
    1fd8:	64 ea       	ldi	r22, 0xA4	; 164
    1fda:	78 ea       	ldi	r23, 0xA8	; 168
    1fdc:	83 e0       	ldi	r24, 0x03	; 3
    1fde:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0C,0x0000);
    1fe2:	60 e0       	ldi	r22, 0x00	; 0
    1fe4:	70 e0       	ldi	r23, 0x00	; 0
    1fe6:	8c e0       	ldi	r24, 0x0C	; 12
    1fe8:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0D,0x080C);
    1fec:	6c e0       	ldi	r22, 0x0C	; 12
    1fee:	78 e0       	ldi	r23, 0x08	; 8
    1ff0:	8d e0       	ldi	r24, 0x0D	; 13
    1ff2:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0E,0x2B00);
    1ff6:	60 e0       	ldi	r22, 0x00	; 0
    1ff8:	7b e2       	ldi	r23, 0x2B	; 43
    1ffa:	8e e0       	ldi	r24, 0x0E	; 14
    1ffc:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x1E,0x00B7);
    2000:	67 eb       	ldi	r22, 0xB7	; 183
    2002:	70 e0       	ldi	r23, 0x00	; 0
    2004:	8e e1       	ldi	r24, 0x1E	; 30
    2006:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x01,0x2B3F);
    200a:	6f e3       	ldi	r22, 0x3F	; 63
    200c:	7b e2       	ldi	r23, 0x2B	; 43
    200e:	81 e0       	ldi	r24, 0x01	; 1
    2010:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x02,0x0600);
    2014:	60 e0       	ldi	r22, 0x00	; 0
    2016:	76 e0       	ldi	r23, 0x06	; 6
    2018:	82 e0       	ldi	r24, 0x02	; 2
    201a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x10,0x0000);
    201e:	60 e0       	ldi	r22, 0x00	; 0
    2020:	70 e0       	ldi	r23, 0x00	; 0
    2022:	80 e1       	ldi	r24, 0x10	; 16
    2024:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x11,0x6070);
    2028:	60 e7       	ldi	r22, 0x70	; 112
    202a:	70 e6       	ldi	r23, 0x60	; 96
    202c:	81 e1       	ldi	r24, 0x11	; 17
    202e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x05,0x0000);
    2032:	60 e0       	ldi	r22, 0x00	; 0
    2034:	70 e0       	ldi	r23, 0x00	; 0
    2036:	85 e0       	ldi	r24, 0x05	; 5
    2038:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x06,0x0000);
    203c:	60 e0       	ldi	r22, 0x00	; 0
    203e:	70 e0       	ldi	r23, 0x00	; 0
    2040:	86 e0       	ldi	r24, 0x06	; 6
    2042:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x16,0xEF1C);
    2046:	6c e1       	ldi	r22, 0x1C	; 28
    2048:	7f ee       	ldi	r23, 0xEF	; 239
    204a:	86 e1       	ldi	r24, 0x16	; 22
    204c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x17,0x0003);
    2050:	63 e0       	ldi	r22, 0x03	; 3
    2052:	70 e0       	ldi	r23, 0x00	; 0
    2054:	87 e1       	ldi	r24, 0x17	; 23
    2056:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x07,0x0233);
    205a:	63 e3       	ldi	r22, 0x33	; 51
    205c:	72 e0       	ldi	r23, 0x02	; 2
    205e:	87 e0       	ldi	r24, 0x07	; 7
    2060:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0B,0x0000);
    2064:	60 e0       	ldi	r22, 0x00	; 0
    2066:	70 e0       	ldi	r23, 0x00	; 0
    2068:	8b e0       	ldi	r24, 0x0B	; 11
    206a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x0F,0x0000);
    206e:	60 e0       	ldi	r22, 0x00	; 0
    2070:	70 e0       	ldi	r23, 0x00	; 0
    2072:	8f e0       	ldi	r24, 0x0F	; 15
    2074:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x41,0x0000);
    2078:	60 e0       	ldi	r22, 0x00	; 0
    207a:	70 e0       	ldi	r23, 0x00	; 0
    207c:	81 e4       	ldi	r24, 0x41	; 65
    207e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x42,0x0000);
    2082:	60 e0       	ldi	r22, 0x00	; 0
    2084:	70 e0       	ldi	r23, 0x00	; 0
    2086:	82 e4       	ldi	r24, 0x42	; 66
    2088:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x48,0x0000);
    208c:	60 e0       	ldi	r22, 0x00	; 0
    208e:	70 e0       	ldi	r23, 0x00	; 0
    2090:	88 e4       	ldi	r24, 0x48	; 72
    2092:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x49,0x013F);
    2096:	6f e3       	ldi	r22, 0x3F	; 63
    2098:	71 e0       	ldi	r23, 0x01	; 1
    209a:	89 e4       	ldi	r24, 0x49	; 73
    209c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4A,0x0000);
    20a0:	60 e0       	ldi	r22, 0x00	; 0
    20a2:	70 e0       	ldi	r23, 0x00	; 0
    20a4:	8a e4       	ldi	r24, 0x4A	; 74
    20a6:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4B,0x0000);
    20aa:	60 e0       	ldi	r22, 0x00	; 0
    20ac:	70 e0       	ldi	r23, 0x00	; 0
    20ae:	8b e4       	ldi	r24, 0x4B	; 75
    20b0:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x44,0xEF00);
    20b4:	60 e0       	ldi	r22, 0x00	; 0
    20b6:	7f ee       	ldi	r23, 0xEF	; 239
    20b8:	84 e4       	ldi	r24, 0x44	; 68
    20ba:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x45,0x0000);
    20be:	60 e0       	ldi	r22, 0x00	; 0
    20c0:	70 e0       	ldi	r23, 0x00	; 0
    20c2:	85 e4       	ldi	r24, 0x45	; 69
    20c4:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x46,0x013F);
    20c8:	6f e3       	ldi	r22, 0x3F	; 63
    20ca:	71 e0       	ldi	r23, 0x01	; 1
    20cc:	86 e4       	ldi	r24, 0x46	; 70
    20ce:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x30,0x0707);
    20d2:	67 e0       	ldi	r22, 0x07	; 7
    20d4:	77 e0       	ldi	r23, 0x07	; 7
    20d6:	80 e3       	ldi	r24, 0x30	; 48
    20d8:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x31,0x0204);
    20dc:	64 e0       	ldi	r22, 0x04	; 4
    20de:	72 e0       	ldi	r23, 0x02	; 2
    20e0:	81 e3       	ldi	r24, 0x31	; 49
    20e2:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x32,0x0204);
    20e6:	64 e0       	ldi	r22, 0x04	; 4
    20e8:	72 e0       	ldi	r23, 0x02	; 2
    20ea:	82 e3       	ldi	r24, 0x32	; 50
    20ec:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x33,0x0502);
    20f0:	62 e0       	ldi	r22, 0x02	; 2
    20f2:	75 e0       	ldi	r23, 0x05	; 5
    20f4:	83 e3       	ldi	r24, 0x33	; 51
    20f6:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x34,0x0507);
    20fa:	67 e0       	ldi	r22, 0x07	; 7
    20fc:	75 e0       	ldi	r23, 0x05	; 5
    20fe:	84 e3       	ldi	r24, 0x34	; 52
    2100:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x35,0x0204);
    2104:	64 e0       	ldi	r22, 0x04	; 4
    2106:	72 e0       	ldi	r23, 0x02	; 2
    2108:	85 e3       	ldi	r24, 0x35	; 53
    210a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x36,0x0204);
    210e:	64 e0       	ldi	r22, 0x04	; 4
    2110:	72 e0       	ldi	r23, 0x02	; 2
    2112:	86 e3       	ldi	r24, 0x36	; 54
    2114:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x37,0x0502);
    2118:	62 e0       	ldi	r22, 0x02	; 2
    211a:	75 e0       	ldi	r23, 0x05	; 5
    211c:	87 e3       	ldi	r24, 0x37	; 55
    211e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3A,0x0302);
    2122:	62 e0       	ldi	r22, 0x02	; 2
    2124:	73 e0       	ldi	r23, 0x03	; 3
    2126:	8a e3       	ldi	r24, 0x3A	; 58
    2128:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x3B,0x0302);
    212c:	62 e0       	ldi	r22, 0x02	; 2
    212e:	73 e0       	ldi	r23, 0x03	; 3
    2130:	8b e3       	ldi	r24, 0x3B	; 59
    2132:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x23,0x0000);
    2136:	60 e0       	ldi	r22, 0x00	; 0
    2138:	70 e0       	ldi	r23, 0x00	; 0
    213a:	83 e2       	ldi	r24, 0x23	; 35
    213c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x24,0x0000);
    2140:	60 e0       	ldi	r22, 0x00	; 0
    2142:	70 e0       	ldi	r23, 0x00	; 0
    2144:	84 e2       	ldi	r24, 0x24	; 36
    2146:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x25,0x8000);
    214a:	60 e0       	ldi	r22, 0x00	; 0
    214c:	70 e8       	ldi	r23, 0x80	; 128
    214e:	85 e2       	ldi	r24, 0x25	; 37
    2150:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4f,0x0000);
    2154:	60 e0       	ldi	r22, 0x00	; 0
    2156:	70 e0       	ldi	r23, 0x00	; 0
    2158:	8f e4       	ldi	r24, 0x4F	; 79
    215a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM_DATA(0x4e,0x0000);
    215e:	60 e0       	ldi	r22, 0x00	; 0
    2160:	70 e0       	ldi	r23, 0x00	; 0
    2162:	8e e4       	ldi	r24, 0x4E	; 78
    2164:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
	LCD_Write_COM(0x22);
    2168:	82 e2       	ldi	r24, 0x22	; 34
    216a:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>


	sbi(CS_PORT, CS_PIN);
    216e:	85 b3       	in	r24, 0x15	; 21
    2170:	82 60       	ori	r24, 0x02	; 2
    2172:	85 bb       	out	0x15, r24	; 21
    2174:	08 95       	ret

00002176 <_ZN4UTFTC1Ev>:
		}
		st[c2+f]=0;
	}

	print(st,x,y);
}
    2176:	4f ee       	ldi	r20, 0xEF	; 239
    2178:	50 e0       	ldi	r21, 0x00	; 0
    217a:	60 e0       	ldi	r22, 0x00	; 0
    217c:	70 e0       	ldi	r23, 0x00	; 0
    217e:	fc 01       	movw	r30, r24
    2180:	45 83       	std	Z+5, r20	; 0x05
    2182:	56 83       	std	Z+6, r21	; 0x06
    2184:	67 83       	std	Z+7, r22	; 0x07
    2186:	70 87       	std	Z+8, r23	; 0x08
    2188:	4f e3       	ldi	r20, 0x3F	; 63
    218a:	51 e0       	ldi	r21, 0x01	; 1
    218c:	60 e0       	ldi	r22, 0x00	; 0
    218e:	70 e0       	ldi	r23, 0x00	; 0
    2190:	41 87       	std	Z+9, r20	; 0x09
    2192:	52 87       	std	Z+10, r21	; 0x0a
    2194:	63 87       	std	Z+11, r22	; 0x0b
    2196:	74 87       	std	Z+12, r23	; 0x0c
    2198:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <SSD1289_init>
    219c:	08 95       	ret

0000219e <_ZN4UTFT5setXYEjjjj>:
    219e:	ef 92       	push	r14
    21a0:	ff 92       	push	r15
    21a2:	0f 93       	push	r16
    21a4:	1f 93       	push	r17
    21a6:	cf 93       	push	r28
    21a8:	df 93       	push	r29
    21aa:	eb 01       	movw	r28, r22
    21ac:	e4 2e       	mov	r14, r20
    21ae:	f5 2e       	mov	r15, r21
    21b0:	fc 01       	movw	r30, r24
    21b2:	44 81       	ldd	r20, Z+4	; 0x04
    21b4:	41 30       	cpi	r20, 0x01	; 1
    21b6:	89 f4       	brne	.+34     	; 0x21da <_ZN4UTFT5setXYEjjjj+0x3c>
    21b8:	81 85       	ldd	r24, Z+9	; 0x09
    21ba:	92 85       	ldd	r25, Z+10	; 0x0a
    21bc:	a3 85       	ldd	r26, Z+11	; 0x0b
    21be:	b4 85       	ldd	r27, Z+12	; 0x0c
    21c0:	ac 01       	movw	r20, r24
    21c2:	46 1b       	sub	r20, r22
    21c4:	57 0b       	sbc	r21, r23
    21c6:	82 1b       	sub	r24, r18
    21c8:	93 0b       	sbc	r25, r19
    21ca:	20 2f       	mov	r18, r16
    21cc:	31 2f       	mov	r19, r17
    21ce:	04 2f       	mov	r16, r20
    21d0:	15 2f       	mov	r17, r21
    21d2:	ce 2d       	mov	r28, r14
    21d4:	df 2d       	mov	r29, r15
    21d6:	e8 2e       	mov	r14, r24
    21d8:	f9 2e       	mov	r15, r25
    21da:	32 2f       	mov	r19, r18
    21dc:	22 27       	eor	r18, r18
    21de:	be 01       	movw	r22, r28
    21e0:	62 0f       	add	r22, r18
    21e2:	73 1f       	adc	r23, r19
    21e4:	84 e4       	ldi	r24, 0x44	; 68
    21e6:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    21ea:	6e 2d       	mov	r22, r14
    21ec:	7f 2d       	mov	r23, r15
    21ee:	85 e4       	ldi	r24, 0x45	; 69
    21f0:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    21f4:	60 2f       	mov	r22, r16
    21f6:	71 2f       	mov	r23, r17
    21f8:	86 e4       	ldi	r24, 0x46	; 70
    21fa:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    21fe:	be 01       	movw	r22, r28
    2200:	8e e4       	ldi	r24, 0x4E	; 78
    2202:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2206:	6e 2d       	mov	r22, r14
    2208:	7f 2d       	mov	r23, r15
    220a:	8f e4       	ldi	r24, 0x4F	; 79
    220c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2210:	82 e2       	ldi	r24, 0x22	; 34
    2212:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    2216:	85 b3       	in	r24, 0x15	; 21
    2218:	80 64       	ori	r24, 0x40	; 64
    221a:	85 bb       	out	0x15, r24	; 21
    221c:	df 91       	pop	r29
    221e:	cf 91       	pop	r28
    2220:	1f 91       	pop	r17
    2222:	0f 91       	pop	r16
    2224:	ff 90       	pop	r15
    2226:	ef 90       	pop	r14
    2228:	08 95       	ret

0000222a <_ZN4UTFT8fillRectEiiii>:
    222a:	8f 92       	push	r8
    222c:	9f 92       	push	r9
    222e:	af 92       	push	r10
    2230:	bf 92       	push	r11
    2232:	cf 92       	push	r12
    2234:	df 92       	push	r13
    2236:	ef 92       	push	r14
    2238:	ff 92       	push	r15
    223a:	0f 93       	push	r16
    223c:	1f 93       	push	r17
    223e:	cf 93       	push	r28
    2240:	df 93       	push	r29
    2242:	4c 01       	movw	r8, r24
    2244:	5b 01       	movw	r10, r22
    2246:	7a 01       	movw	r14, r20
    2248:	69 01       	movw	r12, r18
    224a:	e8 01       	movw	r28, r16
    224c:	26 17       	cp	r18, r22
    224e:	37 07       	cpc	r19, r23
    2250:	24 f4       	brge	.+8      	; 0x225a <_ZN4UTFT8fillRectEiiii+0x30>
    2252:	8b 2d       	mov	r24, r11
    2254:	59 01       	movw	r10, r18
    2256:	c6 2e       	mov	r12, r22
    2258:	d8 2e       	mov	r13, r24
    225a:	ce 15       	cp	r28, r14
    225c:	df 05       	cpc	r29, r15
    225e:	2c f4       	brge	.+10     	; 0x226a <_ZN4UTFT8fillRectEiiii+0x40>
    2260:	9e 2d       	mov	r25, r14
    2262:	8f 2d       	mov	r24, r15
    2264:	7e 01       	movw	r14, r28
    2266:	c9 2f       	mov	r28, r25
    2268:	d8 2f       	mov	r29, r24
    226a:	85 b3       	in	r24, 0x15	; 21
    226c:	8d 7f       	andi	r24, 0xFD	; 253
    226e:	85 bb       	out	0x15, r24	; 21
    2270:	8e 01       	movw	r16, r28
    2272:	96 01       	movw	r18, r12
    2274:	a7 01       	movw	r20, r14
    2276:	b5 01       	movw	r22, r10
    2278:	c4 01       	movw	r24, r8
    227a:	0e 94 cf 10 	call	0x219e	; 0x219e <_ZN4UTFT5setXYEjjjj>
    227e:	f4 01       	movw	r30, r8
    2280:	80 81       	ld	r24, Z
    2282:	82 bb       	out	0x12, r24	; 18
    2284:	81 81       	ldd	r24, Z+1	; 0x01
    2286:	8b bb       	out	0x1b, r24	; 27
    2288:	96 01       	movw	r18, r12
    228a:	2a 19       	sub	r18, r10
    228c:	3b 09       	sbc	r19, r11
    228e:	c9 01       	movw	r24, r18
    2290:	33 0f       	add	r19, r19
    2292:	aa 0b       	sbc	r26, r26
    2294:	bb 0b       	sbc	r27, r27
    2296:	9c 01       	movw	r18, r24
    2298:	ad 01       	movw	r20, r26
    229a:	2f 5f       	subi	r18, 0xFF	; 255
    229c:	3f 4f       	sbci	r19, 0xFF	; 255
    229e:	4f 4f       	sbci	r20, 0xFF	; 255
    22a0:	5f 4f       	sbci	r21, 0xFF	; 255
    22a2:	be 01       	movw	r22, r28
    22a4:	6e 19       	sub	r22, r14
    22a6:	7f 09       	sbc	r23, r15
    22a8:	cb 01       	movw	r24, r22
    22aa:	77 0f       	add	r23, r23
    22ac:	aa 0b       	sbc	r26, r26
    22ae:	bb 0b       	sbc	r27, r27
    22b0:	bc 01       	movw	r22, r24
    22b2:	cd 01       	movw	r24, r26
    22b4:	6f 5f       	subi	r22, 0xFF	; 255
    22b6:	7f 4f       	sbci	r23, 0xFF	; 255
    22b8:	8f 4f       	sbci	r24, 0xFF	; 255
    22ba:	9f 4f       	sbci	r25, 0xFF	; 255
    22bc:	0e 94 71 19 	call	0x32e2	; 0x32e2 <__mulsi3>
    22c0:	0e 94 e5 06 	call	0xdca	; 0xdca <fastfill>
    22c4:	8f ef       	ldi	r24, 0xFF	; 255
    22c6:	8b bb       	out	0x1b, r24	; 27
    22c8:	82 bb       	out	0x12, r24	; 18
    22ca:	85 b3       	in	r24, 0x15	; 21
    22cc:	8d 7f       	andi	r24, 0xFD	; 253
    22ce:	85 bb       	out	0x15, r24	; 21
    22d0:	df 91       	pop	r29
    22d2:	cf 91       	pop	r28
    22d4:	1f 91       	pop	r17
    22d6:	0f 91       	pop	r16
    22d8:	ff 90       	pop	r15
    22da:	ef 90       	pop	r14
    22dc:	df 90       	pop	r13
    22de:	cf 90       	pop	r12
    22e0:	bf 90       	pop	r11
    22e2:	af 90       	pop	r10
    22e4:	9f 90       	pop	r9
    22e6:	8f 90       	pop	r8
    22e8:	08 95       	ret

000022ea <_ZN4UTFT6clrScrEv>:
    22ea:	85 b3       	in	r24, 0x15	; 21
    22ec:	8d 7f       	andi	r24, 0xFD	; 253
    22ee:	85 bb       	out	0x15, r24	; 21
    22f0:	60 e0       	ldi	r22, 0x00	; 0
    22f2:	7f ee       	ldi	r23, 0xEF	; 239
    22f4:	84 e4       	ldi	r24, 0x44	; 68
    22f6:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    22fa:	60 e0       	ldi	r22, 0x00	; 0
    22fc:	70 e0       	ldi	r23, 0x00	; 0
    22fe:	85 e4       	ldi	r24, 0x45	; 69
    2300:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2304:	6f e3       	ldi	r22, 0x3F	; 63
    2306:	71 e0       	ldi	r23, 0x01	; 1
    2308:	86 e4       	ldi	r24, 0x46	; 70
    230a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    230e:	60 e0       	ldi	r22, 0x00	; 0
    2310:	70 e0       	ldi	r23, 0x00	; 0
    2312:	8e e4       	ldi	r24, 0x4E	; 78
    2314:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2318:	60 e0       	ldi	r22, 0x00	; 0
    231a:	70 e0       	ldi	r23, 0x00	; 0
    231c:	8f e4       	ldi	r24, 0x4F	; 79
    231e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2322:	68 e7       	ldi	r22, 0x78	; 120
    2324:	70 e6       	ldi	r23, 0x60	; 96
    2326:	81 e1       	ldi	r24, 0x11	; 17
    2328:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    232c:	82 e2       	ldi	r24, 0x22	; 34
    232e:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    2332:	85 b3       	in	r24, 0x15	; 21
    2334:	80 64       	ori	r24, 0x40	; 64
    2336:	85 bb       	out	0x15, r24	; 21
    2338:	1b ba       	out	0x1b, r1	; 27
    233a:	12 ba       	out	0x12, r1	; 18
    233c:	60 e0       	ldi	r22, 0x00	; 0
    233e:	7c e2       	ldi	r23, 0x2C	; 44
    2340:	81 e0       	ldi	r24, 0x01	; 1
    2342:	90 e0       	ldi	r25, 0x00	; 0
    2344:	0e 94 e5 06 	call	0xdca	; 0xdca <fastfill>
    2348:	8f ef       	ldi	r24, 0xFF	; 255
    234a:	8b bb       	out	0x1b, r24	; 27
    234c:	82 bb       	out	0x12, r24	; 18
    234e:	85 b3       	in	r24, 0x15	; 21
    2350:	8d 7f       	andi	r24, 0xFD	; 253
    2352:	85 bb       	out	0x15, r24	; 21
    2354:	08 95       	ret

00002356 <_ZN4UTFT8setColorEhhh>:
    2356:	e4 2f       	mov	r30, r20
    2358:	f0 e0       	ldi	r31, 0x00	; 0
    235a:	f5 95       	asr	r31
    235c:	e7 95       	ror	r30
    235e:	f5 95       	asr	r31
    2360:	e7 95       	ror	r30
    2362:	f5 95       	asr	r31
    2364:	e7 95       	ror	r30
    2366:	f5 95       	asr	r31
    2368:	e7 95       	ror	r30
    236a:	f5 95       	asr	r31
    236c:	e7 95       	ror	r30
    236e:	68 7f       	andi	r22, 0xF8	; 248
    2370:	e6 2b       	or	r30, r22
    2372:	dc 01       	movw	r26, r24
    2374:	ec 93       	st	X, r30
    2376:	4c 71       	andi	r20, 0x1C	; 28
    2378:	50 e0       	ldi	r21, 0x00	; 0
    237a:	44 0f       	add	r20, r20
    237c:	55 1f       	adc	r21, r21
    237e:	44 0f       	add	r20, r20
    2380:	55 1f       	adc	r21, r21
    2382:	44 0f       	add	r20, r20
    2384:	55 1f       	adc	r21, r21
    2386:	30 e0       	ldi	r19, 0x00	; 0
    2388:	35 95       	asr	r19
    238a:	27 95       	ror	r18
    238c:	35 95       	asr	r19
    238e:	27 95       	ror	r18
    2390:	35 95       	asr	r19
    2392:	27 95       	ror	r18
    2394:	42 2b       	or	r20, r18
    2396:	11 96       	adiw	r26, 0x01	; 1
    2398:	4c 93       	st	X, r20
    239a:	08 95       	ret

0000239c <_ZN4UTFT12setBackColorEhhh>:
    239c:	e4 2f       	mov	r30, r20
    239e:	f0 e0       	ldi	r31, 0x00	; 0
    23a0:	f5 95       	asr	r31
    23a2:	e7 95       	ror	r30
    23a4:	f5 95       	asr	r31
    23a6:	e7 95       	ror	r30
    23a8:	f5 95       	asr	r31
    23aa:	e7 95       	ror	r30
    23ac:	f5 95       	asr	r31
    23ae:	e7 95       	ror	r30
    23b0:	f5 95       	asr	r31
    23b2:	e7 95       	ror	r30
    23b4:	68 7f       	andi	r22, 0xF8	; 248
    23b6:	e6 2b       	or	r30, r22
    23b8:	dc 01       	movw	r26, r24
    23ba:	12 96       	adiw	r26, 0x02	; 2
    23bc:	ec 93       	st	X, r30
    23be:	12 97       	sbiw	r26, 0x02	; 2
    23c0:	4c 71       	andi	r20, 0x1C	; 28
    23c2:	50 e0       	ldi	r21, 0x00	; 0
    23c4:	44 0f       	add	r20, r20
    23c6:	55 1f       	adc	r21, r21
    23c8:	44 0f       	add	r20, r20
    23ca:	55 1f       	adc	r21, r21
    23cc:	44 0f       	add	r20, r20
    23ce:	55 1f       	adc	r21, r21
    23d0:	30 e0       	ldi	r19, 0x00	; 0
    23d2:	35 95       	asr	r19
    23d4:	27 95       	ror	r18
    23d6:	35 95       	asr	r19
    23d8:	27 95       	ror	r18
    23da:	35 95       	asr	r19
    23dc:	27 95       	ror	r18
    23de:	42 2b       	or	r20, r18
    23e0:	13 96       	adiw	r26, 0x03	; 3
    23e2:	4c 93       	st	X, r20
    23e4:	08 95       	ret

000023e6 <_ZN4UTFT7InitLCDEh>:
    23e6:	cf 93       	push	r28
    23e8:	df 93       	push	r29
    23ea:	ec 01       	movw	r28, r24
    23ec:	6c 83       	std	Y+4, r22	; 0x04
    23ee:	2f ef       	ldi	r18, 0xFF	; 255
    23f0:	4f ef       	ldi	r20, 0xFF	; 255
    23f2:	6f ef       	ldi	r22, 0xFF	; 255
    23f4:	0e 94 ab 11 	call	0x2356	; 0x2356 <_ZN4UTFT8setColorEhhh>
    23f8:	20 e0       	ldi	r18, 0x00	; 0
    23fa:	40 e0       	ldi	r20, 0x00	; 0
    23fc:	60 e0       	ldi	r22, 0x00	; 0
    23fe:	ce 01       	movw	r24, r28
    2400:	0e 94 ce 11 	call	0x239c	; 0x239c <_ZN4UTFT12setBackColorEhhh>
    2404:	1e 86       	std	Y+14, r1	; 0x0e
    2406:	1d 86       	std	Y+13, r1	; 0x0d
    2408:	df 91       	pop	r29
    240a:	cf 91       	pop	r28
    240c:	08 95       	ret

0000240e <_ZN4UTFT8setPixelEj>:
    240e:	87 2f       	mov	r24, r23
    2410:	0e 94 35 07 	call	0xe6a	; 0xe6a <LCD_Write_DATA>
    2414:	08 95       	ret

00002416 <_ZN4UTFT9drawHLineEiii>:
    2416:	ef 92       	push	r14
    2418:	ff 92       	push	r15
    241a:	0f 93       	push	r16
    241c:	1f 93       	push	r17
    241e:	cf 93       	push	r28
    2420:	df 93       	push	r29
    2422:	7c 01       	movw	r14, r24
    2424:	e9 01       	movw	r28, r18
    2426:	dd 23       	and	r29, r29
    2428:	2c f4       	brge	.+10     	; 0x2434 <_ZN4UTFT9drawHLineEiii+0x1e>
    242a:	62 0f       	add	r22, r18
    242c:	73 1f       	adc	r23, r19
    242e:	d1 95       	neg	r29
    2430:	c1 95       	neg	r28
    2432:	d1 09       	sbc	r29, r1
    2434:	85 b3       	in	r24, 0x15	; 21
    2436:	8d 7f       	andi	r24, 0xFD	; 253
    2438:	85 bb       	out	0x15, r24	; 21
    243a:	9b 01       	movw	r18, r22
    243c:	2c 0f       	add	r18, r28
    243e:	3d 1f       	adc	r19, r29
    2440:	8a 01       	movw	r16, r20
    2442:	c7 01       	movw	r24, r14
    2444:	0e 94 cf 10 	call	0x219e	; 0x219e <_ZN4UTFT5setXYEjjjj>
    2448:	f7 01       	movw	r30, r14
    244a:	80 81       	ld	r24, Z
    244c:	82 bb       	out	0x12, r24	; 18
    244e:	81 81       	ldd	r24, Z+1	; 0x01
    2450:	8b bb       	out	0x1b, r24	; 27
    2452:	be 01       	movw	r22, r28
    2454:	dd 0f       	add	r29, r29
    2456:	88 0b       	sbc	r24, r24
    2458:	99 0b       	sbc	r25, r25
    245a:	0e 94 e5 06 	call	0xdca	; 0xdca <fastfill>
    245e:	8f ef       	ldi	r24, 0xFF	; 255
    2460:	8b bb       	out	0x1b, r24	; 27
    2462:	82 bb       	out	0x12, r24	; 18
    2464:	85 b3       	in	r24, 0x15	; 21
    2466:	82 60       	ori	r24, 0x02	; 2
    2468:	85 bb       	out	0x15, r24	; 21
    246a:	df 91       	pop	r29
    246c:	cf 91       	pop	r28
    246e:	1f 91       	pop	r17
    2470:	0f 91       	pop	r16
    2472:	ff 90       	pop	r15
    2474:	ef 90       	pop	r14
    2476:	08 95       	ret

00002478 <_ZN4UTFT9drawVLineEiii>:
    2478:	ef 92       	push	r14
    247a:	ff 92       	push	r15
    247c:	0f 93       	push	r16
    247e:	1f 93       	push	r17
    2480:	cf 93       	push	r28
    2482:	df 93       	push	r29
    2484:	7c 01       	movw	r14, r24
    2486:	e9 01       	movw	r28, r18
    2488:	dd 23       	and	r29, r29
    248a:	2c f4       	brge	.+10     	; 0x2496 <_ZN4UTFT9drawVLineEiii+0x1e>
    248c:	42 0f       	add	r20, r18
    248e:	53 1f       	adc	r21, r19
    2490:	d1 95       	neg	r29
    2492:	c1 95       	neg	r28
    2494:	d1 09       	sbc	r29, r1
    2496:	85 b3       	in	r24, 0x15	; 21
    2498:	8d 7f       	andi	r24, 0xFD	; 253
    249a:	85 bb       	out	0x15, r24	; 21
    249c:	8a 01       	movw	r16, r20
    249e:	0c 0f       	add	r16, r28
    24a0:	1d 1f       	adc	r17, r29
    24a2:	9b 01       	movw	r18, r22
    24a4:	c7 01       	movw	r24, r14
    24a6:	0e 94 cf 10 	call	0x219e	; 0x219e <_ZN4UTFT5setXYEjjjj>
    24aa:	f7 01       	movw	r30, r14
    24ac:	80 81       	ld	r24, Z
    24ae:	82 bb       	out	0x12, r24	; 18
    24b0:	81 81       	ldd	r24, Z+1	; 0x01
    24b2:	8b bb       	out	0x1b, r24	; 27
    24b4:	be 01       	movw	r22, r28
    24b6:	dd 0f       	add	r29, r29
    24b8:	88 0b       	sbc	r24, r24
    24ba:	99 0b       	sbc	r25, r25
    24bc:	0e 94 e5 06 	call	0xdca	; 0xdca <fastfill>
    24c0:	8f ef       	ldi	r24, 0xFF	; 255
    24c2:	8b bb       	out	0x1b, r24	; 27
    24c4:	82 bb       	out	0x12, r24	; 18
    24c6:	85 b3       	in	r24, 0x15	; 21
    24c8:	82 60       	ori	r24, 0x02	; 2
    24ca:	85 bb       	out	0x15, r24	; 21
    24cc:	df 91       	pop	r29
    24ce:	cf 91       	pop	r28
    24d0:	1f 91       	pop	r17
    24d2:	0f 91       	pop	r16
    24d4:	ff 90       	pop	r15
    24d6:	ef 90       	pop	r14
    24d8:	08 95       	ret

000024da <_ZN4UTFT8drawLineEiiii>:
    24da:	2f 92       	push	r2
    24dc:	3f 92       	push	r3
    24de:	4f 92       	push	r4
    24e0:	5f 92       	push	r5
    24e2:	6f 92       	push	r6
    24e4:	7f 92       	push	r7
    24e6:	8f 92       	push	r8
    24e8:	9f 92       	push	r9
    24ea:	af 92       	push	r10
    24ec:	bf 92       	push	r11
    24ee:	cf 92       	push	r12
    24f0:	df 92       	push	r13
    24f2:	ef 92       	push	r14
    24f4:	ff 92       	push	r15
    24f6:	0f 93       	push	r16
    24f8:	1f 93       	push	r17
    24fa:	cf 93       	push	r28
    24fc:	df 93       	push	r29
    24fe:	3c 01       	movw	r6, r24
    2500:	5b 01       	movw	r10, r22
    2502:	ea 01       	movw	r28, r20
    2504:	49 01       	movw	r8, r18
    2506:	40 17       	cp	r20, r16
    2508:	51 07       	cpc	r21, r17
    250a:	29 f4       	brne	.+10     	; 0x2516 <_ZN4UTFT8drawLineEiiii+0x3c>
    250c:	26 1b       	sub	r18, r22
    250e:	37 0b       	sbc	r19, r23
    2510:	0e 94 0b 12 	call	0x2416	; 0x2416 <_ZN4UTFT9drawHLineEiii>
    2514:	42 c1       	rjmp	.+644    	; 0x279a <_ZN4UTFT8drawLineEiiii+0x2c0>
    2516:	26 17       	cp	r18, r22
    2518:	37 07       	cpc	r19, r23
    251a:	31 f4       	brne	.+12     	; 0x2528 <_ZN4UTFT8drawLineEiiii+0x4e>
    251c:	98 01       	movw	r18, r16
    251e:	24 1b       	sub	r18, r20
    2520:	35 0b       	sbc	r19, r21
    2522:	0e 94 3c 12 	call	0x2478	; 0x2478 <_ZN4UTFT9drawVLineEiii>
    2526:	39 c1       	rjmp	.+626    	; 0x279a <_ZN4UTFT8drawLineEiiii+0x2c0>
    2528:	dc 01       	movw	r26, r24
    252a:	14 96       	adiw	r26, 0x04	; 4
    252c:	8c 91       	ld	r24, X
    252e:	14 97       	sbiw	r26, 0x04	; 4
    2530:	81 30       	cpi	r24, 0x01	; 1
    2532:	79 f4       	brne	.+30     	; 0x2552 <_ZN4UTFT8drawLineEiiii+0x78>
    2534:	19 96       	adiw	r26, 0x09	; 9
    2536:	8d 91       	ld	r24, X+
    2538:	9d 91       	ld	r25, X+
    253a:	0d 90       	ld	r0, X+
    253c:	bc 91       	ld	r27, X
    253e:	a0 2d       	mov	r26, r0
    2540:	9c 01       	movw	r18, r24
    2542:	26 1b       	sub	r18, r22
    2544:	37 0b       	sbc	r19, r23
    2546:	88 19       	sub	r24, r8
    2548:	99 09       	sbc	r25, r9
    254a:	48 01       	movw	r8, r16
    254c:	8c 01       	movw	r16, r24
    254e:	5a 01       	movw	r10, r20
    2550:	e9 01       	movw	r28, r18
    2552:	c4 01       	movw	r24, r8
    2554:	8a 19       	sub	r24, r10
    2556:	9b 09       	sbc	r25, r11
    2558:	7c 01       	movw	r14, r24
    255a:	22 f4       	brpl	.+8      	; 0x2564 <_ZN4UTFT8drawLineEiiii+0x8a>
    255c:	ee 24       	eor	r14, r14
    255e:	ff 24       	eor	r15, r15
    2560:	e8 1a       	sub	r14, r24
    2562:	f9 0a       	sbc	r15, r25
    2564:	c8 01       	movw	r24, r16
    2566:	8c 1b       	sub	r24, r28
    2568:	9d 0b       	sbc	r25, r29
    256a:	6c 01       	movw	r12, r24
    256c:	22 f4       	brpl	.+8      	; 0x2576 <_ZN4UTFT8drawLineEiiii+0x9c>
    256e:	cc 24       	eor	r12, r12
    2570:	dd 24       	eor	r13, r13
    2572:	c8 1a       	sub	r12, r24
    2574:	d9 0a       	sbc	r13, r25
    2576:	85 b3       	in	r24, 0x15	; 21
    2578:	8d 7f       	andi	r24, 0xFD	; 253
    257a:	85 bb       	out	0x15, r24	; 21
    257c:	60 e0       	ldi	r22, 0x00	; 0
    257e:	7f ee       	ldi	r23, 0xEF	; 239
    2580:	84 e4       	ldi	r24, 0x44	; 68
    2582:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2586:	60 e0       	ldi	r22, 0x00	; 0
    2588:	70 e0       	ldi	r23, 0x00	; 0
    258a:	85 e4       	ldi	r24, 0x45	; 69
    258c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2590:	6f e3       	ldi	r22, 0x3F	; 63
    2592:	71 e0       	ldi	r23, 0x01	; 1
    2594:	86 e4       	ldi	r24, 0x46	; 70
    2596:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    259a:	b5 01       	movw	r22, r10
    259c:	8e e4       	ldi	r24, 0x4E	; 78
    259e:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    25a2:	be 01       	movw	r22, r28
    25a4:	8f e4       	ldi	r24, 0x4F	; 79
    25a6:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    25aa:	ec 14       	cp	r14, r12
    25ac:	fd 04       	cpc	r15, r13
    25ae:	08 f0       	brcs	.+2      	; 0x25b2 <_ZN4UTFT8drawLineEiiii+0xd8>
    25b0:	79 c0       	rjmp	.+242    	; 0x26a4 <_ZN4UTFT8drawLineEiiii+0x1ca>
    25b2:	c0 17       	cp	r28, r16
    25b4:	d1 07       	cpc	r29, r17
    25b6:	dc f5       	brge	.+118    	; 0x262e <_ZN4UTFT8drawLineEiiii+0x154>
    25b8:	a8 14       	cp	r10, r8
    25ba:	b9 04       	cpc	r11, r9
    25bc:	e4 f4       	brge	.+56     	; 0x25f6 <_ZN4UTFT8drawLineEiiii+0x11c>
    25be:	68 e7       	ldi	r22, 0x78	; 120
    25c0:	70 e6       	ldi	r23, 0x60	; 96
    25c2:	81 e1       	ldi	r24, 0x11	; 17
    25c4:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    25c8:	82 e2       	ldi	r24, 0x22	; 34
    25ca:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    25ce:	85 b3       	in	r24, 0x15	; 21
    25d0:	80 64       	ori	r24, 0x40	; 64
    25d2:	85 bb       	out	0x15, r24	; 21
    25d4:	d3 01       	movw	r26, r6
    25d6:	11 96       	adiw	r26, 0x01	; 1
    25d8:	ec 91       	ld	r30, X
    25da:	11 97       	sbiw	r26, 0x01	; 1
    25dc:	8c 91       	ld	r24, X
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	98 2f       	mov	r25, r24
    25e2:	88 27       	eor	r24, r24
    25e4:	2c 2f       	mov	r18, r28
    25e6:	3d 2f       	mov	r19, r29
    25e8:	a4 01       	movw	r20, r8
    25ea:	6a 2d       	mov	r22, r10
    25ec:	7b 2d       	mov	r23, r11
    25ee:	8e 2b       	or	r24, r30
    25f0:	0e 94 53 07 	call	0xea6	; 0xea6 <fastlineAPP>
    25f4:	cf c0       	rjmp	.+414    	; 0x2794 <_ZN4UTFT8drawLineEiiii+0x2ba>
    25f6:	68 e7       	ldi	r22, 0x78	; 120
    25f8:	70 e6       	ldi	r23, 0x60	; 96
    25fa:	81 e1       	ldi	r24, 0x11	; 17
    25fc:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2600:	82 e2       	ldi	r24, 0x22	; 34
    2602:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    2606:	85 b3       	in	r24, 0x15	; 21
    2608:	80 64       	ori	r24, 0x40	; 64
    260a:	85 bb       	out	0x15, r24	; 21
    260c:	d3 01       	movw	r26, r6
    260e:	11 96       	adiw	r26, 0x01	; 1
    2610:	ec 91       	ld	r30, X
    2612:	11 97       	sbiw	r26, 0x01	; 1
    2614:	8c 91       	ld	r24, X
    2616:	90 e0       	ldi	r25, 0x00	; 0
    2618:	98 2f       	mov	r25, r24
    261a:	88 27       	eor	r24, r24
    261c:	2c 2f       	mov	r18, r28
    261e:	3d 2f       	mov	r19, r29
    2620:	a4 01       	movw	r20, r8
    2622:	6a 2d       	mov	r22, r10
    2624:	7b 2d       	mov	r23, r11
    2626:	8e 2b       	or	r24, r30
    2628:	0e 94 df 07 	call	0xfbe	; 0xfbe <fastlineANP>
    262c:	b3 c0       	rjmp	.+358    	; 0x2794 <_ZN4UTFT8drawLineEiiii+0x2ba>
    262e:	a8 14       	cp	r10, r8
    2630:	b9 04       	cpc	r11, r9
    2632:	e4 f4       	brge	.+56     	; 0x266c <_ZN4UTFT8drawLineEiiii+0x192>
    2634:	68 e5       	ldi	r22, 0x58	; 88
    2636:	70 e6       	ldi	r23, 0x60	; 96
    2638:	81 e1       	ldi	r24, 0x11	; 17
    263a:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    263e:	82 e2       	ldi	r24, 0x22	; 34
    2640:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    2644:	85 b3       	in	r24, 0x15	; 21
    2646:	80 64       	ori	r24, 0x40	; 64
    2648:	85 bb       	out	0x15, r24	; 21
    264a:	d3 01       	movw	r26, r6
    264c:	11 96       	adiw	r26, 0x01	; 1
    264e:	ec 91       	ld	r30, X
    2650:	11 97       	sbiw	r26, 0x01	; 1
    2652:	8c 91       	ld	r24, X
    2654:	90 e0       	ldi	r25, 0x00	; 0
    2656:	98 2f       	mov	r25, r24
    2658:	88 27       	eor	r24, r24
    265a:	2c 2f       	mov	r18, r28
    265c:	3d 2f       	mov	r19, r29
    265e:	a4 01       	movw	r20, r8
    2660:	6a 2d       	mov	r22, r10
    2662:	7b 2d       	mov	r23, r11
    2664:	8e 2b       	or	r24, r30
    2666:	0e 94 99 07 	call	0xf32	; 0xf32 <fastlineAPN>
    266a:	94 c0       	rjmp	.+296    	; 0x2794 <_ZN4UTFT8drawLineEiiii+0x2ba>
    266c:	68 e5       	ldi	r22, 0x58	; 88
    266e:	70 e6       	ldi	r23, 0x60	; 96
    2670:	81 e1       	ldi	r24, 0x11	; 17
    2672:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2676:	82 e2       	ldi	r24, 0x22	; 34
    2678:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    267c:	85 b3       	in	r24, 0x15	; 21
    267e:	80 64       	ori	r24, 0x40	; 64
    2680:	85 bb       	out	0x15, r24	; 21
    2682:	d3 01       	movw	r26, r6
    2684:	11 96       	adiw	r26, 0x01	; 1
    2686:	ec 91       	ld	r30, X
    2688:	11 97       	sbiw	r26, 0x01	; 1
    268a:	8c 91       	ld	r24, X
    268c:	90 e0       	ldi	r25, 0x00	; 0
    268e:	98 2f       	mov	r25, r24
    2690:	88 27       	eor	r24, r24
    2692:	2c 2f       	mov	r18, r28
    2694:	3d 2f       	mov	r19, r29
    2696:	a4 01       	movw	r20, r8
    2698:	6a 2d       	mov	r22, r10
    269a:	7b 2d       	mov	r23, r11
    269c:	8e 2b       	or	r24, r30
    269e:	0e 94 25 08 	call	0x104a	; 0x104a <fastlineANN>
    26a2:	78 c0       	rjmp	.+240    	; 0x2794 <_ZN4UTFT8drawLineEiiii+0x2ba>
    26a4:	c0 17       	cp	r28, r16
    26a6:	d1 07       	cpc	r29, r17
    26a8:	dc f5       	brge	.+118    	; 0x2720 <_ZN4UTFT8drawLineEiiii+0x246>
    26aa:	a8 14       	cp	r10, r8
    26ac:	b9 04       	cpc	r11, r9
    26ae:	e4 f4       	brge	.+56     	; 0x26e8 <_ZN4UTFT8drawLineEiiii+0x20e>
    26b0:	60 e7       	ldi	r22, 0x70	; 112
    26b2:	70 e6       	ldi	r23, 0x60	; 96
    26b4:	81 e1       	ldi	r24, 0x11	; 17
    26b6:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    26ba:	82 e2       	ldi	r24, 0x22	; 34
    26bc:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    26c0:	85 b3       	in	r24, 0x15	; 21
    26c2:	80 64       	ori	r24, 0x40	; 64
    26c4:	85 bb       	out	0x15, r24	; 21
    26c6:	d3 01       	movw	r26, r6
    26c8:	11 96       	adiw	r26, 0x01	; 1
    26ca:	ec 91       	ld	r30, X
    26cc:	11 97       	sbiw	r26, 0x01	; 1
    26ce:	8c 91       	ld	r24, X
    26d0:	90 e0       	ldi	r25, 0x00	; 0
    26d2:	98 2f       	mov	r25, r24
    26d4:	88 27       	eor	r24, r24
    26d6:	2c 2f       	mov	r18, r28
    26d8:	3d 2f       	mov	r19, r29
    26da:	a4 01       	movw	r20, r8
    26dc:	6a 2d       	mov	r22, r10
    26de:	7b 2d       	mov	r23, r11
    26e0:	8e 2b       	or	r24, r30
    26e2:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <fastlineBPP>
    26e6:	56 c0       	rjmp	.+172    	; 0x2794 <_ZN4UTFT8drawLineEiiii+0x2ba>
    26e8:	60 e6       	ldi	r22, 0x60	; 96
    26ea:	70 e6       	ldi	r23, 0x60	; 96
    26ec:	81 e1       	ldi	r24, 0x11	; 17
    26ee:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    26f2:	82 e2       	ldi	r24, 0x22	; 34
    26f4:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    26f8:	85 b3       	in	r24, 0x15	; 21
    26fa:	80 64       	ori	r24, 0x40	; 64
    26fc:	85 bb       	out	0x15, r24	; 21
    26fe:	d3 01       	movw	r26, r6
    2700:	11 96       	adiw	r26, 0x01	; 1
    2702:	ec 91       	ld	r30, X
    2704:	11 97       	sbiw	r26, 0x01	; 1
    2706:	8c 91       	ld	r24, X
    2708:	90 e0       	ldi	r25, 0x00	; 0
    270a:	98 2f       	mov	r25, r24
    270c:	88 27       	eor	r24, r24
    270e:	2c 2f       	mov	r18, r28
    2710:	3d 2f       	mov	r19, r29
    2712:	a4 01       	movw	r20, r8
    2714:	6a 2d       	mov	r22, r10
    2716:	7b 2d       	mov	r23, r11
    2718:	8e 2b       	or	r24, r30
    271a:	0e 94 f7 08 	call	0x11ee	; 0x11ee <fastlineBNP>
    271e:	3a c0       	rjmp	.+116    	; 0x2794 <_ZN4UTFT8drawLineEiiii+0x2ba>
    2720:	a8 14       	cp	r10, r8
    2722:	b9 04       	cpc	r11, r9
    2724:	e4 f4       	brge	.+56     	; 0x275e <_ZN4UTFT8drawLineEiiii+0x284>
    2726:	60 e5       	ldi	r22, 0x50	; 80
    2728:	70 e6       	ldi	r23, 0x60	; 96
    272a:	81 e1       	ldi	r24, 0x11	; 17
    272c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2730:	82 e2       	ldi	r24, 0x22	; 34
    2732:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    2736:	85 b3       	in	r24, 0x15	; 21
    2738:	80 64       	ori	r24, 0x40	; 64
    273a:	85 bb       	out	0x15, r24	; 21
    273c:	d3 01       	movw	r26, r6
    273e:	11 96       	adiw	r26, 0x01	; 1
    2740:	ec 91       	ld	r30, X
    2742:	11 97       	sbiw	r26, 0x01	; 1
    2744:	8c 91       	ld	r24, X
    2746:	90 e0       	ldi	r25, 0x00	; 0
    2748:	98 2f       	mov	r25, r24
    274a:	88 27       	eor	r24, r24
    274c:	2c 2f       	mov	r18, r28
    274e:	3d 2f       	mov	r19, r29
    2750:	a4 01       	movw	r20, r8
    2752:	6a 2d       	mov	r22, r10
    2754:	7b 2d       	mov	r23, r11
    2756:	8e 2b       	or	r24, r30
    2758:	0e 94 b1 08 	call	0x1162	; 0x1162 <fastlineBPN>
    275c:	1b c0       	rjmp	.+54     	; 0x2794 <_ZN4UTFT8drawLineEiiii+0x2ba>
    275e:	60 e6       	ldi	r22, 0x60	; 96
    2760:	70 e6       	ldi	r23, 0x60	; 96
    2762:	81 e1       	ldi	r24, 0x11	; 17
    2764:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2768:	82 e2       	ldi	r24, 0x22	; 34
    276a:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    276e:	85 b3       	in	r24, 0x15	; 21
    2770:	80 64       	ori	r24, 0x40	; 64
    2772:	85 bb       	out	0x15, r24	; 21
    2774:	d3 01       	movw	r26, r6
    2776:	11 96       	adiw	r26, 0x01	; 1
    2778:	ec 91       	ld	r30, X
    277a:	11 97       	sbiw	r26, 0x01	; 1
    277c:	8c 91       	ld	r24, X
    277e:	90 e0       	ldi	r25, 0x00	; 0
    2780:	98 2f       	mov	r25, r24
    2782:	88 27       	eor	r24, r24
    2784:	2c 2f       	mov	r18, r28
    2786:	3d 2f       	mov	r19, r29
    2788:	a4 01       	movw	r20, r8
    278a:	6a 2d       	mov	r22, r10
    278c:	7b 2d       	mov	r23, r11
    278e:	8e 2b       	or	r24, r30
    2790:	0e 94 3d 09 	call	0x127a	; 0x127a <fastlineBNN>
    2794:	85 b3       	in	r24, 0x15	; 21
    2796:	82 60       	ori	r24, 0x02	; 2
    2798:	85 bb       	out	0x15, r24	; 21
    279a:	df 91       	pop	r29
    279c:	cf 91       	pop	r28
    279e:	1f 91       	pop	r17
    27a0:	0f 91       	pop	r16
    27a2:	ff 90       	pop	r15
    27a4:	ef 90       	pop	r14
    27a6:	df 90       	pop	r13
    27a8:	cf 90       	pop	r12
    27aa:	bf 90       	pop	r11
    27ac:	af 90       	pop	r10
    27ae:	9f 90       	pop	r9
    27b0:	8f 90       	pop	r8
    27b2:	7f 90       	pop	r7
    27b4:	6f 90       	pop	r6
    27b6:	5f 90       	pop	r5
    27b8:	4f 90       	pop	r4
    27ba:	3f 90       	pop	r3
    27bc:	2f 90       	pop	r2
    27be:	08 95       	ret

000027c0 <_ZN4UTFT9printCharEhii>:
    27c0:	af 92       	push	r10
    27c2:	bf 92       	push	r11
    27c4:	cf 92       	push	r12
    27c6:	df 92       	push	r13
    27c8:	ef 92       	push	r14
    27ca:	ff 92       	push	r15
    27cc:	0f 93       	push	r16
    27ce:	1f 93       	push	r17
    27d0:	cf 93       	push	r28
    27d2:	df 93       	push	r29
    27d4:	ec 01       	movw	r28, r24
    27d6:	7a 01       	movw	r14, r20
    27d8:	89 01       	movw	r16, r18
    27da:	85 b3       	in	r24, 0x15	; 21
    27dc:	8d 7f       	andi	r24, 0xFD	; 253
    27de:	85 bb       	out	0x15, r24	; 21
    27e0:	8c 81       	ldd	r24, Y+4	; 0x04
    27e2:	81 11       	cpse	r24, r1
    27e4:	69 c0       	rjmp	.+210    	; 0x28b8 <_ZN4UTFT9printCharEhii+0xf8>
    27e6:	29 89       	ldd	r18, Y+17	; 0x11
    27e8:	86 2f       	mov	r24, r22
    27ea:	90 e0       	ldi	r25, 0x00	; 0
    27ec:	82 1b       	sub	r24, r18
    27ee:	91 09       	sbc	r25, r1
    27f0:	4f 85       	ldd	r20, Y+15	; 0x0f
    27f2:	54 2f       	mov	r21, r20
    27f4:	56 95       	lsr	r21
    27f6:	56 95       	lsr	r21
    27f8:	56 95       	lsr	r21
    27fa:	28 89       	ldd	r18, Y+16	; 0x10
    27fc:	30 e0       	ldi	r19, 0x00	; 0
    27fe:	52 9f       	mul	r21, r18
    2800:	b0 01       	movw	r22, r0
    2802:	53 9f       	mul	r21, r19
    2804:	70 0d       	add	r23, r0
    2806:	11 24       	eor	r1, r1
    2808:	86 9f       	mul	r24, r22
    280a:	60 01       	movw	r12, r0
    280c:	87 9f       	mul	r24, r23
    280e:	d0 0c       	add	r13, r0
    2810:	96 9f       	mul	r25, r22
    2812:	d0 0c       	add	r13, r0
    2814:	11 24       	eor	r1, r1
    2816:	84 e0       	ldi	r24, 0x04	; 4
    2818:	c8 0e       	add	r12, r24
    281a:	d1 1c       	adc	r13, r1
    281c:	c7 01       	movw	r24, r14
    281e:	84 0f       	add	r24, r20
    2820:	91 1d       	adc	r25, r1
    2822:	20 0f       	add	r18, r16
    2824:	31 1f       	adc	r19, r17
    2826:	59 01       	movw	r10, r18
    2828:	41 e0       	ldi	r20, 0x01	; 1
    282a:	a4 1a       	sub	r10, r20
    282c:	b1 08       	sbc	r11, r1
    282e:	60 e0       	ldi	r22, 0x00	; 0
    2830:	70 e0       	ldi	r23, 0x00	; 0
    2832:	7f ef       	ldi	r23, 0xFF	; 255
    2834:	78 0f       	add	r23, r24
    2836:	6e 0d       	add	r22, r14
    2838:	7f 1d       	adc	r23, r15
    283a:	84 e4       	ldi	r24, 0x44	; 68
    283c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2840:	b8 01       	movw	r22, r16
    2842:	85 e4       	ldi	r24, 0x45	; 69
    2844:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2848:	b5 01       	movw	r22, r10
    284a:	86 e4       	ldi	r24, 0x46	; 70
    284c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2850:	b7 01       	movw	r22, r14
    2852:	8e e4       	ldi	r24, 0x4E	; 78
    2854:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2858:	b8 01       	movw	r22, r16
    285a:	8f e4       	ldi	r24, 0x4F	; 79
    285c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2860:	60 e7       	ldi	r22, 0x70	; 112
    2862:	70 e6       	ldi	r23, 0x60	; 96
    2864:	81 e1       	ldi	r24, 0x11	; 17
    2866:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    286a:	82 e2       	ldi	r24, 0x22	; 34
    286c:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    2870:	85 b3       	in	r24, 0x15	; 21
    2872:	80 64       	ori	r24, 0x40	; 64
    2874:	85 bb       	out	0x15, r24	; 21
    2876:	2a 81       	ldd	r18, Y+2	; 0x02
    2878:	30 e0       	ldi	r19, 0x00	; 0
    287a:	32 2f       	mov	r19, r18
    287c:	22 27       	eor	r18, r18
    287e:	8b 81       	ldd	r24, Y+3	; 0x03
    2880:	28 2b       	or	r18, r24
    2882:	48 81       	ld	r20, Y
    2884:	50 e0       	ldi	r21, 0x00	; 0
    2886:	54 2f       	mov	r21, r20
    2888:	44 27       	eor	r20, r20
    288a:	89 81       	ldd	r24, Y+1	; 0x01
    288c:	48 2b       	or	r20, r24
    288e:	6d 85       	ldd	r22, Y+13	; 0x0d
    2890:	7e 85       	ldd	r23, Y+14	; 0x0e
    2892:	6c 0d       	add	r22, r12
    2894:	7d 1d       	adc	r23, r13
    2896:	88 89       	ldd	r24, Y+16	; 0x10
    2898:	9f 85       	ldd	r25, Y+15	; 0x0f
    289a:	89 9f       	mul	r24, r25
    289c:	c0 01       	movw	r24, r0
    289e:	11 24       	eor	r1, r1
    28a0:	99 23       	and	r25, r25
    28a2:	0c f4       	brge	.+2      	; 0x28a6 <_ZN4UTFT9printCharEhii+0xe6>
    28a4:	07 96       	adiw	r24, 0x07	; 7
    28a6:	95 95       	asr	r25
    28a8:	87 95       	ror	r24
    28aa:	95 95       	asr	r25
    28ac:	87 95       	ror	r24
    28ae:	95 95       	asr	r25
    28b0:	87 95       	ror	r24
    28b2:	0e 94 56 06 	call	0xcac	; 0xcac <fastbitmap_1bit>
    28b6:	6f c0       	rjmp	.+222    	; 0x2996 <_ZN4UTFT9printCharEhii+0x1d6>
    28b8:	29 89       	ldd	r18, Y+17	; 0x11
    28ba:	86 2f       	mov	r24, r22
    28bc:	90 e0       	ldi	r25, 0x00	; 0
    28be:	82 1b       	sub	r24, r18
    28c0:	91 09       	sbc	r25, r1
    28c2:	4f 85       	ldd	r20, Y+15	; 0x0f
    28c4:	54 2f       	mov	r21, r20
    28c6:	56 95       	lsr	r21
    28c8:	56 95       	lsr	r21
    28ca:	56 95       	lsr	r21
    28cc:	28 89       	ldd	r18, Y+16	; 0x10
    28ce:	30 e0       	ldi	r19, 0x00	; 0
    28d0:	52 9f       	mul	r21, r18
    28d2:	b0 01       	movw	r22, r0
    28d4:	53 9f       	mul	r21, r19
    28d6:	70 0d       	add	r23, r0
    28d8:	11 24       	eor	r1, r1
    28da:	86 9f       	mul	r24, r22
    28dc:	60 01       	movw	r12, r0
    28de:	87 9f       	mul	r24, r23
    28e0:	d0 0c       	add	r13, r0
    28e2:	96 9f       	mul	r25, r22
    28e4:	d0 0c       	add	r13, r0
    28e6:	11 24       	eor	r1, r1
    28e8:	84 e0       	ldi	r24, 0x04	; 4
    28ea:	c8 0e       	add	r12, r24
    28ec:	d1 1c       	adc	r13, r1
    28ee:	c7 01       	movw	r24, r14
    28f0:	84 0f       	add	r24, r20
    28f2:	91 1d       	adc	r25, r1
    28f4:	01 97       	sbiw	r24, 0x01	; 1
    28f6:	20 0f       	add	r18, r16
    28f8:	31 1f       	adc	r19, r17
    28fa:	49 85       	ldd	r20, Y+9	; 0x09
    28fc:	5a 85       	ldd	r21, Y+10	; 0x0a
    28fe:	6b 85       	ldd	r22, Y+11	; 0x0b
    2900:	7c 85       	ldd	r23, Y+12	; 0x0c
    2902:	5a 01       	movw	r10, r20
    2904:	ae 18       	sub	r10, r14
    2906:	bf 08       	sbc	r11, r15
    2908:	7a 01       	movw	r14, r20
    290a:	e8 1a       	sub	r14, r24
    290c:	f9 0a       	sbc	r15, r25
    290e:	60 e0       	ldi	r22, 0x00	; 0
    2910:	70 e0       	ldi	r23, 0x00	; 0
    2912:	7f ef       	ldi	r23, 0xFF	; 255
    2914:	72 0f       	add	r23, r18
    2916:	60 0f       	add	r22, r16
    2918:	71 1f       	adc	r23, r17
    291a:	84 e4       	ldi	r24, 0x44	; 68
    291c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2920:	b7 01       	movw	r22, r14
    2922:	85 e4       	ldi	r24, 0x45	; 69
    2924:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2928:	b5 01       	movw	r22, r10
    292a:	86 e4       	ldi	r24, 0x46	; 70
    292c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2930:	b8 01       	movw	r22, r16
    2932:	8e e4       	ldi	r24, 0x4E	; 78
    2934:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2938:	b5 01       	movw	r22, r10
    293a:	8f e4       	ldi	r24, 0x4F	; 79
    293c:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    2940:	68 e5       	ldi	r22, 0x58	; 88
    2942:	70 e6       	ldi	r23, 0x60	; 96
    2944:	81 e1       	ldi	r24, 0x11	; 17
    2946:	0e 94 42 07 	call	0xe84	; 0xe84 <LCD_Write_COM_DATA>
    294a:	82 e2       	ldi	r24, 0x22	; 34
    294c:	0e 94 2e 07 	call	0xe5c	; 0xe5c <LCD_Write_COM>
    2950:	85 b3       	in	r24, 0x15	; 21
    2952:	80 64       	ori	r24, 0x40	; 64
    2954:	85 bb       	out	0x15, r24	; 21
    2956:	2a 81       	ldd	r18, Y+2	; 0x02
    2958:	30 e0       	ldi	r19, 0x00	; 0
    295a:	32 2f       	mov	r19, r18
    295c:	22 27       	eor	r18, r18
    295e:	8b 81       	ldd	r24, Y+3	; 0x03
    2960:	28 2b       	or	r18, r24
    2962:	48 81       	ld	r20, Y
    2964:	50 e0       	ldi	r21, 0x00	; 0
    2966:	54 2f       	mov	r21, r20
    2968:	44 27       	eor	r20, r20
    296a:	89 81       	ldd	r24, Y+1	; 0x01
    296c:	48 2b       	or	r20, r24
    296e:	6d 85       	ldd	r22, Y+13	; 0x0d
    2970:	7e 85       	ldd	r23, Y+14	; 0x0e
    2972:	6c 0d       	add	r22, r12
    2974:	7d 1d       	adc	r23, r13
    2976:	88 89       	ldd	r24, Y+16	; 0x10
    2978:	9f 85       	ldd	r25, Y+15	; 0x0f
    297a:	89 9f       	mul	r24, r25
    297c:	c0 01       	movw	r24, r0
    297e:	11 24       	eor	r1, r1
    2980:	99 23       	and	r25, r25
    2982:	0c f4       	brge	.+2      	; 0x2986 <_ZN4UTFT9printCharEhii+0x1c6>
    2984:	07 96       	adiw	r24, 0x07	; 7
    2986:	95 95       	asr	r25
    2988:	87 95       	ror	r24
    298a:	95 95       	asr	r25
    298c:	87 95       	ror	r24
    298e:	95 95       	asr	r25
    2990:	87 95       	ror	r24
    2992:	0e 94 56 06 	call	0xcac	; 0xcac <fastbitmap_1bit>
    2996:	85 b3       	in	r24, 0x15	; 21
    2998:	82 60       	ori	r24, 0x02	; 2
    299a:	85 bb       	out	0x15, r24	; 21
    299c:	df 91       	pop	r29
    299e:	cf 91       	pop	r28
    29a0:	1f 91       	pop	r17
    29a2:	0f 91       	pop	r16
    29a4:	ff 90       	pop	r15
    29a6:	ef 90       	pop	r14
    29a8:	df 90       	pop	r13
    29aa:	cf 90       	pop	r12
    29ac:	bf 90       	pop	r11
    29ae:	af 90       	pop	r10
    29b0:	08 95       	ret

000029b2 <_ZN4UTFT10rotateCharEhiiii>:
    29b2:	2f 92       	push	r2
    29b4:	3f 92       	push	r3
    29b6:	4f 92       	push	r4
    29b8:	5f 92       	push	r5
    29ba:	6f 92       	push	r6
    29bc:	7f 92       	push	r7
    29be:	8f 92       	push	r8
    29c0:	9f 92       	push	r9
    29c2:	af 92       	push	r10
    29c4:	bf 92       	push	r11
    29c6:	cf 92       	push	r12
    29c8:	df 92       	push	r13
    29ca:	ef 92       	push	r14
    29cc:	ff 92       	push	r15
    29ce:	0f 93       	push	r16
    29d0:	1f 93       	push	r17
    29d2:	cf 93       	push	r28
    29d4:	df 93       	push	r29
    29d6:	cd b7       	in	r28, 0x3d	; 61
    29d8:	de b7       	in	r29, 0x3e	; 62
    29da:	6b 97       	sbiw	r28, 0x1b	; 27
    29dc:	0f b6       	in	r0, 0x3f	; 63
    29de:	f8 94       	cli
    29e0:	de bf       	out	0x3e, r29	; 62
    29e2:	0f be       	out	0x3f, r0	; 63
    29e4:	cd bf       	out	0x3d, r28	; 61
    29e6:	5c 01       	movw	r10, r24
    29e8:	69 83       	std	Y+1, r22	; 0x01
    29ea:	3a 01       	movw	r6, r20
    29ec:	49 01       	movw	r8, r18
    29ee:	1f 8b       	std	Y+23, r17	; 0x17
    29f0:	0e 8b       	std	Y+22, r16	; 0x16
    29f2:	b7 01       	movw	r22, r14
    29f4:	ff 0c       	add	r15, r15
    29f6:	88 0b       	sbc	r24, r24
    29f8:	99 0b       	sbc	r25, r25
    29fa:	0e 94 e8 17 	call	0x2fd0	; 0x2fd0 <__floatsisf>
    29fe:	29 e2       	ldi	r18, 0x29	; 41
    2a00:	3c e5       	ldi	r19, 0x5C	; 92
    2a02:	4f e8       	ldi	r20, 0x8F	; 143
    2a04:	5c e3       	ldi	r21, 0x3C	; 60
    2a06:	0e 94 b3 18 	call	0x3166	; 0x3166 <__mulsf3>
    2a0a:	69 8b       	std	Y+17, r22	; 0x11
    2a0c:	7a 8b       	std	Y+18, r23	; 0x12
    2a0e:	8b 8b       	std	Y+19, r24	; 0x13
    2a10:	9c 8b       	std	Y+20, r25	; 0x14
    2a12:	85 b3       	in	r24, 0x15	; 21
    2a14:	8d 7f       	andi	r24, 0xFD	; 253
    2a16:	85 bb       	out	0x15, r24	; 21
    2a18:	d5 01       	movw	r26, r10
    2a1a:	51 96       	adiw	r26, 0x11	; 17
    2a1c:	8c 91       	ld	r24, X
    2a1e:	b9 81       	ldd	r27, Y+1	; 0x01
    2a20:	2b 2f       	mov	r18, r27
    2a22:	30 e0       	ldi	r19, 0x00	; 0
    2a24:	28 1b       	sub	r18, r24
    2a26:	31 09       	sbc	r19, r1
    2a28:	f5 01       	movw	r30, r10
    2a2a:	87 85       	ldd	r24, Z+15	; 0x0f
    2a2c:	86 95       	lsr	r24
    2a2e:	86 95       	lsr	r24
    2a30:	86 95       	lsr	r24
    2a32:	90 89       	ldd	r25, Z+16	; 0x10
    2a34:	89 9f       	mul	r24, r25
    2a36:	c0 01       	movw	r24, r0
    2a38:	11 24       	eor	r1, r1
    2a3a:	28 9f       	mul	r18, r24
    2a3c:	a0 01       	movw	r20, r0
    2a3e:	29 9f       	mul	r18, r25
    2a40:	50 0d       	add	r21, r0
    2a42:	38 9f       	mul	r19, r24
    2a44:	50 0d       	add	r21, r0
    2a46:	11 24       	eor	r1, r1
    2a48:	9a 01       	movw	r18, r20
    2a4a:	2c 5f       	subi	r18, 0xFC	; 252
    2a4c:	3f 4f       	sbci	r19, 0xFF	; 255
    2a4e:	39 8f       	std	Y+25, r19	; 0x19
    2a50:	28 8f       	std	Y+24, r18	; 0x18
    2a52:	1d 8a       	std	Y+21, r1	; 0x15
    2a54:	d5 01       	movw	r26, r10
    2a56:	50 96       	adiw	r26, 0x10	; 16
    2a58:	8c 91       	ld	r24, X
    2a5a:	bd 89       	ldd	r27, Y+21	; 0x15
    2a5c:	b8 17       	cp	r27, r24
    2a5e:	08 f0       	brcs	.+2      	; 0x2a62 <_ZN4UTFT10rotateCharEhiiii+0xb0>
    2a60:	fb c0       	rjmp	.+502    	; 0x2c58 <_ZN4UTFT10rotateCharEhiiii+0x2a6>
    2a62:	41 2c       	mov	r4, r1
    2a64:	51 2c       	mov	r5, r1
    2a66:	f5 01       	movw	r30, r10
    2a68:	87 85       	ldd	r24, Z+15	; 0x0f
    2a6a:	86 95       	lsr	r24
    2a6c:	86 95       	lsr	r24
    2a6e:	86 95       	lsr	r24
    2a70:	28 2f       	mov	r18, r24
    2a72:	30 e0       	ldi	r19, 0x00	; 0
    2a74:	42 16       	cp	r4, r18
    2a76:	53 06       	cpc	r5, r19
    2a78:	0c f0       	brlt	.+2      	; 0x2a7c <_ZN4UTFT10rotateCharEhiiii+0xca>
    2a7a:	e4 c0       	rjmp	.+456    	; 0x2c44 <_ZN4UTFT10rotateCharEhiiii+0x292>
    2a7c:	05 84       	ldd	r0, Z+13	; 0x0d
    2a7e:	f6 85       	ldd	r31, Z+14	; 0x0e
    2a80:	e0 2d       	mov	r30, r0
    2a82:	88 8d       	ldd	r24, Y+24	; 0x18
    2a84:	99 8d       	ldd	r25, Y+25	; 0x19
    2a86:	84 0d       	add	r24, r4
    2a88:	95 1d       	adc	r25, r5
    2a8a:	e8 0f       	add	r30, r24
    2a8c:	f9 1f       	adc	r31, r25
    2a8e:	24 90       	lpm	r2, Z
    2a90:	31 2c       	mov	r3, r1
    2a92:	3a 8e       	std	Y+26, r3	; 0x1a
    2a94:	2b 8e       	std	Y+27, r2	; 0x1b
    2a96:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2a98:	f8 30       	cpi	r31, 0x08	; 8
    2a9a:	08 f0       	brcs	.+2      	; 0x2a9e <_ZN4UTFT10rotateCharEhiiii+0xec>
    2a9c:	cf c0       	rjmp	.+414    	; 0x2c3c <_ZN4UTFT10rotateCharEhiiii+0x28a>
    2a9e:	2f 2e       	mov	r2, r31
    2aa0:	31 2c       	mov	r3, r1
    2aa2:	b2 01       	movw	r22, r4
    2aa4:	66 0f       	add	r22, r22
    2aa6:	77 1f       	adc	r23, r23
    2aa8:	66 0f       	add	r22, r22
    2aaa:	77 1f       	adc	r23, r23
    2aac:	66 0f       	add	r22, r22
    2aae:	77 1f       	adc	r23, r23
    2ab0:	62 0d       	add	r22, r2
    2ab2:	73 1d       	adc	r23, r3
    2ab4:	d5 01       	movw	r26, r10
    2ab6:	1f 96       	adiw	r26, 0x0f	; 15
    2ab8:	2c 91       	ld	r18, X
    2aba:	ee 89       	ldd	r30, Y+22	; 0x16
    2abc:	ff 89       	ldd	r31, Y+23	; 0x17
    2abe:	2e 9f       	mul	r18, r30
    2ac0:	c0 01       	movw	r24, r0
    2ac2:	2f 9f       	mul	r18, r31
    2ac4:	90 0d       	add	r25, r0
    2ac6:	11 24       	eor	r1, r1
    2ac8:	68 0f       	add	r22, r24
    2aca:	79 1f       	adc	r23, r25
    2acc:	07 2e       	mov	r0, r23
    2ace:	00 0c       	add	r0, r0
    2ad0:	88 0b       	sbc	r24, r24
    2ad2:	99 0b       	sbc	r25, r25
    2ad4:	0e 94 e8 17 	call	0x2fd0	; 0x2fd0 <__floatsisf>
    2ad8:	69 83       	std	Y+1, r22	; 0x01
    2ada:	7a 83       	std	Y+2, r23	; 0x02
    2adc:	8b 83       	std	Y+3, r24	; 0x03
    2ade:	9c 83       	std	Y+4, r25	; 0x04
    2ae0:	69 89       	ldd	r22, Y+17	; 0x11
    2ae2:	7a 89       	ldd	r23, Y+18	; 0x12
    2ae4:	8b 89       	ldd	r24, Y+19	; 0x13
    2ae6:	9c 89       	ldd	r25, Y+20	; 0x14
    2ae8:	0e 94 ab 17 	call	0x2f56	; 0x2f56 <cos>
    2aec:	6d 83       	std	Y+5, r22	; 0x05
    2aee:	7e 83       	std	Y+6, r23	; 0x06
    2af0:	8f 83       	std	Y+7, r24	; 0x07
    2af2:	98 87       	std	Y+8, r25	; 0x08
    2af4:	9b 01       	movw	r18, r22
    2af6:	ac 01       	movw	r20, r24
    2af8:	69 81       	ldd	r22, Y+1	; 0x01
    2afa:	7a 81       	ldd	r23, Y+2	; 0x02
    2afc:	8b 81       	ldd	r24, Y+3	; 0x03
    2afe:	9c 81       	ldd	r25, Y+4	; 0x04
    2b00:	0e 94 b3 18 	call	0x3166	; 0x3166 <__mulsf3>
    2b04:	6b 01       	movw	r12, r22
    2b06:	7c 01       	movw	r14, r24
    2b08:	fd 89       	ldd	r31, Y+21	; 0x15
    2b0a:	6f 2f       	mov	r22, r31
    2b0c:	70 e0       	ldi	r23, 0x00	; 0
    2b0e:	80 e0       	ldi	r24, 0x00	; 0
    2b10:	90 e0       	ldi	r25, 0x00	; 0
    2b12:	0e 94 e8 17 	call	0x2fd0	; 0x2fd0 <__floatsisf>
    2b16:	69 87       	std	Y+9, r22	; 0x09
    2b18:	7a 87       	std	Y+10, r23	; 0x0a
    2b1a:	8b 87       	std	Y+11, r24	; 0x0b
    2b1c:	9c 87       	std	Y+12, r25	; 0x0c
    2b1e:	69 89       	ldd	r22, Y+17	; 0x11
    2b20:	7a 89       	ldd	r23, Y+18	; 0x12
    2b22:	8b 89       	ldd	r24, Y+19	; 0x13
    2b24:	9c 89       	ldd	r25, Y+20	; 0x14
    2b26:	0e 94 20 19 	call	0x3240	; 0x3240 <sin>
    2b2a:	6d 87       	std	Y+13, r22	; 0x0d
    2b2c:	7e 87       	std	Y+14, r23	; 0x0e
    2b2e:	8f 87       	std	Y+15, r24	; 0x0f
    2b30:	98 8b       	std	Y+16, r25	; 0x10
    2b32:	9b 01       	movw	r18, r22
    2b34:	ac 01       	movw	r20, r24
    2b36:	69 85       	ldd	r22, Y+9	; 0x09
    2b38:	7a 85       	ldd	r23, Y+10	; 0x0a
    2b3a:	8b 85       	ldd	r24, Y+11	; 0x0b
    2b3c:	9c 85       	ldd	r25, Y+12	; 0x0c
    2b3e:	0e 94 b3 18 	call	0x3166	; 0x3166 <__mulsf3>
    2b42:	9b 01       	movw	r18, r22
    2b44:	ac 01       	movw	r20, r24
    2b46:	c7 01       	movw	r24, r14
    2b48:	b6 01       	movw	r22, r12
    2b4a:	0e 94 3e 17 	call	0x2e7c	; 0x2e7c <__subsf3>
    2b4e:	6b 01       	movw	r12, r22
    2b50:	7c 01       	movw	r14, r24
    2b52:	b3 01       	movw	r22, r6
    2b54:	07 2c       	mov	r0, r7
    2b56:	00 0c       	add	r0, r0
    2b58:	88 0b       	sbc	r24, r24
    2b5a:	99 0b       	sbc	r25, r25
    2b5c:	0e 94 e8 17 	call	0x2fd0	; 0x2fd0 <__floatsisf>
    2b60:	a7 01       	movw	r20, r14
    2b62:	96 01       	movw	r18, r12
    2b64:	0e 94 3f 17 	call	0x2e7e	; 0x2e7e <__addsf3>
    2b68:	0e 94 b0 17 	call	0x2f60	; 0x2f60 <__fixsfsi>
    2b6c:	6b 01       	movw	r12, r22
    2b6e:	7c 01       	movw	r14, r24
    2b70:	29 85       	ldd	r18, Y+9	; 0x09
    2b72:	3a 85       	ldd	r19, Y+10	; 0x0a
    2b74:	4b 85       	ldd	r20, Y+11	; 0x0b
    2b76:	5c 85       	ldd	r21, Y+12	; 0x0c
    2b78:	6d 81       	ldd	r22, Y+5	; 0x05
    2b7a:	7e 81       	ldd	r23, Y+6	; 0x06
    2b7c:	8f 81       	ldd	r24, Y+7	; 0x07
    2b7e:	98 85       	ldd	r25, Y+8	; 0x08
    2b80:	0e 94 b3 18 	call	0x3166	; 0x3166 <__mulsf3>
    2b84:	6d 83       	std	Y+5, r22	; 0x05
    2b86:	7e 83       	std	Y+6, r23	; 0x06
    2b88:	8f 83       	std	Y+7, r24	; 0x07
    2b8a:	98 87       	std	Y+8, r25	; 0x08
    2b8c:	2d 85       	ldd	r18, Y+13	; 0x0d
    2b8e:	3e 85       	ldd	r19, Y+14	; 0x0e
    2b90:	4f 85       	ldd	r20, Y+15	; 0x0f
    2b92:	58 89       	ldd	r21, Y+16	; 0x10
    2b94:	69 81       	ldd	r22, Y+1	; 0x01
    2b96:	7a 81       	ldd	r23, Y+2	; 0x02
    2b98:	8b 81       	ldd	r24, Y+3	; 0x03
    2b9a:	9c 81       	ldd	r25, Y+4	; 0x04
    2b9c:	0e 94 b3 18 	call	0x3166	; 0x3166 <__mulsf3>
    2ba0:	9b 01       	movw	r18, r22
    2ba2:	ac 01       	movw	r20, r24
    2ba4:	6d 81       	ldd	r22, Y+5	; 0x05
    2ba6:	7e 81       	ldd	r23, Y+6	; 0x06
    2ba8:	8f 81       	ldd	r24, Y+7	; 0x07
    2baa:	98 85       	ldd	r25, Y+8	; 0x08
    2bac:	0e 94 3f 17 	call	0x2e7e	; 0x2e7e <__addsf3>
    2bb0:	69 83       	std	Y+1, r22	; 0x01
    2bb2:	7a 83       	std	Y+2, r23	; 0x02
    2bb4:	8b 83       	std	Y+3, r24	; 0x03
    2bb6:	9c 83       	std	Y+4, r25	; 0x04
    2bb8:	b4 01       	movw	r22, r8
    2bba:	09 2c       	mov	r0, r9
    2bbc:	00 0c       	add	r0, r0
    2bbe:	88 0b       	sbc	r24, r24
    2bc0:	99 0b       	sbc	r25, r25
    2bc2:	0e 94 e8 17 	call	0x2fd0	; 0x2fd0 <__floatsisf>
    2bc6:	29 81       	ldd	r18, Y+1	; 0x01
    2bc8:	3a 81       	ldd	r19, Y+2	; 0x02
    2bca:	4b 81       	ldd	r20, Y+3	; 0x03
    2bcc:	5c 81       	ldd	r21, Y+4	; 0x04
    2bce:	0e 94 3f 17 	call	0x2e7e	; 0x2e7e <__addsf3>
    2bd2:	0e 94 b0 17 	call	0x2f60	; 0x2f60 <__fixsfsi>
    2bd6:	8b 01       	movw	r16, r22
    2bd8:	0f 5f       	subi	r16, 0xFF	; 255
    2bda:	1f 4f       	sbci	r17, 0xFF	; 255
    2bdc:	96 01       	movw	r18, r12
    2bde:	2f 5f       	subi	r18, 0xFF	; 255
    2be0:	3f 4f       	sbci	r19, 0xFF	; 255
    2be2:	ab 01       	movw	r20, r22
    2be4:	b6 01       	movw	r22, r12
    2be6:	c5 01       	movw	r24, r10
    2be8:	0e 94 cf 10 	call	0x219e	; 0x219e <_ZN4UTFT5setXYEjjjj>
    2bec:	27 e0       	ldi	r18, 0x07	; 7
    2bee:	30 e0       	ldi	r19, 0x00	; 0
    2bf0:	22 19       	sub	r18, r2
    2bf2:	33 09       	sbc	r19, r3
    2bf4:	4b 8d       	ldd	r20, Y+27	; 0x1b
    2bf6:	84 2f       	mov	r24, r20
    2bf8:	90 e0       	ldi	r25, 0x00	; 0
    2bfa:	02 c0       	rjmp	.+4      	; 0x2c00 <_ZN4UTFT10rotateCharEhiiii+0x24e>
    2bfc:	95 95       	asr	r25
    2bfe:	87 95       	ror	r24
    2c00:	2a 95       	dec	r18
    2c02:	e2 f7       	brpl	.-8      	; 0x2bfc <_ZN4UTFT10rotateCharEhiiii+0x24a>
    2c04:	80 ff       	sbrs	r24, 0
    2c06:	0c c0       	rjmp	.+24     	; 0x2c20 <_ZN4UTFT10rotateCharEhiiii+0x26e>
    2c08:	d5 01       	movw	r26, r10
    2c0a:	6c 91       	ld	r22, X
    2c0c:	70 e0       	ldi	r23, 0x00	; 0
    2c0e:	76 2f       	mov	r23, r22
    2c10:	66 27       	eor	r22, r22
    2c12:	11 96       	adiw	r26, 0x01	; 1
    2c14:	8c 91       	ld	r24, X
    2c16:	68 2b       	or	r22, r24
    2c18:	c5 01       	movw	r24, r10
    2c1a:	0e 94 07 12 	call	0x240e	; 0x240e <_ZN4UTFT8setPixelEj>
    2c1e:	0a c0       	rjmp	.+20     	; 0x2c34 <_ZN4UTFT10rotateCharEhiiii+0x282>
    2c20:	f5 01       	movw	r30, r10
    2c22:	62 81       	ldd	r22, Z+2	; 0x02
    2c24:	70 e0       	ldi	r23, 0x00	; 0
    2c26:	76 2f       	mov	r23, r22
    2c28:	66 27       	eor	r22, r22
    2c2a:	83 81       	ldd	r24, Z+3	; 0x03
    2c2c:	68 2b       	or	r22, r24
    2c2e:	c5 01       	movw	r24, r10
    2c30:	0e 94 07 12 	call	0x240e	; 0x240e <_ZN4UTFT8setPixelEj>
    2c34:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2c36:	ff 5f       	subi	r31, 0xFF	; 255
    2c38:	fa 8f       	std	Y+26, r31	; 0x1a
    2c3a:	2d cf       	rjmp	.-422    	; 0x2a96 <_ZN4UTFT10rotateCharEhiiii+0xe4>
    2c3c:	2f ef       	ldi	r18, 0xFF	; 255
    2c3e:	42 1a       	sub	r4, r18
    2c40:	52 0a       	sbc	r5, r18
    2c42:	11 cf       	rjmp	.-478    	; 0x2a66 <_ZN4UTFT10rotateCharEhiiii+0xb4>
    2c44:	48 8d       	ldd	r20, Y+24	; 0x18
    2c46:	59 8d       	ldd	r21, Y+25	; 0x19
    2c48:	48 0f       	add	r20, r24
    2c4a:	51 1d       	adc	r21, r1
    2c4c:	59 8f       	std	Y+25, r21	; 0x19
    2c4e:	48 8f       	std	Y+24, r20	; 0x18
    2c50:	5d 89       	ldd	r21, Y+21	; 0x15
    2c52:	5f 5f       	subi	r21, 0xFF	; 255
    2c54:	5d 8b       	std	Y+21, r21	; 0x15
    2c56:	fe ce       	rjmp	.-516    	; 0x2a54 <_ZN4UTFT10rotateCharEhiiii+0xa2>
    2c58:	85 b3       	in	r24, 0x15	; 21
    2c5a:	82 60       	ori	r24, 0x02	; 2
    2c5c:	85 bb       	out	0x15, r24	; 21
    2c5e:	6b 96       	adiw	r28, 0x1b	; 27
    2c60:	0f b6       	in	r0, 0x3f	; 63
    2c62:	f8 94       	cli
    2c64:	de bf       	out	0x3e, r29	; 62
    2c66:	0f be       	out	0x3f, r0	; 63
    2c68:	cd bf       	out	0x3d, r28	; 61
    2c6a:	df 91       	pop	r29
    2c6c:	cf 91       	pop	r28
    2c6e:	1f 91       	pop	r17
    2c70:	0f 91       	pop	r16
    2c72:	ff 90       	pop	r15
    2c74:	ef 90       	pop	r14
    2c76:	df 90       	pop	r13
    2c78:	cf 90       	pop	r12
    2c7a:	bf 90       	pop	r11
    2c7c:	af 90       	pop	r10
    2c7e:	9f 90       	pop	r9
    2c80:	8f 90       	pop	r8
    2c82:	7f 90       	pop	r7
    2c84:	6f 90       	pop	r6
    2c86:	5f 90       	pop	r5
    2c88:	4f 90       	pop	r4
    2c8a:	3f 90       	pop	r3
    2c8c:	2f 90       	pop	r2
    2c8e:	08 95       	ret

00002c90 <_ZN4UTFT5printEPKciii>:
    2c90:	2f 92       	push	r2
    2c92:	3f 92       	push	r3
    2c94:	4f 92       	push	r4
    2c96:	5f 92       	push	r5
    2c98:	6f 92       	push	r6
    2c9a:	7f 92       	push	r7
    2c9c:	8f 92       	push	r8
    2c9e:	9f 92       	push	r9
    2ca0:	af 92       	push	r10
    2ca2:	bf 92       	push	r11
    2ca4:	cf 92       	push	r12
    2ca6:	df 92       	push	r13
    2ca8:	ef 92       	push	r14
    2caa:	ff 92       	push	r15
    2cac:	0f 93       	push	r16
    2cae:	1f 93       	push	r17
    2cb0:	cf 93       	push	r28
    2cb2:	df 93       	push	r29
    2cb4:	ec 01       	movw	r28, r24
    2cb6:	fb 01       	movw	r30, r22
    2cb8:	5a 01       	movw	r10, r20
    2cba:	29 01       	movw	r4, r18
    2cbc:	68 01       	movw	r12, r16
    2cbe:	db 01       	movw	r26, r22
    2cc0:	0d 90       	ld	r0, X+
    2cc2:	00 20       	and	r0, r0
    2cc4:	e9 f7       	brne	.-6      	; 0x2cc0 <_ZN4UTFT5printEPKciii+0x30>
    2cc6:	11 97       	sbiw	r26, 0x01	; 1
    2cc8:	a6 1b       	sub	r26, r22
    2cca:	b7 0b       	sbc	r27, r23
    2ccc:	4d 01       	movw	r8, r26
    2cce:	8c 81       	ldd	r24, Y+4	; 0x04
    2cd0:	81 11       	cpse	r24, r1
    2cd2:	3e c0       	rjmp	.+124    	; 0x2d50 <_ZN4UTFT5printEPKciii+0xc0>
    2cd4:	4f 30       	cpi	r20, 0x0F	; 15
    2cd6:	57 42       	sbci	r21, 0x27	; 39
    2cd8:	81 f4       	brne	.+32     	; 0x2cfa <_ZN4UTFT5printEPKciii+0x6a>
    2cda:	4d 81       	ldd	r20, Y+5	; 0x05
    2cdc:	5e 81       	ldd	r21, Y+6	; 0x06
    2cde:	6f 81       	ldd	r22, Y+7	; 0x07
    2ce0:	78 85       	ldd	r23, Y+8	; 0x08
    2ce2:	2f 85       	ldd	r18, Y+15	; 0x0f
    2ce4:	2a 9f       	mul	r18, r26
    2ce6:	c0 01       	movw	r24, r0
    2ce8:	2b 9f       	mul	r18, r27
    2cea:	90 0d       	add	r25, r0
    2cec:	11 24       	eor	r1, r1
    2cee:	48 1b       	sub	r20, r24
    2cf0:	59 0b       	sbc	r21, r25
    2cf2:	5a 01       	movw	r10, r20
    2cf4:	1f ef       	ldi	r17, 0xFF	; 255
    2cf6:	a1 1a       	sub	r10, r17
    2cf8:	b1 0a       	sbc	r11, r17
    2cfa:	2e e0       	ldi	r18, 0x0E	; 14
    2cfc:	a2 16       	cp	r10, r18
    2cfe:	27 e2       	ldi	r18, 0x27	; 39
    2d00:	b2 06       	cpc	r11, r18
    2d02:	09 f0       	breq	.+2      	; 0x2d06 <_ZN4UTFT5printEPKciii+0x76>
    2d04:	61 c0       	rjmp	.+194    	; 0x2dc8 <_ZN4UTFT5printEPKciii+0x138>
    2d06:	4d 81       	ldd	r20, Y+5	; 0x05
    2d08:	5e 81       	ldd	r21, Y+6	; 0x06
    2d0a:	6f 81       	ldd	r22, Y+7	; 0x07
    2d0c:	78 85       	ldd	r23, Y+8	; 0x08
    2d0e:	4f 5f       	subi	r20, 0xFF	; 255
    2d10:	5f 4f       	sbci	r21, 0xFF	; 255
    2d12:	6f 4f       	sbci	r22, 0xFF	; 255
    2d14:	7f 4f       	sbci	r23, 0xFF	; 255
    2d16:	2f 85       	ldd	r18, Y+15	; 0x0f
    2d18:	2a 9f       	mul	r18, r26
    2d1a:	c0 01       	movw	r24, r0
    2d1c:	2b 9f       	mul	r18, r27
    2d1e:	90 0d       	add	r25, r0
    2d20:	11 24       	eor	r1, r1
    2d22:	09 2e       	mov	r0, r25
    2d24:	00 0c       	add	r0, r0
    2d26:	aa 0b       	sbc	r26, r26
    2d28:	bb 0b       	sbc	r27, r27
    2d2a:	8a 01       	movw	r16, r20
    2d2c:	9b 01       	movw	r18, r22
    2d2e:	08 1b       	sub	r16, r24
    2d30:	19 0b       	sbc	r17, r25
    2d32:	2a 0b       	sbc	r18, r26
    2d34:	3b 0b       	sbc	r19, r27
    2d36:	b9 01       	movw	r22, r18
    2d38:	a8 01       	movw	r20, r16
    2d3a:	22 f4       	brpl	.+8      	; 0x2d44 <_ZN4UTFT5printEPKciii+0xb4>
    2d3c:	4f 5f       	subi	r20, 0xFF	; 255
    2d3e:	5f 4f       	sbci	r21, 0xFF	; 255
    2d40:	6f 4f       	sbci	r22, 0xFF	; 255
    2d42:	7f 4f       	sbci	r23, 0xFF	; 255
    2d44:	75 95       	asr	r23
    2d46:	67 95       	ror	r22
    2d48:	57 95       	ror	r21
    2d4a:	47 95       	ror	r20
    2d4c:	5a 01       	movw	r10, r20
    2d4e:	3c c0       	rjmp	.+120    	; 0x2dc8 <_ZN4UTFT5printEPKciii+0x138>
    2d50:	4f 30       	cpi	r20, 0x0F	; 15
    2d52:	57 42       	sbci	r21, 0x27	; 39
    2d54:	81 f4       	brne	.+32     	; 0x2d76 <_ZN4UTFT5printEPKciii+0xe6>
    2d56:	49 85       	ldd	r20, Y+9	; 0x09
    2d58:	5a 85       	ldd	r21, Y+10	; 0x0a
    2d5a:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d5c:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d5e:	2f 85       	ldd	r18, Y+15	; 0x0f
    2d60:	2a 9f       	mul	r18, r26
    2d62:	c0 01       	movw	r24, r0
    2d64:	2b 9f       	mul	r18, r27
    2d66:	90 0d       	add	r25, r0
    2d68:	11 24       	eor	r1, r1
    2d6a:	48 1b       	sub	r20, r24
    2d6c:	59 0b       	sbc	r21, r25
    2d6e:	5a 01       	movw	r10, r20
    2d70:	2f ef       	ldi	r18, 0xFF	; 255
    2d72:	a2 1a       	sub	r10, r18
    2d74:	b2 0a       	sbc	r11, r18
    2d76:	3e e0       	ldi	r19, 0x0E	; 14
    2d78:	a3 16       	cp	r10, r19
    2d7a:	37 e2       	ldi	r19, 0x27	; 39
    2d7c:	b3 06       	cpc	r11, r19
    2d7e:	21 f5       	brne	.+72     	; 0x2dc8 <_ZN4UTFT5printEPKciii+0x138>
    2d80:	49 85       	ldd	r20, Y+9	; 0x09
    2d82:	5a 85       	ldd	r21, Y+10	; 0x0a
    2d84:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d86:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d88:	4f 5f       	subi	r20, 0xFF	; 255
    2d8a:	5f 4f       	sbci	r21, 0xFF	; 255
    2d8c:	6f 4f       	sbci	r22, 0xFF	; 255
    2d8e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d90:	2f 85       	ldd	r18, Y+15	; 0x0f
    2d92:	2a 9f       	mul	r18, r26
    2d94:	c0 01       	movw	r24, r0
    2d96:	2b 9f       	mul	r18, r27
    2d98:	90 0d       	add	r25, r0
    2d9a:	11 24       	eor	r1, r1
    2d9c:	09 2e       	mov	r0, r25
    2d9e:	00 0c       	add	r0, r0
    2da0:	aa 0b       	sbc	r26, r26
    2da2:	bb 0b       	sbc	r27, r27
    2da4:	8a 01       	movw	r16, r20
    2da6:	9b 01       	movw	r18, r22
    2da8:	08 1b       	sub	r16, r24
    2daa:	19 0b       	sbc	r17, r25
    2dac:	2a 0b       	sbc	r18, r26
    2dae:	3b 0b       	sbc	r19, r27
    2db0:	b9 01       	movw	r22, r18
    2db2:	a8 01       	movw	r20, r16
    2db4:	22 f4       	brpl	.+8      	; 0x2dbe <_ZN4UTFT5printEPKciii+0x12e>
    2db6:	4f 5f       	subi	r20, 0xFF	; 255
    2db8:	5f 4f       	sbci	r21, 0xFF	; 255
    2dba:	6f 4f       	sbci	r22, 0xFF	; 255
    2dbc:	7f 4f       	sbci	r23, 0xFF	; 255
    2dbe:	75 95       	asr	r23
    2dc0:	67 95       	ror	r22
    2dc2:	57 95       	ror	r21
    2dc4:	47 95       	ror	r20
    2dc6:	5a 01       	movw	r10, r20
    2dc8:	61 2c       	mov	r6, r1
    2dca:	71 2c       	mov	r7, r1
    2dcc:	68 14       	cp	r6, r8
    2dce:	79 04       	cpc	r7, r9
    2dd0:	3c f5       	brge	.+78     	; 0x2e20 <_ZN4UTFT5printEPKciii+0x190>
    2dd2:	c1 14       	cp	r12, r1
    2dd4:	d1 04       	cpc	r13, r1
    2dd6:	99 f4       	brne	.+38     	; 0x2dfe <_ZN4UTFT5printEPKciii+0x16e>
    2dd8:	8f 85       	ldd	r24, Y+15	; 0x0f
    2dda:	86 9d       	mul	r24, r6
    2ddc:	a0 01       	movw	r20, r0
    2dde:	87 9d       	mul	r24, r7
    2de0:	50 0d       	add	r21, r0
    2de2:	11 24       	eor	r1, r1
    2de4:	4a 0d       	add	r20, r10
    2de6:	5b 1d       	adc	r21, r11
    2de8:	1f 01       	movw	r2, r30
    2dea:	1f ef       	ldi	r17, 0xFF	; 255
    2dec:	21 1a       	sub	r2, r17
    2dee:	31 0a       	sbc	r3, r17
    2df0:	60 81       	ld	r22, Z
    2df2:	92 01       	movw	r18, r4
    2df4:	ce 01       	movw	r24, r28
    2df6:	0e 94 e0 13 	call	0x27c0	; 0x27c0 <_ZN4UTFT9printCharEhii>
    2dfa:	f1 01       	movw	r30, r2
    2dfc:	0d c0       	rjmp	.+26     	; 0x2e18 <_ZN4UTFT5printEPKciii+0x188>
    2dfe:	1f 01       	movw	r2, r30
    2e00:	2f ef       	ldi	r18, 0xFF	; 255
    2e02:	22 1a       	sub	r2, r18
    2e04:	32 0a       	sbc	r3, r18
    2e06:	60 81       	ld	r22, Z
    2e08:	76 01       	movw	r14, r12
    2e0a:	83 01       	movw	r16, r6
    2e0c:	92 01       	movw	r18, r4
    2e0e:	a5 01       	movw	r20, r10
    2e10:	ce 01       	movw	r24, r28
    2e12:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <_ZN4UTFT10rotateCharEhiiii>
    2e16:	f1 01       	movw	r30, r2
    2e18:	3f ef       	ldi	r19, 0xFF	; 255
    2e1a:	63 1a       	sub	r6, r19
    2e1c:	73 0a       	sbc	r7, r19
    2e1e:	d6 cf       	rjmp	.-84     	; 0x2dcc <_ZN4UTFT5printEPKciii+0x13c>
    2e20:	df 91       	pop	r29
    2e22:	cf 91       	pop	r28
    2e24:	1f 91       	pop	r17
    2e26:	0f 91       	pop	r16
    2e28:	ff 90       	pop	r15
    2e2a:	ef 90       	pop	r14
    2e2c:	df 90       	pop	r13
    2e2e:	cf 90       	pop	r12
    2e30:	bf 90       	pop	r11
    2e32:	af 90       	pop	r10
    2e34:	9f 90       	pop	r9
    2e36:	8f 90       	pop	r8
    2e38:	7f 90       	pop	r7
    2e3a:	6f 90       	pop	r6
    2e3c:	5f 90       	pop	r5
    2e3e:	4f 90       	pop	r4
    2e40:	3f 90       	pop	r3
    2e42:	2f 90       	pop	r2
    2e44:	08 95       	ret

00002e46 <_ZN4UTFT7setFontEPKh>:

void UTFT::setFont(const uint8_t* font)
{
    2e46:	dc 01       	movw	r26, r24
	cfont.font=font;
    2e48:	1e 96       	adiw	r26, 0x0e	; 14
    2e4a:	7c 93       	st	X, r23
    2e4c:	6e 93       	st	-X, r22
    2e4e:	1d 97       	sbiw	r26, 0x0d	; 13
	cfont.x_size=fontbyte(0);
    2e50:	fb 01       	movw	r30, r22
    2e52:	84 91       	lpm	r24, Z
    2e54:	1f 96       	adiw	r26, 0x0f	; 15
    2e56:	8c 93       	st	X, r24
    2e58:	1f 97       	sbiw	r26, 0x0f	; 15
	cfont.y_size=fontbyte(1);
    2e5a:	31 96       	adiw	r30, 0x01	; 1
    2e5c:	e4 91       	lpm	r30, Z
    2e5e:	50 96       	adiw	r26, 0x10	; 16
    2e60:	ec 93       	st	X, r30
    2e62:	50 97       	sbiw	r26, 0x10	; 16
	cfont.offset=fontbyte(2);
    2e64:	fb 01       	movw	r30, r22
    2e66:	32 96       	adiw	r30, 0x02	; 2
    2e68:	e4 91       	lpm	r30, Z
    2e6a:	51 96       	adiw	r26, 0x11	; 17
    2e6c:	ec 93       	st	X, r30
    2e6e:	51 97       	sbiw	r26, 0x11	; 17
	cfont.numchars=fontbyte(3);
    2e70:	fb 01       	movw	r30, r22
    2e72:	33 96       	adiw	r30, 0x03	; 3
    2e74:	64 91       	lpm	r22, Z
    2e76:	52 96       	adiw	r26, 0x12	; 18
    2e78:	6c 93       	st	X, r22
    2e7a:	08 95       	ret

00002e7c <__subsf3>:
    2e7c:	50 58       	subi	r21, 0x80	; 128

00002e7e <__addsf3>:
    2e7e:	bb 27       	eor	r27, r27
    2e80:	aa 27       	eor	r26, r26
    2e82:	0e 94 56 17 	call	0x2eac	; 0x2eac <__addsf3x>
    2e86:	0c 94 65 18 	jmp	0x30ca	; 0x30ca <__fp_round>
    2e8a:	0e 94 2c 18 	call	0x3058	; 0x3058 <__fp_pscA>
    2e8e:	38 f0       	brcs	.+14     	; 0x2e9e <__addsf3+0x20>
    2e90:	0e 94 33 18 	call	0x3066	; 0x3066 <__fp_pscB>
    2e94:	20 f0       	brcs	.+8      	; 0x2e9e <__addsf3+0x20>
    2e96:	39 f4       	brne	.+14     	; 0x2ea6 <__addsf3+0x28>
    2e98:	9f 3f       	cpi	r25, 0xFF	; 255
    2e9a:	19 f4       	brne	.+6      	; 0x2ea2 <__addsf3+0x24>
    2e9c:	26 f4       	brtc	.+8      	; 0x2ea6 <__addsf3+0x28>
    2e9e:	0c 94 29 18 	jmp	0x3052	; 0x3052 <__fp_nan>
    2ea2:	0e f4       	brtc	.+2      	; 0x2ea6 <__addsf3+0x28>
    2ea4:	e0 95       	com	r30
    2ea6:	e7 fb       	bst	r30, 7
    2ea8:	0c 94 23 18 	jmp	0x3046	; 0x3046 <__fp_inf>

00002eac <__addsf3x>:
    2eac:	e9 2f       	mov	r30, r25
    2eae:	0e 94 8a 18 	call	0x3114	; 0x3114 <__fp_split3>
    2eb2:	58 f3       	brcs	.-42     	; 0x2e8a <__addsf3+0xc>
    2eb4:	ba 17       	cp	r27, r26
    2eb6:	62 07       	cpc	r22, r18
    2eb8:	73 07       	cpc	r23, r19
    2eba:	84 07       	cpc	r24, r20
    2ebc:	95 07       	cpc	r25, r21
    2ebe:	20 f0       	brcs	.+8      	; 0x2ec8 <__addsf3x+0x1c>
    2ec0:	79 f4       	brne	.+30     	; 0x2ee0 <__addsf3x+0x34>
    2ec2:	a6 f5       	brtc	.+104    	; 0x2f2c <__addsf3x+0x80>
    2ec4:	0c 94 ac 18 	jmp	0x3158	; 0x3158 <__fp_zero>
    2ec8:	0e f4       	brtc	.+2      	; 0x2ecc <__addsf3x+0x20>
    2eca:	e0 95       	com	r30
    2ecc:	0b 2e       	mov	r0, r27
    2ece:	ba 2f       	mov	r27, r26
    2ed0:	a0 2d       	mov	r26, r0
    2ed2:	0b 01       	movw	r0, r22
    2ed4:	b9 01       	movw	r22, r18
    2ed6:	90 01       	movw	r18, r0
    2ed8:	0c 01       	movw	r0, r24
    2eda:	ca 01       	movw	r24, r20
    2edc:	a0 01       	movw	r20, r0
    2ede:	11 24       	eor	r1, r1
    2ee0:	ff 27       	eor	r31, r31
    2ee2:	59 1b       	sub	r21, r25
    2ee4:	99 f0       	breq	.+38     	; 0x2f0c <__addsf3x+0x60>
    2ee6:	59 3f       	cpi	r21, 0xF9	; 249
    2ee8:	50 f4       	brcc	.+20     	; 0x2efe <__addsf3x+0x52>
    2eea:	50 3e       	cpi	r21, 0xE0	; 224
    2eec:	68 f1       	brcs	.+90     	; 0x2f48 <__addsf3x+0x9c>
    2eee:	1a 16       	cp	r1, r26
    2ef0:	f0 40       	sbci	r31, 0x00	; 0
    2ef2:	a2 2f       	mov	r26, r18
    2ef4:	23 2f       	mov	r18, r19
    2ef6:	34 2f       	mov	r19, r20
    2ef8:	44 27       	eor	r20, r20
    2efa:	58 5f       	subi	r21, 0xF8	; 248
    2efc:	f3 cf       	rjmp	.-26     	; 0x2ee4 <__addsf3x+0x38>
    2efe:	46 95       	lsr	r20
    2f00:	37 95       	ror	r19
    2f02:	27 95       	ror	r18
    2f04:	a7 95       	ror	r26
    2f06:	f0 40       	sbci	r31, 0x00	; 0
    2f08:	53 95       	inc	r21
    2f0a:	c9 f7       	brne	.-14     	; 0x2efe <__addsf3x+0x52>
    2f0c:	7e f4       	brtc	.+30     	; 0x2f2c <__addsf3x+0x80>
    2f0e:	1f 16       	cp	r1, r31
    2f10:	ba 0b       	sbc	r27, r26
    2f12:	62 0b       	sbc	r22, r18
    2f14:	73 0b       	sbc	r23, r19
    2f16:	84 0b       	sbc	r24, r20
    2f18:	ba f0       	brmi	.+46     	; 0x2f48 <__addsf3x+0x9c>
    2f1a:	91 50       	subi	r25, 0x01	; 1
    2f1c:	a1 f0       	breq	.+40     	; 0x2f46 <__addsf3x+0x9a>
    2f1e:	ff 0f       	add	r31, r31
    2f20:	bb 1f       	adc	r27, r27
    2f22:	66 1f       	adc	r22, r22
    2f24:	77 1f       	adc	r23, r23
    2f26:	88 1f       	adc	r24, r24
    2f28:	c2 f7       	brpl	.-16     	; 0x2f1a <__addsf3x+0x6e>
    2f2a:	0e c0       	rjmp	.+28     	; 0x2f48 <__addsf3x+0x9c>
    2f2c:	ba 0f       	add	r27, r26
    2f2e:	62 1f       	adc	r22, r18
    2f30:	73 1f       	adc	r23, r19
    2f32:	84 1f       	adc	r24, r20
    2f34:	48 f4       	brcc	.+18     	; 0x2f48 <__addsf3x+0x9c>
    2f36:	87 95       	ror	r24
    2f38:	77 95       	ror	r23
    2f3a:	67 95       	ror	r22
    2f3c:	b7 95       	ror	r27
    2f3e:	f7 95       	ror	r31
    2f40:	9e 3f       	cpi	r25, 0xFE	; 254
    2f42:	08 f0       	brcs	.+2      	; 0x2f46 <__addsf3x+0x9a>
    2f44:	b0 cf       	rjmp	.-160    	; 0x2ea6 <__addsf3+0x28>
    2f46:	93 95       	inc	r25
    2f48:	88 0f       	add	r24, r24
    2f4a:	08 f0       	brcs	.+2      	; 0x2f4e <__addsf3x+0xa2>
    2f4c:	99 27       	eor	r25, r25
    2f4e:	ee 0f       	add	r30, r30
    2f50:	97 95       	ror	r25
    2f52:	87 95       	ror	r24
    2f54:	08 95       	ret

00002f56 <cos>:
    2f56:	0e 94 3c 18 	call	0x3078	; 0x3078 <__fp_rempio2>
    2f5a:	e3 95       	inc	r30
    2f5c:	0c 94 76 18 	jmp	0x30ec	; 0x30ec <__fp_sinus>

00002f60 <__fixsfsi>:
    2f60:	0e 94 b7 17 	call	0x2f6e	; 0x2f6e <__fixunssfsi>
    2f64:	68 94       	set
    2f66:	b1 11       	cpse	r27, r1
    2f68:	0c 94 ad 18 	jmp	0x315a	; 0x315a <__fp_szero>
    2f6c:	08 95       	ret

00002f6e <__fixunssfsi>:
    2f6e:	0e 94 92 18 	call	0x3124	; 0x3124 <__fp_splitA>
    2f72:	88 f0       	brcs	.+34     	; 0x2f96 <__fixunssfsi+0x28>
    2f74:	9f 57       	subi	r25, 0x7F	; 127
    2f76:	98 f0       	brcs	.+38     	; 0x2f9e <__fixunssfsi+0x30>
    2f78:	b9 2f       	mov	r27, r25
    2f7a:	99 27       	eor	r25, r25
    2f7c:	b7 51       	subi	r27, 0x17	; 23
    2f7e:	b0 f0       	brcs	.+44     	; 0x2fac <__fixunssfsi+0x3e>
    2f80:	e1 f0       	breq	.+56     	; 0x2fba <__fixunssfsi+0x4c>
    2f82:	66 0f       	add	r22, r22
    2f84:	77 1f       	adc	r23, r23
    2f86:	88 1f       	adc	r24, r24
    2f88:	99 1f       	adc	r25, r25
    2f8a:	1a f0       	brmi	.+6      	; 0x2f92 <__fixunssfsi+0x24>
    2f8c:	ba 95       	dec	r27
    2f8e:	c9 f7       	brne	.-14     	; 0x2f82 <__fixunssfsi+0x14>
    2f90:	14 c0       	rjmp	.+40     	; 0x2fba <__fixunssfsi+0x4c>
    2f92:	b1 30       	cpi	r27, 0x01	; 1
    2f94:	91 f0       	breq	.+36     	; 0x2fba <__fixunssfsi+0x4c>
    2f96:	0e 94 ac 18 	call	0x3158	; 0x3158 <__fp_zero>
    2f9a:	b1 e0       	ldi	r27, 0x01	; 1
    2f9c:	08 95       	ret
    2f9e:	0c 94 ac 18 	jmp	0x3158	; 0x3158 <__fp_zero>
    2fa2:	67 2f       	mov	r22, r23
    2fa4:	78 2f       	mov	r23, r24
    2fa6:	88 27       	eor	r24, r24
    2fa8:	b8 5f       	subi	r27, 0xF8	; 248
    2faa:	39 f0       	breq	.+14     	; 0x2fba <__fixunssfsi+0x4c>
    2fac:	b9 3f       	cpi	r27, 0xF9	; 249
    2fae:	cc f3       	brlt	.-14     	; 0x2fa2 <__fixunssfsi+0x34>
    2fb0:	86 95       	lsr	r24
    2fb2:	77 95       	ror	r23
    2fb4:	67 95       	ror	r22
    2fb6:	b3 95       	inc	r27
    2fb8:	d9 f7       	brne	.-10     	; 0x2fb0 <__fixunssfsi+0x42>
    2fba:	3e f4       	brtc	.+14     	; 0x2fca <__fixunssfsi+0x5c>
    2fbc:	90 95       	com	r25
    2fbe:	80 95       	com	r24
    2fc0:	70 95       	com	r23
    2fc2:	61 95       	neg	r22
    2fc4:	7f 4f       	sbci	r23, 0xFF	; 255
    2fc6:	8f 4f       	sbci	r24, 0xFF	; 255
    2fc8:	9f 4f       	sbci	r25, 0xFF	; 255
    2fca:	08 95       	ret

00002fcc <__floatunsisf>:
    2fcc:	e8 94       	clt
    2fce:	09 c0       	rjmp	.+18     	; 0x2fe2 <__floatsisf+0x12>

00002fd0 <__floatsisf>:
    2fd0:	97 fb       	bst	r25, 7
    2fd2:	3e f4       	brtc	.+14     	; 0x2fe2 <__floatsisf+0x12>
    2fd4:	90 95       	com	r25
    2fd6:	80 95       	com	r24
    2fd8:	70 95       	com	r23
    2fda:	61 95       	neg	r22
    2fdc:	7f 4f       	sbci	r23, 0xFF	; 255
    2fde:	8f 4f       	sbci	r24, 0xFF	; 255
    2fe0:	9f 4f       	sbci	r25, 0xFF	; 255
    2fe2:	99 23       	and	r25, r25
    2fe4:	a9 f0       	breq	.+42     	; 0x3010 <__floatsisf+0x40>
    2fe6:	f9 2f       	mov	r31, r25
    2fe8:	96 e9       	ldi	r25, 0x96	; 150
    2fea:	bb 27       	eor	r27, r27
    2fec:	93 95       	inc	r25
    2fee:	f6 95       	lsr	r31
    2ff0:	87 95       	ror	r24
    2ff2:	77 95       	ror	r23
    2ff4:	67 95       	ror	r22
    2ff6:	b7 95       	ror	r27
    2ff8:	f1 11       	cpse	r31, r1
    2ffa:	f8 cf       	rjmp	.-16     	; 0x2fec <__floatsisf+0x1c>
    2ffc:	fa f4       	brpl	.+62     	; 0x303c <__floatsisf+0x6c>
    2ffe:	bb 0f       	add	r27, r27
    3000:	11 f4       	brne	.+4      	; 0x3006 <__floatsisf+0x36>
    3002:	60 ff       	sbrs	r22, 0
    3004:	1b c0       	rjmp	.+54     	; 0x303c <__floatsisf+0x6c>
    3006:	6f 5f       	subi	r22, 0xFF	; 255
    3008:	7f 4f       	sbci	r23, 0xFF	; 255
    300a:	8f 4f       	sbci	r24, 0xFF	; 255
    300c:	9f 4f       	sbci	r25, 0xFF	; 255
    300e:	16 c0       	rjmp	.+44     	; 0x303c <__floatsisf+0x6c>
    3010:	88 23       	and	r24, r24
    3012:	11 f0       	breq	.+4      	; 0x3018 <__floatsisf+0x48>
    3014:	96 e9       	ldi	r25, 0x96	; 150
    3016:	11 c0       	rjmp	.+34     	; 0x303a <__floatsisf+0x6a>
    3018:	77 23       	and	r23, r23
    301a:	21 f0       	breq	.+8      	; 0x3024 <__floatsisf+0x54>
    301c:	9e e8       	ldi	r25, 0x8E	; 142
    301e:	87 2f       	mov	r24, r23
    3020:	76 2f       	mov	r23, r22
    3022:	05 c0       	rjmp	.+10     	; 0x302e <__floatsisf+0x5e>
    3024:	66 23       	and	r22, r22
    3026:	71 f0       	breq	.+28     	; 0x3044 <__floatsisf+0x74>
    3028:	96 e8       	ldi	r25, 0x86	; 134
    302a:	86 2f       	mov	r24, r22
    302c:	70 e0       	ldi	r23, 0x00	; 0
    302e:	60 e0       	ldi	r22, 0x00	; 0
    3030:	2a f0       	brmi	.+10     	; 0x303c <__floatsisf+0x6c>
    3032:	9a 95       	dec	r25
    3034:	66 0f       	add	r22, r22
    3036:	77 1f       	adc	r23, r23
    3038:	88 1f       	adc	r24, r24
    303a:	da f7       	brpl	.-10     	; 0x3032 <__floatsisf+0x62>
    303c:	88 0f       	add	r24, r24
    303e:	96 95       	lsr	r25
    3040:	87 95       	ror	r24
    3042:	97 f9       	bld	r25, 7
    3044:	08 95       	ret

00003046 <__fp_inf>:
    3046:	97 f9       	bld	r25, 7
    3048:	9f 67       	ori	r25, 0x7F	; 127
    304a:	80 e8       	ldi	r24, 0x80	; 128
    304c:	70 e0       	ldi	r23, 0x00	; 0
    304e:	60 e0       	ldi	r22, 0x00	; 0
    3050:	08 95       	ret

00003052 <__fp_nan>:
    3052:	9f ef       	ldi	r25, 0xFF	; 255
    3054:	80 ec       	ldi	r24, 0xC0	; 192
    3056:	08 95       	ret

00003058 <__fp_pscA>:
    3058:	00 24       	eor	r0, r0
    305a:	0a 94       	dec	r0
    305c:	16 16       	cp	r1, r22
    305e:	17 06       	cpc	r1, r23
    3060:	18 06       	cpc	r1, r24
    3062:	09 06       	cpc	r0, r25
    3064:	08 95       	ret

00003066 <__fp_pscB>:
    3066:	00 24       	eor	r0, r0
    3068:	0a 94       	dec	r0
    306a:	12 16       	cp	r1, r18
    306c:	13 06       	cpc	r1, r19
    306e:	14 06       	cpc	r1, r20
    3070:	05 06       	cpc	r0, r21
    3072:	08 95       	ret
    3074:	0c 94 29 18 	jmp	0x3052	; 0x3052 <__fp_nan>

00003078 <__fp_rempio2>:
    3078:	0e 94 92 18 	call	0x3124	; 0x3124 <__fp_splitA>
    307c:	d8 f3       	brcs	.-10     	; 0x3074 <__fp_pscB+0xe>
    307e:	e8 94       	clt
    3080:	e0 e0       	ldi	r30, 0x00	; 0
    3082:	bb 27       	eor	r27, r27
    3084:	9f 57       	subi	r25, 0x7F	; 127
    3086:	f0 f0       	brcs	.+60     	; 0x30c4 <__fp_rempio2+0x4c>
    3088:	2a ed       	ldi	r18, 0xDA	; 218
    308a:	3f e0       	ldi	r19, 0x0F	; 15
    308c:	49 ec       	ldi	r20, 0xC9	; 201
    308e:	06 c0       	rjmp	.+12     	; 0x309c <__fp_rempio2+0x24>
    3090:	ee 0f       	add	r30, r30
    3092:	bb 0f       	add	r27, r27
    3094:	66 1f       	adc	r22, r22
    3096:	77 1f       	adc	r23, r23
    3098:	88 1f       	adc	r24, r24
    309a:	28 f0       	brcs	.+10     	; 0x30a6 <__fp_rempio2+0x2e>
    309c:	b2 3a       	cpi	r27, 0xA2	; 162
    309e:	62 07       	cpc	r22, r18
    30a0:	73 07       	cpc	r23, r19
    30a2:	84 07       	cpc	r24, r20
    30a4:	28 f0       	brcs	.+10     	; 0x30b0 <__fp_rempio2+0x38>
    30a6:	b2 5a       	subi	r27, 0xA2	; 162
    30a8:	62 0b       	sbc	r22, r18
    30aa:	73 0b       	sbc	r23, r19
    30ac:	84 0b       	sbc	r24, r20
    30ae:	e3 95       	inc	r30
    30b0:	9a 95       	dec	r25
    30b2:	72 f7       	brpl	.-36     	; 0x3090 <__fp_rempio2+0x18>
    30b4:	80 38       	cpi	r24, 0x80	; 128
    30b6:	30 f4       	brcc	.+12     	; 0x30c4 <__fp_rempio2+0x4c>
    30b8:	9a 95       	dec	r25
    30ba:	bb 0f       	add	r27, r27
    30bc:	66 1f       	adc	r22, r22
    30be:	77 1f       	adc	r23, r23
    30c0:	88 1f       	adc	r24, r24
    30c2:	d2 f7       	brpl	.-12     	; 0x30b8 <__fp_rempio2+0x40>
    30c4:	90 48       	sbci	r25, 0x80	; 128
    30c6:	0c 94 2a 19 	jmp	0x3254	; 0x3254 <__fp_mpack_finite>

000030ca <__fp_round>:
    30ca:	09 2e       	mov	r0, r25
    30cc:	03 94       	inc	r0
    30ce:	00 0c       	add	r0, r0
    30d0:	11 f4       	brne	.+4      	; 0x30d6 <__fp_round+0xc>
    30d2:	88 23       	and	r24, r24
    30d4:	52 f0       	brmi	.+20     	; 0x30ea <__fp_round+0x20>
    30d6:	bb 0f       	add	r27, r27
    30d8:	40 f4       	brcc	.+16     	; 0x30ea <__fp_round+0x20>
    30da:	bf 2b       	or	r27, r31
    30dc:	11 f4       	brne	.+4      	; 0x30e2 <__fp_round+0x18>
    30de:	60 ff       	sbrs	r22, 0
    30e0:	04 c0       	rjmp	.+8      	; 0x30ea <__fp_round+0x20>
    30e2:	6f 5f       	subi	r22, 0xFF	; 255
    30e4:	7f 4f       	sbci	r23, 0xFF	; 255
    30e6:	8f 4f       	sbci	r24, 0xFF	; 255
    30e8:	9f 4f       	sbci	r25, 0xFF	; 255
    30ea:	08 95       	ret

000030ec <__fp_sinus>:
    30ec:	ef 93       	push	r30
    30ee:	e0 ff       	sbrs	r30, 0
    30f0:	07 c0       	rjmp	.+14     	; 0x3100 <__fp_sinus+0x14>
    30f2:	a2 ea       	ldi	r26, 0xA2	; 162
    30f4:	2a ed       	ldi	r18, 0xDA	; 218
    30f6:	3f e0       	ldi	r19, 0x0F	; 15
    30f8:	49 ec       	ldi	r20, 0xC9	; 201
    30fa:	5f eb       	ldi	r21, 0xBF	; 191
    30fc:	0e 94 56 17 	call	0x2eac	; 0x2eac <__addsf3x>
    3100:	0e 94 65 18 	call	0x30ca	; 0x30ca <__fp_round>
    3104:	0f 90       	pop	r0
    3106:	03 94       	inc	r0
    3108:	01 fc       	sbrc	r0, 1
    310a:	90 58       	subi	r25, 0x80	; 128
    310c:	e4 e5       	ldi	r30, 0x54	; 84
    310e:	f0 e0       	ldi	r31, 0x00	; 0
    3110:	0c 94 36 19 	jmp	0x326c	; 0x326c <__fp_powsodd>

00003114 <__fp_split3>:
    3114:	57 fd       	sbrc	r21, 7
    3116:	90 58       	subi	r25, 0x80	; 128
    3118:	44 0f       	add	r20, r20
    311a:	55 1f       	adc	r21, r21
    311c:	59 f0       	breq	.+22     	; 0x3134 <__fp_splitA+0x10>
    311e:	5f 3f       	cpi	r21, 0xFF	; 255
    3120:	71 f0       	breq	.+28     	; 0x313e <__fp_splitA+0x1a>
    3122:	47 95       	ror	r20

00003124 <__fp_splitA>:
    3124:	88 0f       	add	r24, r24
    3126:	97 fb       	bst	r25, 7
    3128:	99 1f       	adc	r25, r25
    312a:	61 f0       	breq	.+24     	; 0x3144 <__fp_splitA+0x20>
    312c:	9f 3f       	cpi	r25, 0xFF	; 255
    312e:	79 f0       	breq	.+30     	; 0x314e <__fp_splitA+0x2a>
    3130:	87 95       	ror	r24
    3132:	08 95       	ret
    3134:	12 16       	cp	r1, r18
    3136:	13 06       	cpc	r1, r19
    3138:	14 06       	cpc	r1, r20
    313a:	55 1f       	adc	r21, r21
    313c:	f2 cf       	rjmp	.-28     	; 0x3122 <__fp_split3+0xe>
    313e:	46 95       	lsr	r20
    3140:	f1 df       	rcall	.-30     	; 0x3124 <__fp_splitA>
    3142:	08 c0       	rjmp	.+16     	; 0x3154 <__fp_splitA+0x30>
    3144:	16 16       	cp	r1, r22
    3146:	17 06       	cpc	r1, r23
    3148:	18 06       	cpc	r1, r24
    314a:	99 1f       	adc	r25, r25
    314c:	f1 cf       	rjmp	.-30     	; 0x3130 <__fp_splitA+0xc>
    314e:	86 95       	lsr	r24
    3150:	71 05       	cpc	r23, r1
    3152:	61 05       	cpc	r22, r1
    3154:	08 94       	sec
    3156:	08 95       	ret

00003158 <__fp_zero>:
    3158:	e8 94       	clt

0000315a <__fp_szero>:
    315a:	bb 27       	eor	r27, r27
    315c:	66 27       	eor	r22, r22
    315e:	77 27       	eor	r23, r23
    3160:	cb 01       	movw	r24, r22
    3162:	97 f9       	bld	r25, 7
    3164:	08 95       	ret

00003166 <__mulsf3>:
    3166:	0e 94 c6 18 	call	0x318c	; 0x318c <__mulsf3x>
    316a:	0c 94 65 18 	jmp	0x30ca	; 0x30ca <__fp_round>
    316e:	0e 94 2c 18 	call	0x3058	; 0x3058 <__fp_pscA>
    3172:	38 f0       	brcs	.+14     	; 0x3182 <__mulsf3+0x1c>
    3174:	0e 94 33 18 	call	0x3066	; 0x3066 <__fp_pscB>
    3178:	20 f0       	brcs	.+8      	; 0x3182 <__mulsf3+0x1c>
    317a:	95 23       	and	r25, r21
    317c:	11 f0       	breq	.+4      	; 0x3182 <__mulsf3+0x1c>
    317e:	0c 94 23 18 	jmp	0x3046	; 0x3046 <__fp_inf>
    3182:	0c 94 29 18 	jmp	0x3052	; 0x3052 <__fp_nan>
    3186:	11 24       	eor	r1, r1
    3188:	0c 94 ad 18 	jmp	0x315a	; 0x315a <__fp_szero>

0000318c <__mulsf3x>:
    318c:	0e 94 8a 18 	call	0x3114	; 0x3114 <__fp_split3>
    3190:	70 f3       	brcs	.-36     	; 0x316e <__mulsf3+0x8>

00003192 <__mulsf3_pse>:
    3192:	95 9f       	mul	r25, r21
    3194:	c1 f3       	breq	.-16     	; 0x3186 <__mulsf3+0x20>
    3196:	95 0f       	add	r25, r21
    3198:	50 e0       	ldi	r21, 0x00	; 0
    319a:	55 1f       	adc	r21, r21
    319c:	62 9f       	mul	r22, r18
    319e:	f0 01       	movw	r30, r0
    31a0:	72 9f       	mul	r23, r18
    31a2:	bb 27       	eor	r27, r27
    31a4:	f0 0d       	add	r31, r0
    31a6:	b1 1d       	adc	r27, r1
    31a8:	63 9f       	mul	r22, r19
    31aa:	aa 27       	eor	r26, r26
    31ac:	f0 0d       	add	r31, r0
    31ae:	b1 1d       	adc	r27, r1
    31b0:	aa 1f       	adc	r26, r26
    31b2:	64 9f       	mul	r22, r20
    31b4:	66 27       	eor	r22, r22
    31b6:	b0 0d       	add	r27, r0
    31b8:	a1 1d       	adc	r26, r1
    31ba:	66 1f       	adc	r22, r22
    31bc:	82 9f       	mul	r24, r18
    31be:	22 27       	eor	r18, r18
    31c0:	b0 0d       	add	r27, r0
    31c2:	a1 1d       	adc	r26, r1
    31c4:	62 1f       	adc	r22, r18
    31c6:	73 9f       	mul	r23, r19
    31c8:	b0 0d       	add	r27, r0
    31ca:	a1 1d       	adc	r26, r1
    31cc:	62 1f       	adc	r22, r18
    31ce:	83 9f       	mul	r24, r19
    31d0:	a0 0d       	add	r26, r0
    31d2:	61 1d       	adc	r22, r1
    31d4:	22 1f       	adc	r18, r18
    31d6:	74 9f       	mul	r23, r20
    31d8:	33 27       	eor	r19, r19
    31da:	a0 0d       	add	r26, r0
    31dc:	61 1d       	adc	r22, r1
    31de:	23 1f       	adc	r18, r19
    31e0:	84 9f       	mul	r24, r20
    31e2:	60 0d       	add	r22, r0
    31e4:	21 1d       	adc	r18, r1
    31e6:	82 2f       	mov	r24, r18
    31e8:	76 2f       	mov	r23, r22
    31ea:	6a 2f       	mov	r22, r26
    31ec:	11 24       	eor	r1, r1
    31ee:	9f 57       	subi	r25, 0x7F	; 127
    31f0:	50 40       	sbci	r21, 0x00	; 0
    31f2:	9a f0       	brmi	.+38     	; 0x321a <__mulsf3_pse+0x88>
    31f4:	f1 f0       	breq	.+60     	; 0x3232 <__mulsf3_pse+0xa0>
    31f6:	88 23       	and	r24, r24
    31f8:	4a f0       	brmi	.+18     	; 0x320c <__mulsf3_pse+0x7a>
    31fa:	ee 0f       	add	r30, r30
    31fc:	ff 1f       	adc	r31, r31
    31fe:	bb 1f       	adc	r27, r27
    3200:	66 1f       	adc	r22, r22
    3202:	77 1f       	adc	r23, r23
    3204:	88 1f       	adc	r24, r24
    3206:	91 50       	subi	r25, 0x01	; 1
    3208:	50 40       	sbci	r21, 0x00	; 0
    320a:	a9 f7       	brne	.-22     	; 0x31f6 <__mulsf3_pse+0x64>
    320c:	9e 3f       	cpi	r25, 0xFE	; 254
    320e:	51 05       	cpc	r21, r1
    3210:	80 f0       	brcs	.+32     	; 0x3232 <__mulsf3_pse+0xa0>
    3212:	0c 94 23 18 	jmp	0x3046	; 0x3046 <__fp_inf>
    3216:	0c 94 ad 18 	jmp	0x315a	; 0x315a <__fp_szero>
    321a:	5f 3f       	cpi	r21, 0xFF	; 255
    321c:	e4 f3       	brlt	.-8      	; 0x3216 <__mulsf3_pse+0x84>
    321e:	98 3e       	cpi	r25, 0xE8	; 232
    3220:	d4 f3       	brlt	.-12     	; 0x3216 <__mulsf3_pse+0x84>
    3222:	86 95       	lsr	r24
    3224:	77 95       	ror	r23
    3226:	67 95       	ror	r22
    3228:	b7 95       	ror	r27
    322a:	f7 95       	ror	r31
    322c:	e7 95       	ror	r30
    322e:	9f 5f       	subi	r25, 0xFF	; 255
    3230:	c1 f7       	brne	.-16     	; 0x3222 <__mulsf3_pse+0x90>
    3232:	fe 2b       	or	r31, r30
    3234:	88 0f       	add	r24, r24
    3236:	91 1d       	adc	r25, r1
    3238:	96 95       	lsr	r25
    323a:	87 95       	ror	r24
    323c:	97 f9       	bld	r25, 7
    323e:	08 95       	ret

00003240 <sin>:
    3240:	9f 93       	push	r25
    3242:	0e 94 3c 18 	call	0x3078	; 0x3078 <__fp_rempio2>
    3246:	0f 90       	pop	r0
    3248:	07 fc       	sbrc	r0, 7
    324a:	ee 5f       	subi	r30, 0xFE	; 254
    324c:	0c 94 76 18 	jmp	0x30ec	; 0x30ec <__fp_sinus>

00003250 <__fp_mpack>:
    3250:	9f 3f       	cpi	r25, 0xFF	; 255
    3252:	31 f0       	breq	.+12     	; 0x3260 <__fp_mpack_finite+0xc>

00003254 <__fp_mpack_finite>:
    3254:	91 50       	subi	r25, 0x01	; 1
    3256:	20 f4       	brcc	.+8      	; 0x3260 <__fp_mpack_finite+0xc>
    3258:	87 95       	ror	r24
    325a:	77 95       	ror	r23
    325c:	67 95       	ror	r22
    325e:	b7 95       	ror	r27
    3260:	88 0f       	add	r24, r24
    3262:	91 1d       	adc	r25, r1
    3264:	96 95       	lsr	r25
    3266:	87 95       	ror	r24
    3268:	97 f9       	bld	r25, 7
    326a:	08 95       	ret

0000326c <__fp_powsodd>:
    326c:	9f 93       	push	r25
    326e:	8f 93       	push	r24
    3270:	7f 93       	push	r23
    3272:	6f 93       	push	r22
    3274:	ff 93       	push	r31
    3276:	ef 93       	push	r30
    3278:	9b 01       	movw	r18, r22
    327a:	ac 01       	movw	r20, r24
    327c:	0e 94 b3 18 	call	0x3166	; 0x3166 <__mulsf3>
    3280:	ef 91       	pop	r30
    3282:	ff 91       	pop	r31
    3284:	0e 94 4a 19 	call	0x3294	; 0x3294 <__fp_powser>
    3288:	2f 91       	pop	r18
    328a:	3f 91       	pop	r19
    328c:	4f 91       	pop	r20
    328e:	5f 91       	pop	r21
    3290:	0c 94 b3 18 	jmp	0x3166	; 0x3166 <__mulsf3>

00003294 <__fp_powser>:
    3294:	df 93       	push	r29
    3296:	cf 93       	push	r28
    3298:	1f 93       	push	r17
    329a:	0f 93       	push	r16
    329c:	ff 92       	push	r15
    329e:	ef 92       	push	r14
    32a0:	df 92       	push	r13
    32a2:	7b 01       	movw	r14, r22
    32a4:	8c 01       	movw	r16, r24
    32a6:	68 94       	set
    32a8:	06 c0       	rjmp	.+12     	; 0x32b6 <__fp_powser+0x22>
    32aa:	da 2e       	mov	r13, r26
    32ac:	ef 01       	movw	r28, r30
    32ae:	0e 94 c6 18 	call	0x318c	; 0x318c <__mulsf3x>
    32b2:	fe 01       	movw	r30, r28
    32b4:	e8 94       	clt
    32b6:	a5 91       	lpm	r26, Z+
    32b8:	25 91       	lpm	r18, Z+
    32ba:	35 91       	lpm	r19, Z+
    32bc:	45 91       	lpm	r20, Z+
    32be:	55 91       	lpm	r21, Z+
    32c0:	a6 f3       	brts	.-24     	; 0x32aa <__fp_powser+0x16>
    32c2:	ef 01       	movw	r28, r30
    32c4:	0e 94 56 17 	call	0x2eac	; 0x2eac <__addsf3x>
    32c8:	fe 01       	movw	r30, r28
    32ca:	97 01       	movw	r18, r14
    32cc:	a8 01       	movw	r20, r16
    32ce:	da 94       	dec	r13
    32d0:	69 f7       	brne	.-38     	; 0x32ac <__fp_powser+0x18>
    32d2:	df 90       	pop	r13
    32d4:	ef 90       	pop	r14
    32d6:	ff 90       	pop	r15
    32d8:	0f 91       	pop	r16
    32da:	1f 91       	pop	r17
    32dc:	cf 91       	pop	r28
    32de:	df 91       	pop	r29
    32e0:	08 95       	ret

000032e2 <__mulsi3>:
    32e2:	db 01       	movw	r26, r22
    32e4:	8f 93       	push	r24
    32e6:	9f 93       	push	r25
    32e8:	0e 94 a3 19 	call	0x3346	; 0x3346 <__muluhisi3>
    32ec:	bf 91       	pop	r27
    32ee:	af 91       	pop	r26
    32f0:	a2 9f       	mul	r26, r18
    32f2:	80 0d       	add	r24, r0
    32f4:	91 1d       	adc	r25, r1
    32f6:	a3 9f       	mul	r26, r19
    32f8:	90 0d       	add	r25, r0
    32fa:	b2 9f       	mul	r27, r18
    32fc:	90 0d       	add	r25, r0
    32fe:	11 24       	eor	r1, r1
    3300:	08 95       	ret

00003302 <__udivmodsi4>:
    3302:	a1 e2       	ldi	r26, 0x21	; 33
    3304:	1a 2e       	mov	r1, r26
    3306:	aa 1b       	sub	r26, r26
    3308:	bb 1b       	sub	r27, r27
    330a:	fd 01       	movw	r30, r26
    330c:	0d c0       	rjmp	.+26     	; 0x3328 <__udivmodsi4_ep>

0000330e <__udivmodsi4_loop>:
    330e:	aa 1f       	adc	r26, r26
    3310:	bb 1f       	adc	r27, r27
    3312:	ee 1f       	adc	r30, r30
    3314:	ff 1f       	adc	r31, r31
    3316:	a2 17       	cp	r26, r18
    3318:	b3 07       	cpc	r27, r19
    331a:	e4 07       	cpc	r30, r20
    331c:	f5 07       	cpc	r31, r21
    331e:	20 f0       	brcs	.+8      	; 0x3328 <__udivmodsi4_ep>
    3320:	a2 1b       	sub	r26, r18
    3322:	b3 0b       	sbc	r27, r19
    3324:	e4 0b       	sbc	r30, r20
    3326:	f5 0b       	sbc	r31, r21

00003328 <__udivmodsi4_ep>:
    3328:	66 1f       	adc	r22, r22
    332a:	77 1f       	adc	r23, r23
    332c:	88 1f       	adc	r24, r24
    332e:	99 1f       	adc	r25, r25
    3330:	1a 94       	dec	r1
    3332:	69 f7       	brne	.-38     	; 0x330e <__udivmodsi4_loop>
    3334:	60 95       	com	r22
    3336:	70 95       	com	r23
    3338:	80 95       	com	r24
    333a:	90 95       	com	r25
    333c:	9b 01       	movw	r18, r22
    333e:	ac 01       	movw	r20, r24
    3340:	bd 01       	movw	r22, r26
    3342:	cf 01       	movw	r24, r30
    3344:	08 95       	ret

00003346 <__muluhisi3>:
    3346:	0e 94 bc 19 	call	0x3378	; 0x3378 <__umulhisi3>
    334a:	a5 9f       	mul	r26, r21
    334c:	90 0d       	add	r25, r0
    334e:	b4 9f       	mul	r27, r20
    3350:	90 0d       	add	r25, r0
    3352:	a4 9f       	mul	r26, r20
    3354:	80 0d       	add	r24, r0
    3356:	91 1d       	adc	r25, r1
    3358:	11 24       	eor	r1, r1
    335a:	08 95       	ret

0000335c <__mulshisi3>:
    335c:	b7 ff       	sbrs	r27, 7
    335e:	0c 94 a3 19 	jmp	0x3346	; 0x3346 <__muluhisi3>

00003362 <__mulohisi3>:
    3362:	0e 94 a3 19 	call	0x3346	; 0x3346 <__muluhisi3>
    3366:	82 1b       	sub	r24, r18
    3368:	93 0b       	sbc	r25, r19
    336a:	08 95       	ret

0000336c <__tablejump2__>:
    336c:	ee 0f       	add	r30, r30
    336e:	ff 1f       	adc	r31, r31
    3370:	05 90       	lpm	r0, Z+
    3372:	f4 91       	lpm	r31, Z
    3374:	e0 2d       	mov	r30, r0
    3376:	09 94       	ijmp

00003378 <__umulhisi3>:
    3378:	a2 9f       	mul	r26, r18
    337a:	b0 01       	movw	r22, r0
    337c:	b3 9f       	mul	r27, r19
    337e:	c0 01       	movw	r24, r0
    3380:	a3 9f       	mul	r26, r19
    3382:	70 0d       	add	r23, r0
    3384:	81 1d       	adc	r24, r1
    3386:	11 24       	eor	r1, r1
    3388:	91 1d       	adc	r25, r1
    338a:	b2 9f       	mul	r27, r18
    338c:	70 0d       	add	r23, r0
    338e:	81 1d       	adc	r24, r1
    3390:	11 24       	eor	r1, r1
    3392:	91 1d       	adc	r25, r1
    3394:	08 95       	ret

00003396 <do_rand>:
    3396:	8f 92       	push	r8
    3398:	9f 92       	push	r9
    339a:	af 92       	push	r10
    339c:	bf 92       	push	r11
    339e:	cf 92       	push	r12
    33a0:	df 92       	push	r13
    33a2:	ef 92       	push	r14
    33a4:	ff 92       	push	r15
    33a6:	cf 93       	push	r28
    33a8:	df 93       	push	r29
    33aa:	ec 01       	movw	r28, r24
    33ac:	68 81       	ld	r22, Y
    33ae:	79 81       	ldd	r23, Y+1	; 0x01
    33b0:	8a 81       	ldd	r24, Y+2	; 0x02
    33b2:	9b 81       	ldd	r25, Y+3	; 0x03
    33b4:	61 15       	cp	r22, r1
    33b6:	71 05       	cpc	r23, r1
    33b8:	81 05       	cpc	r24, r1
    33ba:	91 05       	cpc	r25, r1
    33bc:	21 f4       	brne	.+8      	; 0x33c6 <do_rand+0x30>
    33be:	64 e2       	ldi	r22, 0x24	; 36
    33c0:	79 ed       	ldi	r23, 0xD9	; 217
    33c2:	8b e5       	ldi	r24, 0x5B	; 91
    33c4:	97 e0       	ldi	r25, 0x07	; 7
    33c6:	2d e1       	ldi	r18, 0x1D	; 29
    33c8:	33 ef       	ldi	r19, 0xF3	; 243
    33ca:	41 e0       	ldi	r20, 0x01	; 1
    33cc:	50 e0       	ldi	r21, 0x00	; 0
    33ce:	0e 94 27 1a 	call	0x344e	; 0x344e <__divmodsi4>
    33d2:	49 01       	movw	r8, r18
    33d4:	5a 01       	movw	r10, r20
    33d6:	9b 01       	movw	r18, r22
    33d8:	ac 01       	movw	r20, r24
    33da:	a7 ea       	ldi	r26, 0xA7	; 167
    33dc:	b1 e4       	ldi	r27, 0x41	; 65
    33de:	0e 94 a3 19 	call	0x3346	; 0x3346 <__muluhisi3>
    33e2:	6b 01       	movw	r12, r22
    33e4:	7c 01       	movw	r14, r24
    33e6:	ac ee       	ldi	r26, 0xEC	; 236
    33e8:	b4 ef       	ldi	r27, 0xF4	; 244
    33ea:	a5 01       	movw	r20, r10
    33ec:	94 01       	movw	r18, r8
    33ee:	0e 94 b1 19 	call	0x3362	; 0x3362 <__mulohisi3>
    33f2:	dc 01       	movw	r26, r24
    33f4:	cb 01       	movw	r24, r22
    33f6:	8c 0d       	add	r24, r12
    33f8:	9d 1d       	adc	r25, r13
    33fa:	ae 1d       	adc	r26, r14
    33fc:	bf 1d       	adc	r27, r15
    33fe:	b7 ff       	sbrs	r27, 7
    3400:	03 c0       	rjmp	.+6      	; 0x3408 <do_rand+0x72>
    3402:	01 97       	sbiw	r24, 0x01	; 1
    3404:	a1 09       	sbc	r26, r1
    3406:	b0 48       	sbci	r27, 0x80	; 128
    3408:	88 83       	st	Y, r24
    340a:	99 83       	std	Y+1, r25	; 0x01
    340c:	aa 83       	std	Y+2, r26	; 0x02
    340e:	bb 83       	std	Y+3, r27	; 0x03
    3410:	9f 77       	andi	r25, 0x7F	; 127
    3412:	df 91       	pop	r29
    3414:	cf 91       	pop	r28
    3416:	ff 90       	pop	r15
    3418:	ef 90       	pop	r14
    341a:	df 90       	pop	r13
    341c:	cf 90       	pop	r12
    341e:	bf 90       	pop	r11
    3420:	af 90       	pop	r10
    3422:	9f 90       	pop	r9
    3424:	8f 90       	pop	r8
    3426:	08 95       	ret

00003428 <rand_r>:
    3428:	0e 94 cb 19 	call	0x3396	; 0x3396 <do_rand>
    342c:	08 95       	ret

0000342e <rand>:
    342e:	80 e6       	ldi	r24, 0x60	; 96
    3430:	90 e0       	ldi	r25, 0x00	; 0
    3432:	0e 94 cb 19 	call	0x3396	; 0x3396 <do_rand>
    3436:	08 95       	ret

00003438 <srand>:
    3438:	a0 e0       	ldi	r26, 0x00	; 0
    343a:	b0 e0       	ldi	r27, 0x00	; 0
    343c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    3440:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    3444:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    3448:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
    344c:	08 95       	ret

0000344e <__divmodsi4>:
    344e:	05 2e       	mov	r0, r21
    3450:	97 fb       	bst	r25, 7
    3452:	1e f4       	brtc	.+6      	; 0x345a <__divmodsi4+0xc>
    3454:	00 94       	com	r0
    3456:	0e 94 3e 1a 	call	0x347c	; 0x347c <__negsi2>
    345a:	57 fd       	sbrc	r21, 7
    345c:	07 d0       	rcall	.+14     	; 0x346c <__divmodsi4_neg2>
    345e:	0e 94 81 19 	call	0x3302	; 0x3302 <__udivmodsi4>
    3462:	07 fc       	sbrc	r0, 7
    3464:	03 d0       	rcall	.+6      	; 0x346c <__divmodsi4_neg2>
    3466:	4e f4       	brtc	.+18     	; 0x347a <__divmodsi4_exit>
    3468:	0c 94 3e 1a 	jmp	0x347c	; 0x347c <__negsi2>

0000346c <__divmodsi4_neg2>:
    346c:	50 95       	com	r21
    346e:	40 95       	com	r20
    3470:	30 95       	com	r19
    3472:	21 95       	neg	r18
    3474:	3f 4f       	sbci	r19, 0xFF	; 255
    3476:	4f 4f       	sbci	r20, 0xFF	; 255
    3478:	5f 4f       	sbci	r21, 0xFF	; 255

0000347a <__divmodsi4_exit>:
    347a:	08 95       	ret

0000347c <__negsi2>:
    347c:	90 95       	com	r25
    347e:	80 95       	com	r24
    3480:	70 95       	com	r23
    3482:	61 95       	neg	r22
    3484:	7f 4f       	sbci	r23, 0xFF	; 255
    3486:	8f 4f       	sbci	r24, 0xFF	; 255
    3488:	9f 4f       	sbci	r25, 0xFF	; 255
    348a:	08 95       	ret

0000348c <_exit>:
    348c:	f8 94       	cli

0000348e <__stop_program>:
    348e:	ff cf       	rjmp	.-2      	; 0x348e <__stop_program>
